const flask = [
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "add_template_filter",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.add_template_filter">\n  <span class="sig-name descname">\n   <span class="pre">\n    add_template_filter\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     f\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     name\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     None\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.add_template_filter" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Register a custom template filter.  Works exactly like the\n   <a class="reference internal" href="#flask.Flask.template_filter" title="flask.Flask.template_filter">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      template_filter()\n     </span>\n    </code>\n   </a>\n   decorator.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        name\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n        <em>\n         Optional\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       ) \u00e2\u0080\u0093 the optional name of the filter, otherwise the\nfunction name will be used.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        f\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Callable" title="(in Python v3.11)">\n        <em>\n         Callable\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <em>\n        [\n       </em>\n       <em>\n        ...\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     None\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "add_template_global",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.add_template_global">\n  <span class="sig-name descname">\n   <span class="pre">\n    add_template_global\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     f\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     name\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     None\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.add_template_global" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Register a custom template global function. Works exactly like the\n   <a class="reference internal" href="#flask.Flask.template_global" title="flask.Flask.template_global">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      template_global()\n     </span>\n    </code>\n   </a>\n   decorator.\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.10.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        name\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n        <em>\n         Optional\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       ) \u00e2\u0080\u0093 the optional name of the global function, otherwise the\nfunction name will be used.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        f\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Callable" title="(in Python v3.11)">\n        <em>\n         Callable\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <em>\n        [\n       </em>\n       <em>\n        ...\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     None\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "add_template_test",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.add_template_test">\n  <span class="sig-name descname">\n   <span class="pre">\n    add_template_test\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     f\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     name\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     None\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.add_template_test" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Register a custom template test.  Works exactly like the\n   <a class="reference internal" href="#flask.Flask.template_test" title="flask.Flask.template_test">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      template_test()\n     </span>\n    </code>\n   </a>\n   decorator.\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.10.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        name\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n        <em>\n         Optional\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       ) \u00e2\u0080\u0093 the optional name of the test, otherwise the\nfunction name will be used.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        f\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Callable" title="(in Python v3.11)">\n        <em>\n         Callable\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <em>\n        [\n       </em>\n       <em>\n        ...\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/functions.html#bool" title="(in Python v3.11)">\n        <em>\n         bool\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     None\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "add_url_rule",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.add_url_rule">\n  <span class="sig-name descname">\n   <span class="pre">\n    add_url_rule\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     rule\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     endpoint\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     None\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     view_func\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     None\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     provide_automatic_options\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     None\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="o">\n    <span class="pre">\n     **\n    </span>\n   </span>\n   <span class="n">\n    <span class="pre">\n     options\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.add_url_rule" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Register a rule for routing incoming requests and building\nURLs. The\n   <a class="reference internal" href="#flask.Flask.route" title="flask.Flask.route">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      route()\n     </span>\n    </code>\n   </a>\n   decorator is a shortcut to call this\nwith the\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     view_func\n    </span>\n   </code>\n   argument. These are equivalent:\n  </p>\n  <div class="highlight-python notranslate">\n   <div class="highlight">\n    <pre><span></span><span class="nd">@app</span><span class="o">.</span><span class="n">route</span><span class="p">(</span><span class="s2">"/"</span><span class="p">)</span>\n<span class="k">def</span> <span class="nf">index</span><span class="p">():</span>\n    <span class="o">...</span>\n</pre>\n   </div>\n  </div>\n  <div class="highlight-python notranslate">\n   <div class="highlight">\n    <pre><span></span><span class="k">def</span> <span class="nf">index</span><span class="p">():</span>\n    <span class="o">...</span>\n\n<span class="n">app</span><span class="o">.</span><span class="n">add_url_rule</span><span class="p">(</span><span class="s2">"/"</span><span class="p">,</span> <span class="n">view_func</span><span class="o">=</span><span class="n">index</span><span class="p">)</span>\n</pre>\n   </div>\n  </div>\n  <p>\n   See\n   <a class="reference internal" href="#url-route-registrations">\n    <span class="std std-ref">\n     URL Route Registrations\n    </span>\n   </a>\n   .\n  </p>\n  <p>\n   The endpoint name for the route defaults to the name of the view\nfunction if the\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     endpoint\n    </span>\n   </code>\n   parameter isn\u00e2\u0080\u0099t passed. An error\nwill be raised if a function has already been registered for the\nendpoint.\n  </p>\n  <p>\n   The\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     methods\n    </span>\n   </code>\n   parameter defaults to\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     ["GET"]\n    </span>\n   </code>\n   .\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     HEAD\n    </span>\n   </code>\n   is\nalways added automatically, and\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     OPTIONS\n    </span>\n   </code>\n   is added\nautomatically by default.\n  </p>\n  <p>\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     view_func\n    </span>\n   </code>\n   does not necessarily need to be passed, but if the\nrule should participate in routing an endpoint name must be\nassociated with a view function at some point with the\n   <a class="reference internal" href="#flask.Flask.endpoint" title="flask.Flask.endpoint">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      endpoint()\n     </span>\n    </code>\n   </a>\n   decorator.\n  </p>\n  <div class="highlight-python notranslate">\n   <div class="highlight">\n    <pre><span></span><span class="n">app</span><span class="o">.</span><span class="n">add_url_rule</span><span class="p">(</span><span class="s2">"/"</span><span class="p">,</span> <span class="n">endpoint</span><span class="o">=</span><span class="s2">"index"</span><span class="p">)</span>\n\n<span class="nd">@app</span><span class="o">.</span><span class="n">endpoint</span><span class="p">(</span><span class="s2">"index"</span><span class="p">)</span>\n<span class="k">def</span> <span class="nf">index</span><span class="p">():</span>\n    <span class="o">...</span>\n</pre>\n   </div>\n  </div>\n  <p>\n   If\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     view_func\n    </span>\n   </code>\n   has a\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     required_methods\n    </span>\n   </code>\n   attribute, those\nmethods are added to the passed and automatic methods. If it\nhas a\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     provide_automatic_methods\n    </span>\n   </code>\n   attribute, it is used as the\ndefault if the parameter is not passed.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        rule\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 The URL rule string.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        endpoint\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n        <em>\n         Optional\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       ) \u00e2\u0080\u0093 The endpoint name to associate with the rule\nand view function. Used when routing and building URLs.\nDefaults to\n       <code class="docutils literal notranslate">\n        <span class="pre">\n         view_func.__name__\n        </span>\n       </code>\n       .\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        view_func\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n        <em>\n         Optional\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Callable" title="(in Python v3.11)">\n        <em>\n         Callable\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <em>\n        [\n       </em>\n       <em>\n        ...\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference internal" href="#flask.Response" title="flask.Response">\n        <em>\n         Response\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n        <em>\n         bytes\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n        <em>\n         List\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n        <em>\n         Mapping\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n        <em>\n         Iterator\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n        <em>\n         Iterator\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n        <em>\n         bytes\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n        <em>\n         Tuple\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference internal" href="#flask.Response" title="flask.Response">\n        <em>\n         Response\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n        <em>\n         bytes\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n        <em>\n         List\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n        <em>\n         Mapping\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n        <em>\n         Iterator\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n        <em>\n         Iterator\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n        <em>\n         bytes\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <em>\n        Headers\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n        <em>\n         Mapping\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n        <em>\n         List\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n        <em>\n         Tuple\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <em>\n        ...\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Sequence" title="(in Python v3.11)">\n        <em>\n         Sequence\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n        <em>\n         Tuple\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n        <em>\n         List\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n        <em>\n         Tuple\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <em>\n        ...\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n        <em>\n         Tuple\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference internal" href="#flask.Response" title="flask.Response">\n        <em>\n         Response\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n        <em>\n         bytes\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n        <em>\n         List\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n        <em>\n         Mapping\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n        <em>\n         Iterator\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n        <em>\n         Iterator\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n        <em>\n         bytes\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/functions.html#int" title="(in Python v3.11)">\n        <em>\n         int\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n        <em>\n         Tuple\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference internal" href="#flask.Response" title="flask.Response">\n        <em>\n         Response\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n        <em>\n         bytes\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n        <em>\n         List\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n        <em>\n         Mapping\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n        <em>\n         Iterator\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n        <em>\n         Iterator\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n        <em>\n         bytes\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/functions.html#int" title="(in Python v3.11)">\n        <em>\n         int\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <em>\n        Headers\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n        <em>\n         Mapping\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n        <em>\n         List\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n        <em>\n         Tuple\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <em>\n        ...\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Sequence" title="(in Python v3.11)">\n        <em>\n         Sequence\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n        <em>\n         Tuple\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n        <em>\n         List\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n        <em>\n         Tuple\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <em>\n        ...\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <em>\n        WSGIApplication\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Callable" title="(in Python v3.11)">\n        <em>\n         Callable\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <em>\n        [\n       </em>\n       <em>\n        ...\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Awaitable" title="(in Python v3.11)">\n        <em>\n         Awaitable\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference internal" href="#flask.Response" title="flask.Response">\n        <em>\n         Response\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n        <em>\n         bytes\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n        <em>\n         List\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n        <em>\n         Mapping\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n        <em>\n         Iterator\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n        <em>\n         Iterator\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n        <em>\n         bytes\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n        <em>\n         Tuple\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference internal" href="#flask.Response" title="flask.Response">\n        <em>\n         Response\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n        <em>\n         bytes\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n        <em>\n         List\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n        <em>\n         Mapping\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n        <em>\n         Iterator\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n        <em>\n         Iterator\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n        <em>\n         bytes\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <em>\n        Headers\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n        <em>\n         Mapping\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n        <em>\n         List\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n        <em>\n         Tuple\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <em>\n        ...\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Sequence" title="(in Python v3.11)">\n        <em>\n         Sequence\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n        <em>\n         Tuple\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n        <em>\n         List\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n        <em>\n         Tuple\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <em>\n        ...\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n        <em>\n         Tuple\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference internal" href="#flask.Response" title="flask.Response">\n        <em>\n         Response\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n        <em>\n         bytes\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n        <em>\n         List\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n        <em>\n         Mapping\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n        <em>\n         Iterator\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n        <em>\n         Iterator\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n        <em>\n         bytes\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/functions.html#int" title="(in Python v3.11)">\n        <em>\n         int\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n        <em>\n         Tuple\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference internal" href="#flask.Response" title="flask.Response">\n        <em>\n         Response\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n        <em>\n         bytes\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n        <em>\n         List\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n        <em>\n         Mapping\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n        <em>\n         Iterator\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n        <em>\n         Iterator\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n        <em>\n         bytes\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/functions.html#int" title="(in Python v3.11)">\n        <em>\n         int\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <em>\n        Headers\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n        <em>\n         Mapping\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n        <em>\n         List\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n        <em>\n         Tuple\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <em>\n        ...\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Sequence" title="(in Python v3.11)">\n        <em>\n         Sequence\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n        <em>\n         Tuple\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n        <em>\n         List\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n        <em>\n         Tuple\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <em>\n        ...\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <em>\n        WSGIApplication\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       ) \u00e2\u0080\u0093 The view function to associate with the\nendpoint name.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        provide_automatic_options\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n        <em>\n         Optional\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/functions.html#bool" title="(in Python v3.11)">\n        <em>\n         bool\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       ) \u00e2\u0080\u0093 Add the\n       <code class="docutils literal notranslate">\n        <span class="pre">\n         OPTIONS\n        </span>\n       </code>\n       method and\nrespond to\n       <code class="docutils literal notranslate">\n        <span class="pre">\n         OPTIONS\n        </span>\n       </code>\n       requests automatically.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        options\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 Extra options passed to the\n       <a class="reference external" href="https://werkzeug.palletsprojects.com/en/2.2.x/routing/#werkzeug.routing.Rule" title="(in Werkzeug v2.2.x)">\n        <code class="xref py py-class docutils literal notranslate">\n         <span class="pre">\n          Rule\n         </span>\n        </code>\n       </a>\n       object.\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     None\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "after_request",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.after_request">\n  <span class="sig-name descname">\n   <span class="pre">\n    after_request\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     f\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.after_request" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Register a function to run after each request to this object.\n  </p>\n  <p>\n   The function is called with the response object, and must return\na response object. This allows the functions to modify or\nreplace the response before it is sent.\n  </p>\n  <p>\n   If a function raises an exception, any remaining\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     after_request\n    </span>\n   </code>\n   functions will not be called. Therefore, this\nshould not be used for actions that must execute, such as to\nclose resources. Use\n   <a class="reference internal" href="#flask.Flask.teardown_request" title="flask.Flask.teardown_request">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      teardown_request()\n     </span>\n    </code>\n   </a>\n   for that.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      f\n     </strong>\n     (\n     <em>\n      flask.scaffold.T_after_request\n     </em>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     flask.scaffold.T_after_request\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "app_context",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.app_context">\n  <span class="sig-name descname">\n   <span class="pre">\n    app_context\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.app_context" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Create an\n   <a class="reference internal" href="#flask.ctx.AppContext" title="flask.ctx.AppContext">\n    <code class="xref py py-class docutils literal notranslate">\n     <span class="pre">\n      AppContext\n     </span>\n    </code>\n   </a>\n   . Use as a\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     with\n    </span>\n   </code>\n   block to push the context, which will make\n   <a class="reference internal" href="#flask.current_app" title="flask.current_app">\n    <code class="xref py py-data docutils literal notranslate">\n     <span class="pre">\n      current_app\n     </span>\n    </code>\n   </a>\n   point at this application.\n  </p>\n  <p>\n   An application context is automatically pushed by\n   <code class="xref py py-meth docutils literal notranslate">\n    <span class="pre">\n     RequestContext.push()\n    </span>\n   </code>\n   when handling a request, and when running a CLI command. Use\nthis to manually create a context outside of these situations.\n  </p>\n  <div class="highlight-default notranslate">\n   <div class="highlight">\n    <pre><span></span><span class="k">with</span> <span class="n">app</span><span class="o">.</span><span class="n">app_context</span><span class="p">():</span>\n    <span class="n">init_db</span><span class="p">()</span>\n</pre>\n   </div>\n  </div>\n  <p>\n   See\n   <a class="reference internal" href="../appcontext/">\n    <span class="doc">\n     The Application Context\n    </span>\n   </a>\n   .\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.9.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Return type\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <a class="reference internal" href="#flask.ctx.AppContext" title="flask.ctx.AppContext">\n      flask.ctx.AppContext\n     </a>\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "async_to_sync",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.async_to_sync">\n  <span class="sig-name descname">\n   <span class="pre">\n    async_to_sync\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     func\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.async_to_sync" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Return a sync function that will run the coroutine function.\n  </p>\n  <div class="highlight-python notranslate">\n   <div class="highlight">\n    <pre><span></span><span class="n">result</span> <span class="o">=</span> <span class="n">app</span><span class="o">.</span><span class="n">async_to_sync</span><span class="p">(</span><span class="n">func</span><span class="p">)(</span><span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">)</span>\n</pre>\n   </div>\n  </div>\n  <p>\n   Override this method to change how the app converts async code\nto be synchronously callable.\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 2.0.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      func\n     </strong>\n     (\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Callable" title="(in Python v3.11)">\n      <em>\n       Callable\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <em>\n      [\n     </em>\n     <em>\n      ...\n     </em>\n     <em>\n      ]\n     </em>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Coroutine" title="(in Python v3.11)">\n      <em>\n       Coroutine\n      </em>\n     </a>\n     <em>\n      ]\n     </em>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Callable" title="(in Python v3.11)">\n      <em>\n       Callable\n      </em>\n     </a>\n     [[\u00e2\u0080\u00a6],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ]\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "auto_find_instance_path",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.auto_find_instance_path">\n  <span class="sig-name descname">\n   <span class="pre">\n    auto_find_instance_path\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.auto_find_instance_path" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Tries to locate the instance path if it was not provided to the\nconstructor of the application class.  It will basically calculate\nthe path to a folder named\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     instance\n    </span>\n   </code>\n   next to your main file or\nthe package.\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.8.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Return type\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "before_first_request",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.before_first_request">\n  <span class="sig-name descname">\n   <span class="pre">\n    before_first_request\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     f\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.before_first_request" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Registers a function to be run before the first request to this\ninstance of the application.\n  </p>\n  <p>\n   The function will be called without any arguments and its return\nvalue is ignored.\n  </p>\n  <div class="deprecated">\n   <p>\n    <span class="versionmodified deprecated">\n     Deprecated since version 2.2:\n    </span>\n    Will be removed in Flask 2.3. Run setup code when creating\nthe application instead.\n   </p>\n  </div>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.8.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      f\n     </strong>\n     (\n     <em>\n      flask.app.T_before_first_request\n     </em>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     flask.app.T_before_first_request\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "before_request",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.before_request">\n  <span class="sig-name descname">\n   <span class="pre">\n    before_request\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     f\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.before_request" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Register a function to run before each request.\n  </p>\n  <p>\n   For example, this can be used to open a database connection, or\nto load the logged in user from the session.\n  </p>\n  <div class="highlight-python notranslate">\n   <div class="highlight">\n    <pre><span></span><span class="nd">@app</span><span class="o">.</span><span class="n">before_request</span>\n<span class="k">def</span> <span class="nf">load_user</span><span class="p">():</span>\n    <span class="k">if</span> <span class="s2">"user_id"</span> <span class="ow">in</span> <span class="n">session</span><span class="p">:</span>\n        <span class="n">g</span><span class="o">.</span><span class="n">user</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">session</span><span class="p">[</span><span class="s2">"user_id"</span><span class="p">])</span>\n</pre>\n   </div>\n  </div>\n  <p>\n   The function will be called without any arguments. If it returns\na non-\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     None\n    </span>\n   </code>\n   value, the value is handled as if it was the\nreturn value from the view, and further request handling is\nstopped.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      f\n     </strong>\n     (\n     <em>\n      flask.scaffold.T_before_request\n     </em>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     flask.scaffold.T_before_request\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "context_processor",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.context_processor">\n  <span class="sig-name descname">\n   <span class="pre">\n    context_processor\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     f\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.context_processor" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Registers a template context processor function.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      f\n     </strong>\n     (\n     <em>\n      flask.scaffold.T_template_context_processor\n     </em>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     flask.scaffold.T_template_context_processor\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "create_global_jinja_loader",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.create_global_jinja_loader">\n  <span class="sig-name descname">\n   <span class="pre">\n    create_global_jinja_loader\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.create_global_jinja_loader" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Creates the loader for the Jinja2 environment.  Can be used to\noverride just the loader and keeping the rest unchanged.  It\u00e2\u0080\u0099s\ndiscouraged to override this function.  Instead one should override\nthe\n   <a class="reference internal" href="#flask.Flask.jinja_loader" title="flask.Flask.jinja_loader">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      jinja_loader()\n     </span>\n    </code>\n   </a>\n   function instead.\n  </p>\n  <p>\n   The global loader dispatches between the loaders of the application\nand the individual blueprints.\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.7.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Return type\n   </dt>\n   <dd class="field-odd">\n    <p>\n     flask.templating.DispatchingJinjaLoader\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "create_jinja_environment",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.create_jinja_environment">\n  <span class="sig-name descname">\n   <span class="pre">\n    create_jinja_environment\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.create_jinja_environment" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Create the Jinja environment based on\n   <a class="reference internal" href="#flask.Flask.jinja_options" title="flask.Flask.jinja_options">\n    <code class="xref py py-attr docutils literal notranslate">\n     <span class="pre">\n      jinja_options\n     </span>\n    </code>\n   </a>\n   and the various Jinja-related methods of the app. Changing\n   <a class="reference internal" href="#flask.Flask.jinja_options" title="flask.Flask.jinja_options">\n    <code class="xref py py-attr docutils literal notranslate">\n     <span class="pre">\n      jinja_options\n     </span>\n    </code>\n   </a>\n   after this will have no effect. Also adds\nFlask-related globals and filters to the environment.\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionchanged">\n    <p>\n     <span class="versionmodified changed">\n      Changed in version 0.11:\n     </span>\n     <code class="docutils literal notranslate">\n      <span class="pre">\n       Environment.auto_reload\n      </span>\n     </code>\n     set in accordance with\n     <code class="docutils literal notranslate">\n      <span class="pre">\n       TEMPLATES_AUTO_RELOAD\n      </span>\n     </code>\n     configuration option.\n    </p>\n   </div>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.5.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Return type\n   </dt>\n   <dd class="field-odd">\n    <p>\n     flask.templating.Environment\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "create_url_adapter",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.create_url_adapter">\n  <span class="sig-name descname">\n   <span class="pre">\n    create_url_adapter\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     request\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.create_url_adapter" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Creates a URL adapter for the given request. The URL adapter\nis created at a point where the request context is not yet set\nup so the request is passed explicitly.\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionchanged">\n    <p>\n     <span class="versionmodified changed">\n      Changed in version 1.0:\n     </span>\n     <a class="reference internal" href="../config/#SERVER_NAME" title="SERVER_NAME">\n      <code class="xref py py-data docutils literal notranslate">\n       <span class="pre">\n        SERVER_NAME\n       </span>\n      </code>\n     </a>\n     no longer implicitly enables subdomain\nmatching. Use\n     <code class="xref py py-attr docutils literal notranslate">\n      <span class="pre">\n       subdomain_matching\n      </span>\n     </code>\n     instead.\n    </p>\n   </div>\n   <div class="versionchanged">\n    <p>\n     <span class="versionmodified changed">\n      Changed in version 0.9:\n     </span>\n     This can now also be called without a request object when the\nURL adapter is created for the application context.\n    </p>\n   </div>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.6.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      request\n     </strong>\n     (\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n      <em>\n       Optional\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference internal" href="#flask.Request" title="flask.wrappers.Request">\n      <em>\n       flask.wrappers.Request\n      </em>\n     </a>\n     <em>\n      ]\n     </em>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n      <em>\n       Optional\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://werkzeug.palletsprojects.com/en/2.2.x/routing/#werkzeug.routing.MapAdapter" title="(in Werkzeug v2.2.x)">\n      werkzeug.routing.map.MapAdapter\n     </a>\n     ]\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "delete",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.delete">\n  <span class="sig-name descname">\n   <span class="pre">\n    delete\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     rule\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="o">\n    <span class="pre">\n     **\n    </span>\n   </span>\n   <span class="n">\n    <span class="pre">\n     options\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.delete" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Shortcut for\n   <a class="reference internal" href="#flask.Flask.route" title="flask.Flask.route">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      route()\n     </span>\n    </code>\n   </a>\n   with\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     methods=["DELETE"]\n    </span>\n   </code>\n   .\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 2.0.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        rule\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        options\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Callable" title="(in Python v3.11)">\n      <em>\n       Callable\n      </em>\n     </a>\n     [[flask.scaffold.T_route], flask.scaffold.T_route]\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "dispatch_request",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.dispatch_request">\n  <span class="sig-name descname">\n   <span class="pre">\n    dispatch_request\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.dispatch_request" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Does the request dispatching.  Matches the URL and returns the\nreturn value of the view or error handler.  This does not have to\nbe a response object.  In order to convert the return value to a\nproper response object, call\n   <a class="reference internal" href="#flask.make_response" title="flask.make_response">\n    <code class="xref py py-func docutils literal notranslate">\n     <span class="pre">\n      make_response()\n     </span>\n    </code>\n   </a>\n   .\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionchanged">\n    <p>\n     <span class="versionmodified changed">\n      Changed in version 0.7:\n     </span>\n     This no longer does the exception handling, this code was\nmoved to the new\n     <a class="reference internal" href="#flask.Flask.full_dispatch_request" title="flask.Flask.full_dispatch_request">\n      <code class="xref py py-meth docutils literal notranslate">\n       <span class="pre">\n        full_dispatch_request()\n       </span>\n      </code>\n     </a>\n     .\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Return type\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference internal" href="#flask.Response" title="flask.Response">\n      Response\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n      <em>\n       Mapping\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference internal" href="#flask.Response" title="flask.Response">\n      Response\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n      <em>\n       Mapping\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ]],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [Headers,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n      <em>\n       Mapping\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     , \u00e2\u0080\u00a6]]],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Sequence" title="(in Python v3.11)">\n      <em>\n       Sequence\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     , \u00e2\u0080\u00a6]]]]]],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference internal" href="#flask.Response" title="flask.Response">\n      Response\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n      <em>\n       Mapping\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ]],\n     <a class="reference external" href="https://docs.python.org/3/library/functions.html#int" title="(in Python v3.11)">\n      int\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference internal" href="#flask.Response" title="flask.Response">\n      Response\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n      <em>\n       Mapping\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ]],\n     <a class="reference external" href="https://docs.python.org/3/library/functions.html#int" title="(in Python v3.11)">\n      int\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [Headers,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n      <em>\n       Mapping\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     , \u00e2\u0080\u00a6]]],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Sequence" title="(in Python v3.11)">\n      <em>\n       Sequence\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     , \u00e2\u0080\u00a6]]]]]], WSGIApplication]\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "do_teardown_appcontext",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.do_teardown_appcontext">\n  <span class="sig-name descname">\n   <span class="pre">\n    do_teardown_appcontext\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     exc=&lt;object\n    </span>\n    <span class="pre">\n     object&gt;\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.do_teardown_appcontext" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Called right before the application context is popped.\n  </p>\n  <p>\n   When handling a request, the application context is popped\nafter the request context. See\n   <a class="reference internal" href="#flask.Flask.do_teardown_request" title="flask.Flask.do_teardown_request">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      do_teardown_request()\n     </span>\n    </code>\n   </a>\n   .\n  </p>\n  <p>\n   This calls all functions decorated with\n   <a class="reference internal" href="#flask.Flask.teardown_appcontext" title="flask.Flask.teardown_appcontext">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      teardown_appcontext()\n     </span>\n    </code>\n   </a>\n   . Then the\n   <a class="reference internal" href="#flask.appcontext_tearing_down" title="flask.appcontext_tearing_down">\n    <code class="xref py py-data docutils literal notranslate">\n     <span class="pre">\n      appcontext_tearing_down\n     </span>\n    </code>\n   </a>\n   signal is sent.\n  </p>\n  <p>\n   This is called by\n   <a class="reference internal" href="#flask.ctx.AppContext.pop" title="flask.ctx.AppContext.pop">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      AppContext.pop()\n     </span>\n    </code>\n   </a>\n   .\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.9.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      exc\n     </strong>\n     (\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n      <em>\n       Optional\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/exceptions.html#BaseException" title="(in Python v3.11)">\n      <em>\n       BaseException\n      </em>\n     </a>\n     <em>\n      ]\n     </em>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     None\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "do_teardown_request",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.do_teardown_request">\n  <span class="sig-name descname">\n   <span class="pre">\n    do_teardown_request\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     exc=&lt;object\n    </span>\n    <span class="pre">\n     object&gt;\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.do_teardown_request" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Called after the request is dispatched and the response is\nreturned, right before the request context is popped.\n  </p>\n  <p>\n   This calls all functions decorated with\n   <a class="reference internal" href="#flask.Flask.teardown_request" title="flask.Flask.teardown_request">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      teardown_request()\n     </span>\n    </code>\n   </a>\n   , and\n   <a class="reference internal" href="#flask.Blueprint.teardown_request" title="flask.Blueprint.teardown_request">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      Blueprint.teardown_request()\n     </span>\n    </code>\n   </a>\n   if a blueprint handled the request. Finally, the\n   <a class="reference internal" href="#flask.request_tearing_down" title="flask.request_tearing_down">\n    <code class="xref py py-data docutils literal notranslate">\n     <span class="pre">\n      request_tearing_down\n     </span>\n    </code>\n   </a>\n   signal is sent.\n  </p>\n  <p>\n   This is called by\n   <a class="reference internal" href="#flask.ctx.RequestContext.pop" title="flask.ctx.RequestContext.pop">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      RequestContext.pop()\n     </span>\n    </code>\n   </a>\n   ,\nwhich may be delayed during testing to maintain access to\nresources.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      exc\n     </strong>\n     (\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n      <em>\n       Optional\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/exceptions.html#BaseException" title="(in Python v3.11)">\n      <em>\n       BaseException\n      </em>\n     </a>\n     <em>\n      ]\n     </em>\n     ) \u00e2\u0080\u0093 An unhandled exception raised while dispatching the\nrequest. Detected from the current exception information if\nnot passed. Passed to each teardown function.\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     None\n    </p>\n   </dd>\n  </dl>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionchanged">\n    <p>\n     <span class="versionmodified changed">\n      Changed in version 0.9:\n     </span>\n     Added the\n     <code class="docutils literal notranslate">\n      <span class="pre">\n       exc\n      </span>\n     </code>\n     argument.\n    </p>\n   </div>\n  </details>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "endpoint",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.endpoint">\n  <span class="sig-name descname">\n   <span class="pre">\n    endpoint\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     endpoint\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.endpoint" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Decorate a view function to register it for the given\nendpoint. Used if a rule is added without a\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     view_func\n    </span>\n   </code>\n   with\n   <a class="reference internal" href="#flask.Flask.add_url_rule" title="flask.Flask.add_url_rule">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      add_url_rule()\n     </span>\n    </code>\n   </a>\n   .\n  </p>\n  <div class="highlight-python notranslate">\n   <div class="highlight">\n    <pre><span></span><span class="n">app</span><span class="o">.</span><span class="n">add_url_rule</span><span class="p">(</span><span class="s2">"/ex"</span><span class="p">,</span> <span class="n">endpoint</span><span class="o">=</span><span class="s2">"example"</span><span class="p">)</span>\n\n<span class="nd">@app</span><span class="o">.</span><span class="n">endpoint</span><span class="p">(</span><span class="s2">"example"</span><span class="p">)</span>\n<span class="k">def</span> <span class="nf">example</span><span class="p">():</span>\n    <span class="o">...</span>\n</pre>\n   </div>\n  </div>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      endpoint\n     </strong>\n     (\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      <em>\n       str\n      </em>\n     </a>\n     ) \u00e2\u0080\u0093 The endpoint name to associate with the view\nfunction.\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Callable" title="(in Python v3.11)">\n      <em>\n       Callable\n      </em>\n     </a>\n     [[flask.scaffold.F], flask.scaffold.F]\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "ensure_sync",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.ensure_sync">\n  <span class="sig-name descname">\n   <span class="pre">\n    ensure_sync\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     func\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.ensure_sync" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Ensure that the function is synchronous for WSGI workers.\nPlain\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     def\n    </span>\n   </code>\n   functions are returned as-is.\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     async\n    </span>\n    <span class="pre">\n     def\n    </span>\n   </code>\n   functions are wrapped to run and wait for the response.\n  </p>\n  <p>\n   Override this method to change how the app runs async views.\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 2.0.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      func\n     </strong>\n     (\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Callable" title="(in Python v3.11)">\n      <em>\n       Callable\n      </em>\n     </a>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Callable" title="(in Python v3.11)">\n      <em>\n       Callable\n      </em>\n     </a>\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "errorhandler",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.errorhandler">\n  <span class="sig-name descname">\n   <span class="pre">\n    errorhandler\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     code_or_exception\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.errorhandler" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Register a function to handle errors by code or exception class.\n  </p>\n  <p>\n   A decorator that is used to register a function given an\nerror code.  Example:\n  </p>\n  <div class="highlight-default notranslate">\n   <div class="highlight">\n    <pre><span></span><span class="nd">@app</span><span class="o">.</span><span class="n">errorhandler</span><span class="p">(</span><span class="mi">404</span><span class="p">)</span>\n<span class="k">def</span> <span class="nf">page_not_found</span><span class="p">(</span><span class="n">error</span><span class="p">):</span>\n    <span class="k">return</span> <span class="s1">\'This page does not exist\'</span><span class="p">,</span> <span class="mi">404</span>\n</pre>\n   </div>\n  </div>\n  <p>\n   You can also register handlers for arbitrary exceptions:\n  </p>\n  <div class="highlight-default notranslate">\n   <div class="highlight">\n    <pre><span></span><span class="nd">@app</span><span class="o">.</span><span class="n">errorhandler</span><span class="p">(</span><span class="n">DatabaseError</span><span class="p">)</span>\n<span class="k">def</span> <span class="nf">special_exception_handler</span><span class="p">(</span><span class="n">error</span><span class="p">):</span>\n    <span class="k">return</span> <span class="s1">\'Database connection failed\'</span><span class="p">,</span> <span class="mi">500</span>\n</pre>\n   </div>\n  </div>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.7:\n     </span>\n     Use\n     <a class="reference internal" href="#flask.Flask.register_error_handler" title="flask.Flask.register_error_handler">\n      <code class="xref py py-meth docutils literal notranslate">\n       <span class="pre">\n        register_error_handler()\n       </span>\n      </code>\n     </a>\n     instead of modifying\n     <a class="reference internal" href="#flask.Flask.error_handler_spec" title="flask.Flask.error_handler_spec">\n      <code class="xref py py-attr docutils literal notranslate">\n       <span class="pre">\n        error_handler_spec\n       </span>\n      </code>\n     </a>\n     directly, for application wide error\nhandlers.\n    </p>\n   </div>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.7:\n     </span>\n     One can now additionally also register custom exception types\nthat do not necessarily have to be a subclass of the\n     <a class="reference external" href="https://werkzeug.palletsprojects.com/en/2.2.x/exceptions/#werkzeug.exceptions.HTTPException" title="(in Werkzeug v2.2.x)">\n      <code class="xref py py-class docutils literal notranslate">\n       <span class="pre">\n        HTTPException\n       </span>\n      </code>\n     </a>\n     class.\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      code_or_exception\n     </strong>\n     (\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Type" title="(in Python v3.11)">\n      <em>\n       Type\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/exceptions.html#Exception" title="(in Python v3.11)">\n      <em>\n       Exception\n      </em>\n     </a>\n     <em>\n      ]\n     </em>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/functions.html#int" title="(in Python v3.11)">\n      <em>\n       int\n      </em>\n     </a>\n     <em>\n      ]\n     </em>\n     ) \u00e2\u0080\u0093 the code as integer for the handler, or\nan arbitrary exception\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Callable" title="(in Python v3.11)">\n      <em>\n       Callable\n      </em>\n     </a>\n     [[flask.scaffold.T_error_handler], flask.scaffold.T_error_handler]\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "full_dispatch_request",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.full_dispatch_request">\n  <span class="sig-name descname">\n   <span class="pre">\n    full_dispatch_request\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.full_dispatch_request" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Dispatches the request and on top of that performs request\npre and postprocessing as well as HTTP exception catching and\nerror handling.\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.7.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Return type\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <a class="reference internal" href="#flask.Response" title="flask.wrappers.Response">\n      flask.wrappers.Response\n     </a>\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "get",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.get">\n  <span class="sig-name descname">\n   <span class="pre">\n    get\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     rule\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="o">\n    <span class="pre">\n     **\n    </span>\n   </span>\n   <span class="n">\n    <span class="pre">\n     options\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.get" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Shortcut for\n   <a class="reference internal" href="#flask.Flask.route" title="flask.Flask.route">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      route()\n     </span>\n    </code>\n   </a>\n   with\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     methods=["GET"]\n    </span>\n   </code>\n   .\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 2.0.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        rule\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        options\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Callable" title="(in Python v3.11)">\n      <em>\n       Callable\n      </em>\n     </a>\n     [[flask.scaffold.T_route], flask.scaffold.T_route]\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "get_send_file_max_age",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.get_send_file_max_age">\n  <span class="sig-name descname">\n   <span class="pre">\n    get_send_file_max_age\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     filename\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.get_send_file_max_age" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Used by\n   <a class="reference internal" href="#flask.send_file" title="flask.send_file">\n    <code class="xref py py-func docutils literal notranslate">\n     <span class="pre">\n      send_file()\n     </span>\n    </code>\n   </a>\n   to determine the\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     max_age\n    </span>\n   </code>\n   cache\nvalue for a given file path if it wasn\u00e2\u0080\u0099t passed.\n  </p>\n  <p>\n   By default, this returns\n   <a class="reference internal" href="../config/#SEND_FILE_MAX_AGE_DEFAULT" title="SEND_FILE_MAX_AGE_DEFAULT">\n    <code class="xref py py-data docutils literal notranslate">\n     <span class="pre">\n      SEND_FILE_MAX_AGE_DEFAULT\n     </span>\n    </code>\n   </a>\n   from\nthe configuration of\n   <a class="reference internal" href="#flask.current_app" title="flask.current_app">\n    <code class="xref py py-data docutils literal notranslate">\n     <span class="pre">\n      current_app\n     </span>\n    </code>\n   </a>\n   . This defaults\nto\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     None\n    </span>\n   </code>\n   , which tells the browser to use conditional requests\ninstead of a timed cache, which is usually preferable.\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionchanged">\n    <p>\n     <span class="versionmodified changed">\n      Changed in version 2.0:\n     </span>\n     The default configuration is\n     <code class="docutils literal notranslate">\n      <span class="pre">\n       None\n      </span>\n     </code>\n     instead of 12 hours.\n    </p>\n   </div>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.9.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      filename\n     </strong>\n     (\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n      <em>\n       Optional\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      <em>\n       str\n      </em>\n     </a>\n     <em>\n      ]\n     </em>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n      <em>\n       Optional\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/functions.html#int" title="(in Python v3.11)">\n      int\n     </a>\n     ]\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "handle_exception",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.handle_exception">\n  <span class="sig-name descname">\n   <span class="pre">\n    handle_exception\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     e\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.handle_exception" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Handle an exception that did not have an error handler\nassociated with it, or that was raised from an error handler.\nThis always causes a 500\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     InternalServerError\n    </span>\n   </code>\n   .\n  </p>\n  <p>\n   Always sends the\n   <a class="reference internal" href="#flask.got_request_exception" title="flask.got_request_exception">\n    <code class="xref py py-data docutils literal notranslate">\n     <span class="pre">\n      got_request_exception\n     </span>\n    </code>\n   </a>\n   signal.\n  </p>\n  <p>\n   If\n   <a class="reference internal" href="#flask.Flask.propagate_exceptions" title="flask.Flask.propagate_exceptions">\n    <code class="xref py py-attr docutils literal notranslate">\n     <span class="pre">\n      propagate_exceptions\n     </span>\n    </code>\n   </a>\n   is\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     True\n    </span>\n   </code>\n   , such as in debug\nmode, the error will be re-raised so that the debugger can\ndisplay it. Otherwise, the original exception is logged, and\nan\n   <a class="reference external" href="https://werkzeug.palletsprojects.com/en/2.2.x/exceptions/#werkzeug.exceptions.InternalServerError" title="(in Werkzeug v2.2.x)">\n    <code class="xref py py-exc docutils literal notranslate">\n     <span class="pre">\n      InternalServerError\n     </span>\n    </code>\n   </a>\n   is returned.\n  </p>\n  <p>\n   If an error handler is registered for\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     InternalServerError\n    </span>\n   </code>\n   or\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     500\n    </span>\n   </code>\n   , it will be used. For consistency, the handler will\nalways receive the\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     InternalServerError\n    </span>\n   </code>\n   . The original\nunhandled exception is available as\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     e.original_exception\n    </span>\n   </code>\n   .\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionchanged">\n    <p>\n     <span class="versionmodified changed">\n      Changed in version 1.1.0:\n     </span>\n     Always passes the\n     <code class="docutils literal notranslate">\n      <span class="pre">\n       InternalServerError\n      </span>\n     </code>\n     instance to the\nhandler, setting\n     <code class="docutils literal notranslate">\n      <span class="pre">\n       original_exception\n      </span>\n     </code>\n     to the unhandled\nerror.\n    </p>\n   </div>\n   <div class="versionchanged">\n    <p>\n     <span class="versionmodified changed">\n      Changed in version 1.1.0:\n     </span>\n     <code class="docutils literal notranslate">\n      <span class="pre">\n       after_request\n      </span>\n     </code>\n     functions and other finalization is done\neven for the default 500 response when there is no handler.\n    </p>\n   </div>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.3.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      e\n     </strong>\n     (\n     <a class="reference external" href="https://docs.python.org/3/library/exceptions.html#Exception" title="(in Python v3.11)">\n      <em>\n       Exception\n      </em>\n     </a>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference internal" href="#flask.Response" title="flask.wrappers.Response">\n      flask.wrappers.Response\n     </a>\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "handle_http_exception",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.handle_http_exception">\n  <span class="sig-name descname">\n   <span class="pre">\n    handle_http_exception\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     e\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.handle_http_exception" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Handles an HTTP exception.  By default this will invoke the\nregistered error handlers and fall back to returning the\nexception as response.\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionchanged">\n    <p>\n     <span class="versionmodified changed">\n      Changed in version 1.0.3:\n     </span>\n     <code class="docutils literal notranslate">\n      <span class="pre">\n       RoutingException\n      </span>\n     </code>\n     , used internally for actions such as\n slash redirects during routing, is not passed to error\n handlers.\n    </p>\n   </div>\n   <div class="versionchanged">\n    <p>\n     <span class="versionmodified changed">\n      Changed in version 1.0:\n     </span>\n     Exceptions are looked up by code\n     <em>\n      and\n     </em>\n     by MRO, so\n     <code class="docutils literal notranslate">\n      <span class="pre">\n       HTTPException\n      </span>\n     </code>\n     subclasses can be handled with a catch-all\nhandler for the base\n     <code class="docutils literal notranslate">\n      <span class="pre">\n       HTTPException\n      </span>\n     </code>\n     .\n    </p>\n   </div>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.3.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      e\n     </strong>\n     (\n     <a class="reference external" href="https://werkzeug.palletsprojects.com/en/2.2.x/exceptions/#werkzeug.exceptions.HTTPException" title="(in Werkzeug v2.2.x)">\n      <em>\n       werkzeug.exceptions.HTTPException\n      </em>\n     </a>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://werkzeug.palletsprojects.com/en/2.2.x/exceptions/#werkzeug.exceptions.HTTPException" title="(in Werkzeug v2.2.x)">\n      werkzeug.exceptions.HTTPException\n     </a>\n     ,\n     <a class="reference internal" href="#flask.Response" title="flask.Response">\n      Response\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n      <em>\n       Mapping\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference internal" href="#flask.Response" title="flask.Response">\n      Response\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n      <em>\n       Mapping\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ]],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [Headers,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n      <em>\n       Mapping\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     , \u00e2\u0080\u00a6]]],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Sequence" title="(in Python v3.11)">\n      <em>\n       Sequence\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     , \u00e2\u0080\u00a6]]]]]],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference internal" href="#flask.Response" title="flask.Response">\n      Response\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n      <em>\n       Mapping\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ]],\n     <a class="reference external" href="https://docs.python.org/3/library/functions.html#int" title="(in Python v3.11)">\n      int\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference internal" href="#flask.Response" title="flask.Response">\n      Response\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n      <em>\n       Mapping\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ]],\n     <a class="reference external" href="https://docs.python.org/3/library/functions.html#int" title="(in Python v3.11)">\n      int\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [Headers,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n      <em>\n       Mapping\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     , \u00e2\u0080\u00a6]]],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Sequence" title="(in Python v3.11)">\n      <em>\n       Sequence\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     , \u00e2\u0080\u00a6]]]]]], WSGIApplication]\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "handle_url_build_error",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.handle_url_build_error">\n  <span class="sig-name descname">\n   <span class="pre">\n    handle_url_build_error\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     error\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     endpoint\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     values\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.handle_url_build_error" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Called by\n   <a class="reference internal" href="#flask.Flask.url_for" title="flask.Flask.url_for">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      url_for()\n     </span>\n    </code>\n   </a>\n   if a\n   <code class="xref py py-exc docutils literal notranslate">\n    <span class="pre">\n     BuildError\n    </span>\n   </code>\n   was raised. If this returns\na value, it will be returned by\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     url_for\n    </span>\n   </code>\n   , otherwise the error\nwill be re-raised.\n  </p>\n  <p>\n   Each function in\n   <a class="reference internal" href="#flask.Flask.url_build_error_handlers" title="flask.Flask.url_build_error_handlers">\n    <code class="xref py py-attr docutils literal notranslate">\n     <span class="pre">\n      url_build_error_handlers\n     </span>\n    </code>\n   </a>\n   is called with\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     error\n    </span>\n   </code>\n   ,\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     endpoint\n    </span>\n   </code>\n   and\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     values\n    </span>\n   </code>\n   . If a function returns\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     None\n    </span>\n   </code>\n   or raises a\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     BuildError\n    </span>\n   </code>\n   , it is skipped. Otherwise,\nits return value is returned by\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     url_for\n    </span>\n   </code>\n   .\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        error\n       </strong>\n       (\n       <em>\n        werkzeug.routing.exceptions.BuildError\n       </em>\n       ) \u00e2\u0080\u0093 The active\n       <code class="docutils literal notranslate">\n        <span class="pre">\n         BuildError\n        </span>\n       </code>\n       being handled.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        endpoint\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 The endpoint being built.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        values\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Dict" title="(in Python v3.11)">\n        <em>\n         Dict\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       ) \u00e2\u0080\u0093 The keyword arguments passed to\n       <code class="docutils literal notranslate">\n        <span class="pre">\n         url_for\n        </span>\n       </code>\n       .\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "handle_user_exception",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.handle_user_exception">\n  <span class="sig-name descname">\n   <span class="pre">\n    handle_user_exception\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     e\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.handle_user_exception" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   This method is called whenever an exception occurs that\nshould be handled. A special case is\n   <code class="xref py py-class docutils literal notranslate">\n    <span class="pre">\n     HTTPException\n    </span>\n   </code>\n   which is forwarded to the\n   <a class="reference internal" href="#flask.Flask.handle_http_exception" title="flask.Flask.handle_http_exception">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      handle_http_exception()\n     </span>\n    </code>\n   </a>\n   method. This function will either\nreturn a response value or reraise the exception with the same\ntraceback.\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionchanged">\n    <p>\n     <span class="versionmodified changed">\n      Changed in version 1.0:\n     </span>\n     Key errors raised from request data like\n     <code class="docutils literal notranslate">\n      <span class="pre">\n       form\n      </span>\n     </code>\n     show the\nbad key in debug mode rather than a generic bad request\nmessage.\n    </p>\n   </div>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.7.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      e\n     </strong>\n     (\n     <a class="reference external" href="https://docs.python.org/3/library/exceptions.html#Exception" title="(in Python v3.11)">\n      <em>\n       Exception\n      </em>\n     </a>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://werkzeug.palletsprojects.com/en/2.2.x/exceptions/#werkzeug.exceptions.HTTPException" title="(in Werkzeug v2.2.x)">\n      werkzeug.exceptions.HTTPException\n     </a>\n     ,\n     <a class="reference internal" href="#flask.Response" title="flask.Response">\n      Response\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n      <em>\n       Mapping\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference internal" href="#flask.Response" title="flask.Response">\n      Response\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n      <em>\n       Mapping\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ]],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [Headers,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n      <em>\n       Mapping\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     , \u00e2\u0080\u00a6]]],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Sequence" title="(in Python v3.11)">\n      <em>\n       Sequence\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     , \u00e2\u0080\u00a6]]]]]],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference internal" href="#flask.Response" title="flask.Response">\n      Response\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n      <em>\n       Mapping\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ]],\n     <a class="reference external" href="https://docs.python.org/3/library/functions.html#int" title="(in Python v3.11)">\n      int\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference internal" href="#flask.Response" title="flask.Response">\n      Response\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n      <em>\n       Mapping\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ]],\n     <a class="reference external" href="https://docs.python.org/3/library/functions.html#int" title="(in Python v3.11)">\n      int\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [Headers,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n      <em>\n       Mapping\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     , \u00e2\u0080\u00a6]]],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Sequence" title="(in Python v3.11)">\n      <em>\n       Sequence\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     , \u00e2\u0080\u00a6]]]]]], WSGIApplication]\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "inject_url_defaults",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.inject_url_defaults">\n  <span class="sig-name descname">\n   <span class="pre">\n    inject_url_defaults\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     endpoint\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     values\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.inject_url_defaults" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Injects the URL defaults for the given endpoint directly into\nthe values dictionary passed.  This is used internally and\nautomatically called on URL building.\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.7.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        endpoint\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        values\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#dict" title="(in Python v3.11)">\n        <em>\n         dict\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     None\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "iter_blueprints",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.iter_blueprints">\n  <span class="sig-name descname">\n   <span class="pre">\n    iter_blueprints\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.iter_blueprints" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Iterates over all blueprints by the order they were registered.\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.11.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Return type\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.ValuesView" title="(in Python v3.11)">\n      <em>\n       ValuesView\n      </em>\n     </a>\n     [\n     <a class="reference internal" href="#flask.Blueprint" title="flask.Blueprint">\n      Blueprint\n     </a>\n     ]\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "log_exception",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.log_exception">\n  <span class="sig-name descname">\n   <span class="pre">\n    log_exception\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     exc_info\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.log_exception" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Logs an exception.  This is called by\n   <a class="reference internal" href="#flask.Flask.handle_exception" title="flask.Flask.handle_exception">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      handle_exception()\n     </span>\n    </code>\n   </a>\n   if debugging is disabled and right before the handler is called.\nThe default implementation logs the exception as error on the\n   <a class="reference internal" href="#flask.Flask.logger" title="flask.Flask.logger">\n    <code class="xref py py-attr docutils literal notranslate">\n     <span class="pre">\n      logger\n     </span>\n    </code>\n   </a>\n   .\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.8.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      exc_info\n     </strong>\n     (\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/functions.html#type" title="(in Python v3.11)">\n      <em>\n       type\n      </em>\n     </a>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/exceptions.html#BaseException" title="(in Python v3.11)">\n      <em>\n       BaseException\n      </em>\n     </a>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/types.html#types.TracebackType" title="(in Python v3.11)">\n      <em>\n       types.TracebackType\n      </em>\n     </a>\n     <em>\n      ]\n     </em>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <em>\n      None\n     </em>\n     <em>\n      ,\n     </em>\n     <em>\n      None\n     </em>\n     <em>\n      ,\n     </em>\n     <em>\n      None\n     </em>\n     <em>\n      ]\n     </em>\n     <em>\n      ]\n     </em>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     None\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "make_aborter",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.make_aborter">\n  <span class="sig-name descname">\n   <span class="pre">\n    make_aborter\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.make_aborter" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Create the object to assign to\n   <a class="reference internal" href="#flask.Flask.aborter" title="flask.Flask.aborter">\n    <code class="xref py py-attr docutils literal notranslate">\n     <span class="pre">\n      aborter\n     </span>\n    </code>\n   </a>\n   . That object\nis called by\n   <a class="reference internal" href="#flask.abort" title="flask.abort">\n    <code class="xref py py-func docutils literal notranslate">\n     <span class="pre">\n      flask.abort()\n     </span>\n    </code>\n   </a>\n   to raise HTTP errors, and can\nbe called directly as well.\n  </p>\n  <p>\n   By default, this creates an instance of\n   <a class="reference internal" href="#flask.Flask.aborter_class" title="flask.Flask.aborter_class">\n    <code class="xref py py-attr docutils literal notranslate">\n     <span class="pre">\n      aborter_class\n     </span>\n    </code>\n   </a>\n   ,\nwhich defaults to\n   <a class="reference external" href="https://werkzeug.palletsprojects.com/en/2.2.x/exceptions/#werkzeug.exceptions.Aborter" title="(in Werkzeug v2.2.x)">\n    <code class="xref py py-class docutils literal notranslate">\n     <span class="pre">\n      werkzeug.exceptions.Aborter\n     </span>\n    </code>\n   </a>\n   .\n  </p>\n  <div class="versionadded">\n   <p>\n    <span class="versionmodified added">\n     New in version 2.2.\n    </span>\n   </p>\n  </div>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Return type\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <a class="reference external" href="https://werkzeug.palletsprojects.com/en/2.2.x/exceptions/#werkzeug.exceptions.Aborter" title="(in Werkzeug v2.2.x)">\n      werkzeug.exceptions.Aborter\n     </a>\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "make_config",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.make_config">\n  <span class="sig-name descname">\n   <span class="pre">\n    make_config\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     instance_relative\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     False\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.make_config" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Used to create the config attribute by the Flask constructor.\nThe\n   <cite>\n    instance_relative\n   </cite>\n   parameter is passed in from the constructor\nof Flask (there named\n   <cite>\n    instance_relative_config\n   </cite>\n   ) and indicates if\nthe config should be relative to the instance path or the root path\nof the application.\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.8.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      instance_relative\n     </strong>\n     (\n     <a class="reference external" href="https://docs.python.org/3/library/functions.html#bool" title="(in Python v3.11)">\n      <em>\n       bool\n      </em>\n     </a>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference internal" href="#flask.Config" title="flask.config.Config">\n      flask.config.Config\n     </a>\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "make_default_options_response",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.make_default_options_response">\n  <span class="sig-name descname">\n   <span class="pre">\n    make_default_options_response\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.make_default_options_response" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   This method is called to create the default\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     OPTIONS\n    </span>\n   </code>\n   response.\nThis can be changed through subclassing to change the default\nbehavior of\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     OPTIONS\n    </span>\n   </code>\n   responses.\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.7.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Return type\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <a class="reference internal" href="#flask.Response" title="flask.wrappers.Response">\n      flask.wrappers.Response\n     </a>\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "make_response",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.make_response">\n  <span class="sig-name descname">\n   <span class="pre">\n    make_response\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     rv\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.make_response" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Convert the return value from a view function to an instance of\n   <a class="reference internal" href="#flask.Flask.response_class" title="flask.Flask.response_class">\n    <code class="xref py py-attr docutils literal notranslate">\n     <span class="pre">\n      response_class\n     </span>\n    </code>\n   </a>\n   .\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      rv\n     </strong>\n     (\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference internal" href="#flask.Response" title="flask.Response">\n      <em>\n       Response\n      </em>\n     </a>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      <em>\n       str\n      </em>\n     </a>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      <em>\n       bytes\n      </em>\n     </a>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     <em>\n      ]\n     </em>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n      <em>\n       Mapping\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      <em>\n       str\n      </em>\n     </a>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     <em>\n      ]\n     </em>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      <em>\n       str\n      </em>\n     </a>\n     <em>\n      ]\n     </em>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      <em>\n       bytes\n      </em>\n     </a>\n     <em>\n      ]\n     </em>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference internal" href="#flask.Response" title="flask.Response">\n      <em>\n       Response\n      </em>\n     </a>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      <em>\n       str\n      </em>\n     </a>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      <em>\n       bytes\n      </em>\n     </a>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     <em>\n      ]\n     </em>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n      <em>\n       Mapping\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      <em>\n       str\n      </em>\n     </a>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     <em>\n      ]\n     </em>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      <em>\n       str\n      </em>\n     </a>\n     <em>\n      ]\n     </em>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      <em>\n       bytes\n      </em>\n     </a>\n     <em>\n      ]\n     </em>\n     <em>\n      ]\n     </em>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <em>\n      Headers\n     </em>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n      <em>\n       Mapping\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      <em>\n       str\n      </em>\n     </a>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      <em>\n       str\n      </em>\n     </a>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      <em>\n       str\n      </em>\n     </a>\n     <em>\n      ]\n     </em>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      <em>\n       str\n      </em>\n     </a>\n     <em>\n      ,\n     </em>\n     <em>\n      ...\n     </em>\n     <em>\n      ]\n     </em>\n     <em>\n      ]\n     </em>\n     <em>\n      ]\n     </em>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Sequence" title="(in Python v3.11)">\n      <em>\n       Sequence\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      <em>\n       str\n      </em>\n     </a>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      <em>\n       str\n      </em>\n     </a>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      <em>\n       str\n      </em>\n     </a>\n     <em>\n      ]\n     </em>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      <em>\n       str\n      </em>\n     </a>\n     <em>\n      ,\n     </em>\n     <em>\n      ...\n     </em>\n     <em>\n      ]\n     </em>\n     <em>\n      ]\n     </em>\n     <em>\n      ]\n     </em>\n     <em>\n      ]\n     </em>\n     <em>\n      ]\n     </em>\n     <em>\n      ]\n     </em>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference internal" href="#flask.Response" title="flask.Response">\n      <em>\n       Response\n      </em>\n     </a>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      <em>\n       str\n      </em>\n     </a>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      <em>\n       bytes\n      </em>\n     </a>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     <em>\n      ]\n     </em>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n      <em>\n       Mapping\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      <em>\n       str\n      </em>\n     </a>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     <em>\n      ]\n     </em>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      <em>\n       str\n      </em>\n     </a>\n     <em>\n      ]\n     </em>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      <em>\n       bytes\n      </em>\n     </a>\n     <em>\n      ]\n     </em>\n     <em>\n      ]\n     </em>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/functions.html#int" title="(in Python v3.11)">\n      <em>\n       int\n      </em>\n     </a>\n     <em>\n      ]\n     </em>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference internal" href="#flask.Response" title="flask.Response">\n      <em>\n       Response\n      </em>\n     </a>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      <em>\n       str\n      </em>\n     </a>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      <em>\n       bytes\n      </em>\n     </a>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     <em>\n      ]\n     </em>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n      <em>\n       Mapping\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      <em>\n       str\n      </em>\n     </a>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     <em>\n      ]\n     </em>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      <em>\n       str\n      </em>\n     </a>\n     <em>\n      ]\n     </em>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      <em>\n       bytes\n      </em>\n     </a>\n     <em>\n      ]\n     </em>\n     <em>\n      ]\n     </em>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/functions.html#int" title="(in Python v3.11)">\n      <em>\n       int\n      </em>\n     </a>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <em>\n      Headers\n     </em>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n      <em>\n       Mapping\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      <em>\n       str\n      </em>\n     </a>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      <em>\n       str\n      </em>\n     </a>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      <em>\n       str\n      </em>\n     </a>\n     <em>\n      ]\n     </em>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      <em>\n       str\n      </em>\n     </a>\n     <em>\n      ,\n     </em>\n     <em>\n      ...\n     </em>\n     <em>\n      ]\n     </em>\n     <em>\n      ]\n     </em>\n     <em>\n      ]\n     </em>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Sequence" title="(in Python v3.11)">\n      <em>\n       Sequence\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      <em>\n       str\n      </em>\n     </a>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      <em>\n       str\n      </em>\n     </a>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      <em>\n       str\n      </em>\n     </a>\n     <em>\n      ]\n     </em>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      <em>\n       str\n      </em>\n     </a>\n     <em>\n      ,\n     </em>\n     <em>\n      ...\n     </em>\n     <em>\n      ]\n     </em>\n     <em>\n      ]\n     </em>\n     <em>\n      ]\n     </em>\n     <em>\n      ]\n     </em>\n     <em>\n      ]\n     </em>\n     <em>\n      ]\n     </em>\n     <em>\n      ,\n     </em>\n     <em>\n      WSGIApplication\n     </em>\n     <em>\n      ]\n     </em>\n     ) \u00e2\u0080\u0093\n     <p>\n      the return value from the view function. The view function\nmust return a response. Returning\n      <code class="docutils literal notranslate">\n       <span class="pre">\n        None\n       </span>\n      </code>\n      , or the view ending\nwithout returning, is not allowed. The following types are allowed\nfor\n      <code class="docutils literal notranslate">\n       <span class="pre">\n        view_rv\n       </span>\n      </code>\n      :\n     </p>\n     <dl class="simple">\n      <dt>\n       <code class="docutils literal notranslate">\n        <span class="pre">\n         str\n        </span>\n       </code>\n      </dt>\n      <dd>\n       <p>\n        A response object is created with the string encoded to UTF-8\nas the body.\n       </p>\n      </dd>\n      <dt>\n       <code class="docutils literal notranslate">\n        <span class="pre">\n         bytes\n        </span>\n       </code>\n      </dt>\n      <dd>\n       <p>\n        A response object is created with the bytes as the body.\n       </p>\n      </dd>\n      <dt>\n       <code class="docutils literal notranslate">\n        <span class="pre">\n         dict\n        </span>\n       </code>\n      </dt>\n      <dd>\n       <p>\n        A dictionary that will be jsonify\u00e2\u0080\u0099d before being returned.\n       </p>\n      </dd>\n      <dt>\n       <code class="docutils literal notranslate">\n        <span class="pre">\n         list\n        </span>\n       </code>\n      </dt>\n      <dd>\n       <p>\n        A list that will be jsonify\u00e2\u0080\u0099d before being returned.\n       </p>\n      </dd>\n      <dt>\n       <code class="docutils literal notranslate">\n        <span class="pre">\n         generator\n        </span>\n       </code>\n       or\n       <code class="docutils literal notranslate">\n        <span class="pre">\n         iterator\n        </span>\n       </code>\n      </dt>\n      <dd>\n       <p>\n        A generator that returns\n        <code class="docutils literal notranslate">\n         <span class="pre">\n          str\n         </span>\n        </code>\n        or\n        <code class="docutils literal notranslate">\n         <span class="pre">\n          bytes\n         </span>\n        </code>\n        to be\nstreamed as the response.\n       </p>\n      </dd>\n      <dt>\n       <code class="docutils literal notranslate">\n        <span class="pre">\n         tuple\n        </span>\n       </code>\n      </dt>\n      <dd>\n       <p>\n        Either\n        <code class="docutils literal notranslate">\n         <span class="pre">\n          (body,\n         </span>\n         <span class="pre">\n          status,\n         </span>\n         <span class="pre">\n          headers)\n         </span>\n        </code>\n        ,\n        <code class="docutils literal notranslate">\n         <span class="pre">\n          (body,\n         </span>\n         <span class="pre">\n          status)\n         </span>\n        </code>\n        , or\n        <code class="docutils literal notranslate">\n         <span class="pre">\n          (body,\n         </span>\n         <span class="pre">\n          headers)\n         </span>\n        </code>\n        , where\n        <code class="docutils literal notranslate">\n         <span class="pre">\n          body\n         </span>\n        </code>\n        is any of the other types\nallowed here,\n        <code class="docutils literal notranslate">\n         <span class="pre">\n          status\n         </span>\n        </code>\n        is a string or an integer, and\n        <code class="docutils literal notranslate">\n         <span class="pre">\n          headers\n         </span>\n        </code>\n        is a dictionary or a list of\n        <code class="docutils literal notranslate">\n         <span class="pre">\n          (key,\n         </span>\n         <span class="pre">\n          value)\n         </span>\n        </code>\n        tuples. If\n        <code class="docutils literal notranslate">\n         <span class="pre">\n          body\n         </span>\n        </code>\n        is a\n        <a class="reference internal" href="#flask.Flask.response_class" title="flask.Flask.response_class">\n         <code class="xref py py-attr docutils literal notranslate">\n          <span class="pre">\n           response_class\n          </span>\n         </code>\n        </a>\n        instance,\n        <code class="docutils literal notranslate">\n         <span class="pre">\n          status\n         </span>\n        </code>\n        overwrites the exiting value and\n        <code class="docutils literal notranslate">\n         <span class="pre">\n          headers\n         </span>\n        </code>\n        are\nextended.\n       </p>\n      </dd>\n      <dt>\n       <a class="reference internal" href="#flask.Flask.response_class" title="flask.Flask.response_class">\n        <code class="xref py py-attr docutils literal notranslate">\n         <span class="pre">\n          response_class\n         </span>\n        </code>\n       </a>\n      </dt>\n      <dd>\n       <p>\n        The object is returned unchanged.\n       </p>\n      </dd>\n      <dt>\n       other\n       <a class="reference external" href="https://werkzeug.palletsprojects.com/en/2.2.x/wrappers/#werkzeug.wrappers.Response" title="(in Werkzeug v2.2.x)">\n        <code class="xref py py-class docutils literal notranslate">\n         <span class="pre">\n          Response\n         </span>\n        </code>\n       </a>\n       class\n      </dt>\n      <dd>\n       <p>\n        The object is coerced to\n        <a class="reference internal" href="#flask.Flask.response_class" title="flask.Flask.response_class">\n         <code class="xref py py-attr docutils literal notranslate">\n          <span class="pre">\n           response_class\n          </span>\n         </code>\n        </a>\n        .\n       </p>\n      </dd>\n      <dt>\n       <a class="reference external" href="https://docs.python.org/3/library/functions.html#callable" title="(in Python v3.11)">\n        <code class="xref py py-func docutils literal notranslate">\n         <span class="pre">\n          callable()\n         </span>\n        </code>\n       </a>\n      </dt>\n      <dd>\n       <p>\n        The function is called as a WSGI application. The result is\nused to create a response object.\n       </p>\n      </dd>\n     </dl>\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference internal" href="#flask.Response" title="flask.wrappers.Response">\n      flask.wrappers.Response\n     </a>\n    </p>\n   </dd>\n  </dl>\n  <div class="versionchanged">\n   <p>\n    <span class="versionmodified changed">\n     Changed in version 2.2:\n    </span>\n    A generator will be converted to a streaming response.\nA list will be converted to a JSON response.\n   </p>\n  </div>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionchanged">\n    <p>\n     <span class="versionmodified changed">\n      Changed in version 1.1:\n     </span>\n     A dict will be converted to a JSON response.\n    </p>\n   </div>\n   <div class="versionchanged">\n    <p>\n     <span class="versionmodified changed">\n      Changed in version 0.9:\n     </span>\n     Previously a tuple was interpreted as the arguments for the\nresponse object.\n    </p>\n   </div>\n  </details>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "make_shell_context",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.make_shell_context">\n  <span class="sig-name descname">\n   <span class="pre">\n    make_shell_context\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.make_shell_context" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Returns the shell context for an interactive shell for this\napplication.  This runs all the registered shell context\nprocessors.\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.11.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Return type\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#dict" title="(in Python v3.11)">\n      dict\n     </a>\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "open_instance_resource",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.open_instance_resource">\n  <span class="sig-name descname">\n   <span class="pre">\n    open_instance_resource\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     resource\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     mode\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     \'rb\'\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.open_instance_resource" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Opens a resource from the application\u00e2\u0080\u0099s instance folder\n(\n   <a class="reference internal" href="#flask.Flask.instance_path" title="flask.Flask.instance_path">\n    <code class="xref py py-attr docutils literal notranslate">\n     <span class="pre">\n      instance_path\n     </span>\n    </code>\n   </a>\n   ).  Otherwise works like\n   <a class="reference internal" href="#flask.Flask.open_resource" title="flask.Flask.open_resource">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      open_resource()\n     </span>\n    </code>\n   </a>\n   .  Instance resources can also be opened for\nwriting.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        resource\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 the name of the resource.  To access resources within\nsubfolders use forward slashes as separator.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        mode\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 resource file opening mode, default is \u00e2\u0080\u0098rb\u00e2\u0080\u0099.\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.IO" title="(in Python v3.11)">\n      <em>\n       IO\n      </em>\n     </a>\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "open_resource",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.open_resource">\n  <span class="sig-name descname">\n   <span class="pre">\n    open_resource\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     resource\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     mode\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     \'rb\'\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.open_resource" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Open a resource file relative to\n   <a class="reference internal" href="#flask.Flask.root_path" title="flask.Flask.root_path">\n    <code class="xref py py-attr docutils literal notranslate">\n     <span class="pre">\n      root_path\n     </span>\n    </code>\n   </a>\n   for\nreading.\n  </p>\n  <p>\n   For example, if the file\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     schema.sql\n    </span>\n   </code>\n   is next to the file\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     app.py\n    </span>\n   </code>\n   where the\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     Flask\n    </span>\n   </code>\n   app is defined, it can be opened\nwith:\n  </p>\n  <div class="highlight-python notranslate">\n   <div class="highlight">\n    <pre><span></span><span class="k">with</span> <span class="n">app</span><span class="o">.</span><span class="n">open_resource</span><span class="p">(</span><span class="s2">"schema.sql"</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>\n    <span class="n">conn</span><span class="o">.</span><span class="n">executescript</span><span class="p">(</span><span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">())</span>\n</pre>\n   </div>\n  </div>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        resource\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 Path to the resource relative to\n       <a class="reference internal" href="#flask.Flask.root_path" title="flask.Flask.root_path">\n        <code class="xref py py-attr docutils literal notranslate">\n         <span class="pre">\n          root_path\n         </span>\n        </code>\n       </a>\n       .\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        mode\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 Open the file in this mode. Only reading is\nsupported, valid values are \u00e2\u0080\u009cr\u00e2\u0080\u009d (or \u00e2\u0080\u009crt\u00e2\u0080\u009d) and \u00e2\u0080\u009crb\u00e2\u0080\u009d.\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.IO" title="(in Python v3.11)">\n      <em>\n       IO\n      </em>\n     </a>\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "patch",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.patch">\n  <span class="sig-name descname">\n   <span class="pre">\n    patch\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     rule\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="o">\n    <span class="pre">\n     **\n    </span>\n   </span>\n   <span class="n">\n    <span class="pre">\n     options\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.patch" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Shortcut for\n   <a class="reference internal" href="#flask.Flask.route" title="flask.Flask.route">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      route()\n     </span>\n    </code>\n   </a>\n   with\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     methods=["PATCH"]\n    </span>\n   </code>\n   .\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 2.0.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        rule\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        options\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Callable" title="(in Python v3.11)">\n      <em>\n       Callable\n      </em>\n     </a>\n     [[flask.scaffold.T_route], flask.scaffold.T_route]\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "post",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.post">\n  <span class="sig-name descname">\n   <span class="pre">\n    post\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     rule\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="o">\n    <span class="pre">\n     **\n    </span>\n   </span>\n   <span class="n">\n    <span class="pre">\n     options\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.post" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Shortcut for\n   <a class="reference internal" href="#flask.Flask.route" title="flask.Flask.route">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      route()\n     </span>\n    </code>\n   </a>\n   with\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     methods=["POST"]\n    </span>\n   </code>\n   .\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 2.0.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        rule\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        options\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Callable" title="(in Python v3.11)">\n      <em>\n       Callable\n      </em>\n     </a>\n     [[flask.scaffold.T_route], flask.scaffold.T_route]\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "preprocess_request",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.preprocess_request">\n  <span class="sig-name descname">\n   <span class="pre">\n    preprocess_request\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.preprocess_request" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Called before the request is dispatched. Calls\n   <a class="reference internal" href="#flask.Flask.url_value_preprocessors" title="flask.Flask.url_value_preprocessors">\n    <code class="xref py py-attr docutils literal notranslate">\n     <span class="pre">\n      url_value_preprocessors\n     </span>\n    </code>\n   </a>\n   registered with the app and the\ncurrent blueprint (if any). Then calls\n   <a class="reference internal" href="#flask.Flask.before_request_funcs" title="flask.Flask.before_request_funcs">\n    <code class="xref py py-attr docutils literal notranslate">\n     <span class="pre">\n      before_request_funcs\n     </span>\n    </code>\n   </a>\n   registered with the app and the blueprint.\n  </p>\n  <p>\n   If any\n   <a class="reference internal" href="#flask.Flask.before_request" title="flask.Flask.before_request">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      before_request()\n     </span>\n    </code>\n   </a>\n   handler returns a non-None value, the\nvalue is handled as if it was the return value from the view, and\nfurther request handling is stopped.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Return type\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n      <em>\n       Optional\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference internal" href="#flask.Response" title="flask.Response">\n      Response\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n      <em>\n       Mapping\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference internal" href="#flask.Response" title="flask.Response">\n      Response\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n      <em>\n       Mapping\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ]],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [Headers,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n      <em>\n       Mapping\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     , \u00e2\u0080\u00a6]]],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Sequence" title="(in Python v3.11)">\n      <em>\n       Sequence\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     , \u00e2\u0080\u00a6]]]]]],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference internal" href="#flask.Response" title="flask.Response">\n      Response\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n      <em>\n       Mapping\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ]],\n     <a class="reference external" href="https://docs.python.org/3/library/functions.html#int" title="(in Python v3.11)">\n      int\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference internal" href="#flask.Response" title="flask.Response">\n      Response\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n      <em>\n       Mapping\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ]],\n     <a class="reference external" href="https://docs.python.org/3/library/functions.html#int" title="(in Python v3.11)">\n      int\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [Headers,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n      <em>\n       Mapping\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     , \u00e2\u0080\u00a6]]],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Sequence" title="(in Python v3.11)">\n      <em>\n       Sequence\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     , \u00e2\u0080\u00a6]]]]]], WSGIApplication]]\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "process_response",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.process_response">\n  <span class="sig-name descname">\n   <span class="pre">\n    process_response\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     response\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.process_response" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Can be overridden in order to modify the response object\nbefore it\u00e2\u0080\u0099s sent to the WSGI server.  By default this will\ncall all the\n   <a class="reference internal" href="#flask.Flask.after_request" title="flask.Flask.after_request">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      after_request()\n     </span>\n    </code>\n   </a>\n   decorated functions.\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionchanged">\n    <p>\n     <span class="versionmodified changed">\n      Changed in version 0.5:\n     </span>\n     As of Flask 0.5 the functions registered for after request\nexecution are called in reverse order of registration.\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      response\n     </strong>\n     (\n     <a class="reference internal" href="#flask.Response" title="flask.wrappers.Response">\n      <em>\n       flask.wrappers.Response\n      </em>\n     </a>\n     ) \u00e2\u0080\u0093 a\n     <a class="reference internal" href="#flask.Flask.response_class" title="flask.Flask.response_class">\n      <code class="xref py py-attr docutils literal notranslate">\n       <span class="pre">\n        response_class\n       </span>\n      </code>\n     </a>\n     object.\n    </p>\n   </dd>\n   <dt class="field-even">\n    Returns\n   </dt>\n   <dd class="field-even">\n    <p>\n     a new response object or the same, has to be an\ninstance of\n     <a class="reference internal" href="#flask.Flask.response_class" title="flask.Flask.response_class">\n      <code class="xref py py-attr docutils literal notranslate">\n       <span class="pre">\n        response_class\n       </span>\n      </code>\n     </a>\n     .\n    </p>\n   </dd>\n   <dt class="field-odd">\n    Return type\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <a class="reference internal" href="#flask.Response" title="flask.wrappers.Response">\n      flask.wrappers.Response\n     </a>\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "put",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.put">\n  <span class="sig-name descname">\n   <span class="pre">\n    put\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     rule\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="o">\n    <span class="pre">\n     **\n    </span>\n   </span>\n   <span class="n">\n    <span class="pre">\n     options\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.put" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Shortcut for\n   <a class="reference internal" href="#flask.Flask.route" title="flask.Flask.route">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      route()\n     </span>\n    </code>\n   </a>\n   with\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     methods=["PUT"]\n    </span>\n   </code>\n   .\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 2.0.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        rule\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        options\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Callable" title="(in Python v3.11)">\n      <em>\n       Callable\n      </em>\n     </a>\n     [[flask.scaffold.T_route], flask.scaffold.T_route]\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "redirect",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.redirect">\n  <span class="sig-name descname">\n   <span class="pre">\n    redirect\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     location\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     code\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     302\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.redirect" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Create a redirect response object.\n  </p>\n  <p>\n   This is called by\n   <a class="reference internal" href="#flask.redirect" title="flask.redirect">\n    <code class="xref py py-func docutils literal notranslate">\n     <span class="pre">\n      flask.redirect()\n     </span>\n    </code>\n   </a>\n   , and can be called\ndirectly as well.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        location\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 The URL to redirect to.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        code\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/functions.html#int" title="(in Python v3.11)">\n        <em>\n         int\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 The status code for the redirect.\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://werkzeug.palletsprojects.com/en/2.2.x/wrappers/#werkzeug.wrappers.Response" title="(in Werkzeug v2.2.x)">\n      werkzeug.wrappers.response.Response\n     </a>\n    </p>\n   </dd>\n  </dl>\n  <div class="versionadded">\n   <p>\n    <span class="versionmodified added">\n     New in version 2.2:\n    </span>\n    Moved from\n    <code class="docutils literal notranslate">\n     <span class="pre">\n      flask.redirect\n     </span>\n    </code>\n    , which calls this method.\n   </p>\n  </div>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "register_blueprint",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.register_blueprint">\n  <span class="sig-name descname">\n   <span class="pre">\n    register_blueprint\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     blueprint\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="o">\n    <span class="pre">\n     **\n    </span>\n   </span>\n   <span class="n">\n    <span class="pre">\n     options\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.register_blueprint" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Register a\n   <a class="reference internal" href="#flask.Blueprint" title="flask.Blueprint">\n    <code class="xref py py-class docutils literal notranslate">\n     <span class="pre">\n      Blueprint\n     </span>\n    </code>\n   </a>\n   on the application. Keyword\narguments passed to this method will override the defaults set on the\nblueprint.\n  </p>\n  <p>\n   Calls the blueprint\u00e2\u0080\u0099s\n   <a class="reference internal" href="#flask.Blueprint.register" title="flask.Blueprint.register">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      register()\n     </span>\n    </code>\n   </a>\n   method after\nrecording the blueprint in the application\u00e2\u0080\u0099s\n   <a class="reference internal" href="#flask.Flask.blueprints" title="flask.Flask.blueprints">\n    <code class="xref py py-attr docutils literal notranslate">\n     <span class="pre">\n      blueprints\n     </span>\n    </code>\n   </a>\n   .\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        blueprint\n       </strong>\n       (\n       <a class="reference internal" href="#flask.Blueprint" title="flask.Blueprint">\n        <em>\n         Blueprint\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 The blueprint to register.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        url_prefix\n       </strong>\n       \u00e2\u0080\u0093 Blueprint routes will be prefixed with this.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        subdomain\n       </strong>\n       \u00e2\u0080\u0093 Blueprint routes will match on this subdomain.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        url_defaults\n       </strong>\n       \u00e2\u0080\u0093 Blueprint routes will use these default values for\nview arguments.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        options\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 Additional keyword arguments are passed to\n       <a class="reference internal" href="#flask.blueprints.BlueprintSetupState" title="flask.blueprints.BlueprintSetupState">\n        <code class="xref py py-class docutils literal notranslate">\n         <span class="pre">\n          BlueprintSetupState\n         </span>\n        </code>\n       </a>\n       . They can be\naccessed in\n       <a class="reference internal" href="#flask.Blueprint.record" title="flask.Blueprint.record">\n        <code class="xref py py-meth docutils literal notranslate">\n         <span class="pre">\n          record()\n         </span>\n        </code>\n       </a>\n       callbacks.\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     None\n    </p>\n   </dd>\n  </dl>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionchanged">\n    <p>\n     <span class="versionmodified changed">\n      Changed in version 2.0.1:\n     </span>\n     The\n     <code class="docutils literal notranslate">\n      <span class="pre">\n       name\n      </span>\n     </code>\n     option can be used to change the (pre-dotted)\nname the blueprint is registered with. This allows the same\nblueprint to be registered multiple times with unique names\nfor\n     <code class="docutils literal notranslate">\n      <span class="pre">\n       url_for\n      </span>\n     </code>\n     .\n    </p>\n   </div>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.7.\n     </span>\n    </p>\n   </div>\n  </details>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "register_error_handler",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.register_error_handler">\n  <span class="sig-name descname">\n   <span class="pre">\n    register_error_handler\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     code_or_exception\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     f\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.register_error_handler" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Alternative error attach function to the\n   <a class="reference internal" href="#flask.Flask.errorhandler" title="flask.Flask.errorhandler">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      errorhandler()\n     </span>\n    </code>\n   </a>\n   decorator that is more straightforward to use for non decorator\nusage.\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.7.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        code_or_exception\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Type" title="(in Python v3.11)">\n        <em>\n         Type\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/exceptions.html#Exception" title="(in Python v3.11)">\n        <em>\n         Exception\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/functions.html#int" title="(in Python v3.11)">\n        <em>\n         int\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        f\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Callable" title="(in Python v3.11)">\n        <em>\n         Callable\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference internal" href="#flask.Response" title="flask.Response">\n        <em>\n         Response\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n        <em>\n         bytes\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n        <em>\n         List\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n        <em>\n         Mapping\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n        <em>\n         Iterator\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n        <em>\n         Iterator\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n        <em>\n         bytes\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n        <em>\n         Tuple\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference internal" href="#flask.Response" title="flask.Response">\n        <em>\n         Response\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n        <em>\n         bytes\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n        <em>\n         List\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n        <em>\n         Mapping\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n        <em>\n         Iterator\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n        <em>\n         Iterator\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n        <em>\n         bytes\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <em>\n        Headers\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n        <em>\n         Mapping\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n        <em>\n         List\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n        <em>\n         Tuple\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <em>\n        ...\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Sequence" title="(in Python v3.11)">\n        <em>\n         Sequence\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n        <em>\n         Tuple\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n        <em>\n         List\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n        <em>\n         Tuple\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <em>\n        ...\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n        <em>\n         Tuple\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference internal" href="#flask.Response" title="flask.Response">\n        <em>\n         Response\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n        <em>\n         bytes\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n        <em>\n         List\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n        <em>\n         Mapping\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n        <em>\n         Iterator\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n        <em>\n         Iterator\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n        <em>\n         bytes\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/functions.html#int" title="(in Python v3.11)">\n        <em>\n         int\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n        <em>\n         Tuple\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference internal" href="#flask.Response" title="flask.Response">\n        <em>\n         Response\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n        <em>\n         bytes\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n        <em>\n         List\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n        <em>\n         Mapping\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n        <em>\n         Iterator\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n        <em>\n         Iterator\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n        <em>\n         bytes\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/functions.html#int" title="(in Python v3.11)">\n        <em>\n         int\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <em>\n        Headers\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n        <em>\n         Mapping\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n        <em>\n         List\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n        <em>\n         Tuple\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <em>\n        ...\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Sequence" title="(in Python v3.11)">\n        <em>\n         Sequence\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n        <em>\n         Tuple\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n        <em>\n         List\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n        <em>\n         Tuple\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <em>\n        ...\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <em>\n        WSGIApplication\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     None\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "request_context",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.request_context">\n  <span class="sig-name descname">\n   <span class="pre">\n    request_context\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     environ\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.request_context" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Create a\n   <a class="reference internal" href="#flask.ctx.RequestContext" title="flask.ctx.RequestContext">\n    <code class="xref py py-class docutils literal notranslate">\n     <span class="pre">\n      RequestContext\n     </span>\n    </code>\n   </a>\n   representing a\nWSGI environment. Use a\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     with\n    </span>\n   </code>\n   block to push the context,\nwhich will make\n   <a class="reference internal" href="#flask.request" title="flask.request">\n    <code class="xref py py-data docutils literal notranslate">\n     <span class="pre">\n      request\n     </span>\n    </code>\n   </a>\n   point at this request.\n  </p>\n  <p>\n   See\n   <a class="reference internal" href="../reqcontext/">\n    <span class="doc">\n     The Request Context\n    </span>\n   </a>\n   .\n  </p>\n  <p>\n   Typically you should not call this from your own code. A request\ncontext is automatically pushed by the\n   <a class="reference internal" href="#flask.Flask.wsgi_app" title="flask.Flask.wsgi_app">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      wsgi_app()\n     </span>\n    </code>\n   </a>\n   when\nhandling a request. Use\n   <a class="reference internal" href="#flask.Flask.test_request_context" title="flask.Flask.test_request_context">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      test_request_context()\n     </span>\n    </code>\n   </a>\n   to create\nan environment and context instead of this method.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      environ\n     </strong>\n     (\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#dict" title="(in Python v3.11)">\n      <em>\n       dict\n      </em>\n     </a>\n     ) \u00e2\u0080\u0093 a WSGI environment\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference internal" href="#flask.ctx.RequestContext" title="flask.ctx.RequestContext">\n      flask.ctx.RequestContext\n     </a>\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "route",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.route">\n  <span class="sig-name descname">\n   <span class="pre">\n    route\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     rule\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="o">\n    <span class="pre">\n     **\n    </span>\n   </span>\n   <span class="n">\n    <span class="pre">\n     options\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.route" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Decorate a view function to register it with the given URL\nrule and options. Calls\n   <a class="reference internal" href="#flask.Flask.add_url_rule" title="flask.Flask.add_url_rule">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      add_url_rule()\n     </span>\n    </code>\n   </a>\n   , which has more\ndetails about the implementation.\n  </p>\n  <div class="highlight-python notranslate">\n   <div class="highlight">\n    <pre><span></span><span class="nd">@app</span><span class="o">.</span><span class="n">route</span><span class="p">(</span><span class="s2">"/"</span><span class="p">)</span>\n<span class="k">def</span> <span class="nf">index</span><span class="p">():</span>\n    <span class="k">return</span> <span class="s2">"Hello, World!"</span>\n</pre>\n   </div>\n  </div>\n  <p>\n   See\n   <a class="reference internal" href="#url-route-registrations">\n    <span class="std std-ref">\n     URL Route Registrations\n    </span>\n   </a>\n   .\n  </p>\n  <p>\n   The endpoint name for the route defaults to the name of the view\nfunction if the\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     endpoint\n    </span>\n   </code>\n   parameter isn\u00e2\u0080\u0099t passed.\n  </p>\n  <p>\n   The\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     methods\n    </span>\n   </code>\n   parameter defaults to\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     ["GET"]\n    </span>\n   </code>\n   .\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     HEAD\n    </span>\n   </code>\n   and\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     OPTIONS\n    </span>\n   </code>\n   are added automatically.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        rule\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 The URL rule string.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        options\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 Extra options passed to the\n       <a class="reference external" href="https://werkzeug.palletsprojects.com/en/2.2.x/routing/#werkzeug.routing.Rule" title="(in Werkzeug v2.2.x)">\n        <code class="xref py py-class docutils literal notranslate">\n         <span class="pre">\n          Rule\n         </span>\n        </code>\n       </a>\n       object.\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Callable" title="(in Python v3.11)">\n      <em>\n       Callable\n      </em>\n     </a>\n     [[flask.scaffold.T_route], flask.scaffold.T_route]\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "run",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.run">\n  <span class="sig-name descname">\n   <span class="pre">\n    run\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     host\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     None\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     port\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     None\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     debug\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     None\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     load_dotenv\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     True\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="o">\n    <span class="pre">\n     **\n    </span>\n   </span>\n   <span class="n">\n    <span class="pre">\n     options\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.run" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Runs the application on a local development server.\n  </p>\n  <p>\n   Do not use\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     run()\n    </span>\n   </code>\n   in a production setting. It is not intended to\nmeet security and performance requirements for a production server.\nInstead, see\n   <a class="reference internal" href="../deploying/">\n    <span class="doc">\n     Deploying to Production\n    </span>\n   </a>\n   for WSGI server recommendations.\n  </p>\n  <p>\n   If the\n   <a class="reference internal" href="#flask.Flask.debug" title="flask.Flask.debug">\n    <code class="xref py py-attr docutils literal notranslate">\n     <span class="pre">\n      debug\n     </span>\n    </code>\n   </a>\n   flag is set the server will automatically reload\nfor code changes and show a debugger in case an exception happened.\n  </p>\n  <p>\n   If you want to run the application in debug mode, but disable the\ncode execution on the interactive debugger, you can pass\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     use_evalex=False\n    </span>\n   </code>\n   as parameter.  This will keep the debugger\u00e2\u0080\u0099s\ntraceback screen active, but disable code execution.\n  </p>\n  <p>\n   It is not recommended to use this function for development with\nautomatic reloading as this is badly supported.  Instead you should\nbe using the\n   <strong class="command">\n    flask\n   </strong>\n   command line script\u00e2\u0080\u0099s\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     run\n    </span>\n   </code>\n   support.\n  </p>\n  <div class="admonition-keep-in-mind admonition">\n   <p class="admonition-title">\n    Keep in Mind\n   </p>\n   <p>\n    Flask will suppress any server error with a generic error page\nunless it is in debug mode.  As such to enable just the\ninteractive debugger without the code reloading, you have to\ninvoke\n    <a class="reference internal" href="#flask.Flask.run" title="flask.Flask.run">\n     <code class="xref py py-meth docutils literal notranslate">\n      <span class="pre">\n       run()\n      </span>\n     </code>\n    </a>\n    with\n    <code class="docutils literal notranslate">\n     <span class="pre">\n      debug=True\n     </span>\n    </code>\n    and\n    <code class="docutils literal notranslate">\n     <span class="pre">\n      use_reloader=False\n     </span>\n    </code>\n    .\nSetting\n    <code class="docutils literal notranslate">\n     <span class="pre">\n      use_debugger\n     </span>\n    </code>\n    to\n    <code class="docutils literal notranslate">\n     <span class="pre">\n      True\n     </span>\n    </code>\n    without being in debug mode\nwon\u00e2\u0080\u0099t catch any exceptions because there won\u00e2\u0080\u0099t be any to\ncatch.\n   </p>\n  </div>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        host\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n        <em>\n         Optional\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       ) \u00e2\u0080\u0093 the hostname to listen on. Set this to\n       <code class="docutils literal notranslate">\n        <span class="pre">\n         \'0.0.0.0\'\n        </span>\n       </code>\n       to\nhave the server available externally as well. Defaults to\n       <code class="docutils literal notranslate">\n        <span class="pre">\n         \'127.0.0.1\'\n        </span>\n       </code>\n       or the host in the\n       <code class="docutils literal notranslate">\n        <span class="pre">\n         SERVER_NAME\n        </span>\n       </code>\n       config variable\nif present.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        port\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n        <em>\n         Optional\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/functions.html#int" title="(in Python v3.11)">\n        <em>\n         int\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       ) \u00e2\u0080\u0093 the port of the webserver. Defaults to\n       <code class="docutils literal notranslate">\n        <span class="pre">\n         5000\n        </span>\n       </code>\n       or the\nport defined in the\n       <code class="docutils literal notranslate">\n        <span class="pre">\n         SERVER_NAME\n        </span>\n       </code>\n       config variable if present.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        debug\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n        <em>\n         Optional\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/functions.html#bool" title="(in Python v3.11)">\n        <em>\n         bool\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       ) \u00e2\u0080\u0093 if given, enable or disable debug mode. See\n       <a class="reference internal" href="#flask.Flask.debug" title="flask.Flask.debug">\n        <code class="xref py py-attr docutils literal notranslate">\n         <span class="pre">\n          debug\n         </span>\n        </code>\n       </a>\n       .\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        load_dotenv\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/functions.html#bool" title="(in Python v3.11)">\n        <em>\n         bool\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 Load the nearest\n       <code class="file docutils literal notranslate">\n        <span class="pre">\n         .env\n        </span>\n       </code>\n       and\n       <code class="file docutils literal notranslate">\n        <span class="pre">\n         .flaskenv\n        </span>\n       </code>\n       files to set environment variables. Will also change the working\ndirectory to the directory containing the first file found.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        options\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 the options to be forwarded to the underlying Werkzeug\nserver. See\n       <a class="reference external" href="https://werkzeug.palletsprojects.com/en/2.2.x/serving/#werkzeug.serving.run_simple" title="(in Werkzeug v2.2.x)">\n        <code class="xref py py-func docutils literal notranslate">\n         <span class="pre">\n          werkzeug.serving.run_simple()\n         </span>\n        </code>\n       </a>\n       for more\ninformation.\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     None\n    </p>\n   </dd>\n  </dl>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionchanged">\n    <p>\n     <span class="versionmodified changed">\n      Changed in version 1.0:\n     </span>\n     If installed, python-dotenv will be used to load environment\nvariables from\n     <code class="file docutils literal notranslate">\n      <span class="pre">\n       .env\n      </span>\n     </code>\n     and\n     <code class="file docutils literal notranslate">\n      <span class="pre">\n       .flaskenv\n      </span>\n     </code>\n     files.\n    </p>\n    <p>\n     The\n     <span class="target" id="index-0">\n     </span>\n     <code class="xref std std-envvar docutils literal notranslate">\n      <span class="pre">\n       FLASK_DEBUG\n      </span>\n     </code>\n     environment variable will override\n     <a class="reference internal" href="#flask.Flask.debug" title="flask.Flask.debug">\n      <code class="xref py py-attr docutils literal notranslate">\n       <span class="pre">\n        debug\n       </span>\n      </code>\n     </a>\n     .\n    </p>\n    <p>\n     Threaded mode is enabled by default.\n    </p>\n   </div>\n   <div class="versionchanged">\n    <p>\n     <span class="versionmodified changed">\n      Changed in version 0.10:\n     </span>\n     The default port is now picked from the\n     <code class="docutils literal notranslate">\n      <span class="pre">\n       SERVER_NAME\n      </span>\n     </code>\n     variable.\n    </p>\n   </div>\n  </details>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "select_jinja_autoescape",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.select_jinja_autoescape">\n  <span class="sig-name descname">\n   <span class="pre">\n    select_jinja_autoescape\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     filename\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.select_jinja_autoescape" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Returns\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     True\n    </span>\n   </code>\n   if autoescaping should be active for the given\ntemplate name. If no template name is given, returns\n   <cite>\n    True\n   </cite>\n   .\n  </p>\n  <div class="versionchanged">\n   <p>\n    <span class="versionmodified changed">\n     Changed in version 2.2:\n    </span>\n    Autoescaping is now enabled by default for\n    <code class="docutils literal notranslate">\n     <span class="pre">\n      .svg\n     </span>\n    </code>\n    files.\n   </p>\n  </div>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.5.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      filename\n     </strong>\n     (\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      <em>\n       str\n      </em>\n     </a>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/functions.html#bool" title="(in Python v3.11)">\n      bool\n     </a>\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "send_static_file",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.send_static_file">\n  <span class="sig-name descname">\n   <span class="pre">\n    send_static_file\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     filename\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.send_static_file" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   The view function used to serve files from\n   <a class="reference internal" href="#flask.Flask.static_folder" title="flask.Flask.static_folder">\n    <code class="xref py py-attr docutils literal notranslate">\n     <span class="pre">\n      static_folder\n     </span>\n    </code>\n   </a>\n   . A route is automatically registered for\nthis view at\n   <a class="reference internal" href="#flask.Flask.static_url_path" title="flask.Flask.static_url_path">\n    <code class="xref py py-attr docutils literal notranslate">\n     <span class="pre">\n      static_url_path\n     </span>\n    </code>\n   </a>\n   if\n   <a class="reference internal" href="#flask.Flask.static_folder" title="flask.Flask.static_folder">\n    <code class="xref py py-attr docutils literal notranslate">\n     <span class="pre">\n      static_folder\n     </span>\n    </code>\n   </a>\n   is\nset.\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.5.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      filename\n     </strong>\n     (\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      <em>\n       str\n      </em>\n     </a>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference internal" href="#flask.Response" title="flask.Response">\n      Response\n     </a>\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "shell_context_processor",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.shell_context_processor">\n  <span class="sig-name descname">\n   <span class="pre">\n    shell_context_processor\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     f\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.shell_context_processor" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Registers a shell context processor function.\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.11.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      f\n     </strong>\n     (\n     <em>\n      flask.app.T_shell_context_processor\n     </em>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     flask.app.T_shell_context_processor\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "should_ignore_error",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.should_ignore_error">\n  <span class="sig-name descname">\n   <span class="pre">\n    should_ignore_error\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     error\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.should_ignore_error" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   This is called to figure out if an error should be ignored\nor not as far as the teardown system is concerned.  If this\nfunction returns\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     True\n    </span>\n   </code>\n   then the teardown handlers will not be\npassed the error.\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.10.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      error\n     </strong>\n     (\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n      <em>\n       Optional\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/exceptions.html#BaseException" title="(in Python v3.11)">\n      <em>\n       BaseException\n      </em>\n     </a>\n     <em>\n      ]\n     </em>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/functions.html#bool" title="(in Python v3.11)">\n      bool\n     </a>\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "teardown_appcontext",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.teardown_appcontext">\n  <span class="sig-name descname">\n   <span class="pre">\n    teardown_appcontext\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     f\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.teardown_appcontext" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Registers a function to be called when the application\ncontext is popped. The application context is typically popped\nafter the request context for each request, at the end of CLI\ncommands, or after a manually pushed context ends.\n  </p>\n  <div class="highlight-python notranslate">\n   <div class="highlight">\n    <pre><span></span><span class="k">with</span> <span class="n">app</span><span class="o">.</span><span class="n">app_context</span><span class="p">():</span>\n    <span class="o">...</span>\n</pre>\n   </div>\n  </div>\n  <p>\n   When the\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     with\n    </span>\n   </code>\n   block exits (or\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     ctx.pop()\n    </span>\n   </code>\n   is called), the\nteardown functions are called just before the app context is\nmade inactive. Since a request context typically also manages an\napplication context it would also be called when you pop a\nrequest context.\n  </p>\n  <p>\n   When a teardown function was called because of an unhandled\nexception it will be passed an error object. If an\n   <a class="reference internal" href="#flask.Flask.errorhandler" title="flask.Flask.errorhandler">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      errorhandler()\n     </span>\n    </code>\n   </a>\n   is registered, it will handle the exception\nand the teardown will not receive it.\n  </p>\n  <p>\n   Teardown functions must avoid raising exceptions. If they\nexecute code that might fail they must surround that code with a\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     try\n    </span>\n   </code>\n   /\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     except\n    </span>\n   </code>\n   block and log any errors.\n  </p>\n  <p>\n   The return values of teardown functions are ignored.\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.9.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      f\n     </strong>\n     (\n     <em>\n      flask.app.T_teardown\n     </em>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     flask.app.T_teardown\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "teardown_request",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.teardown_request">\n  <span class="sig-name descname">\n   <span class="pre">\n    teardown_request\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     f\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.teardown_request" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Register a function to be called when the request context is\npopped. Typically this happens at the end of each request, but\ncontexts may be pushed manually as well during testing.\n  </p>\n  <div class="highlight-python notranslate">\n   <div class="highlight">\n    <pre><span></span><span class="k">with</span> <span class="n">app</span><span class="o">.</span><span class="n">test_request_context</span><span class="p">():</span>\n    <span class="o">...</span>\n</pre>\n   </div>\n  </div>\n  <p>\n   When the\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     with\n    </span>\n   </code>\n   block exits (or\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     ctx.pop()\n    </span>\n   </code>\n   is called), the\nteardown functions are called just before the request context is\nmade inactive.\n  </p>\n  <p>\n   When a teardown function was called because of an unhandled\nexception it will be passed an error object. If an\n   <a class="reference internal" href="#flask.Flask.errorhandler" title="flask.Flask.errorhandler">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      errorhandler()\n     </span>\n    </code>\n   </a>\n   is registered, it will handle the exception\nand the teardown will not receive it.\n  </p>\n  <p>\n   Teardown functions must avoid raising exceptions. If they\nexecute code that might fail they must surround that code with a\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     try\n    </span>\n   </code>\n   /\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     except\n    </span>\n   </code>\n   block and log any errors.\n  </p>\n  <p>\n   The return values of teardown functions are ignored.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      f\n     </strong>\n     (\n     <em>\n      flask.scaffold.T_teardown\n     </em>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     flask.scaffold.T_teardown\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "template_filter",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.template_filter">\n  <span class="sig-name descname">\n   <span class="pre">\n    template_filter\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     name\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     None\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.template_filter" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   A decorator that is used to register custom template filter.\nYou can specify a name for the filter, otherwise the function\nname will be used. Example:\n  </p>\n  <div class="highlight-default notranslate">\n   <div class="highlight">\n    <pre><span></span><span class="nd">@app</span><span class="o">.</span><span class="n">template_filter</span><span class="p">()</span>\n<span class="k">def</span> <span class="nf">reverse</span><span class="p">(</span><span class="n">s</span><span class="p">):</span>\n    <span class="k">return</span> <span class="n">s</span><span class="p">[::</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>\n</pre>\n   </div>\n  </div>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      name\n     </strong>\n     (\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n      <em>\n       Optional\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      <em>\n       str\n      </em>\n     </a>\n     <em>\n      ]\n     </em>\n     ) \u00e2\u0080\u0093 the optional name of the filter, otherwise the\nfunction name will be used.\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Callable" title="(in Python v3.11)">\n      <em>\n       Callable\n      </em>\n     </a>\n     [[flask.app.T_template_filter], flask.app.T_template_filter]\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "template_global",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.template_global">\n  <span class="sig-name descname">\n   <span class="pre">\n    template_global\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     name\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     None\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.template_global" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   A decorator that is used to register a custom template global function.\nYou can specify a name for the global function, otherwise the function\nname will be used. Example:\n  </p>\n  <div class="highlight-default notranslate">\n   <div class="highlight">\n    <pre><span></span><span class="nd">@app</span><span class="o">.</span><span class="n">template_global</span><span class="p">()</span>\n<span class="k">def</span> <span class="nf">double</span><span class="p">(</span><span class="n">n</span><span class="p">):</span>\n    <span class="k">return</span> <span class="mi">2</span> <span class="o">*</span> <span class="n">n</span>\n</pre>\n   </div>\n  </div>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.10.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      name\n     </strong>\n     (\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n      <em>\n       Optional\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      <em>\n       str\n      </em>\n     </a>\n     <em>\n      ]\n     </em>\n     ) \u00e2\u0080\u0093 the optional name of the global function, otherwise the\nfunction name will be used.\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Callable" title="(in Python v3.11)">\n      <em>\n       Callable\n      </em>\n     </a>\n     [[flask.app.T_template_global], flask.app.T_template_global]\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "template_test",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.template_test">\n  <span class="sig-name descname">\n   <span class="pre">\n    template_test\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     name\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     None\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.template_test" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   A decorator that is used to register custom template test.\nYou can specify a name for the test, otherwise the function\nname will be used. Example:\n  </p>\n  <div class="highlight-default notranslate">\n   <div class="highlight">\n    <pre><span></span><span class="nd">@app</span><span class="o">.</span><span class="n">template_test</span><span class="p">()</span>\n<span class="k">def</span> <span class="nf">is_prime</span><span class="p">(</span><span class="n">n</span><span class="p">):</span>\n    <span class="k">if</span> <span class="n">n</span> <span class="o">==</span> <span class="mi">2</span><span class="p">:</span>\n        <span class="k">return</span> <span class="kc">True</span>\n    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="nb">int</span><span class="p">(</span><span class="n">math</span><span class="o">.</span><span class="n">ceil</span><span class="p">(</span><span class="n">math</span><span class="o">.</span><span class="n">sqrt</span><span class="p">(</span><span class="n">n</span><span class="p">)))</span> <span class="o">+</span> <span class="mi">1</span><span class="p">):</span>\n        <span class="k">if</span> <span class="n">n</span> <span class="o">%</span> <span class="n">i</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>\n            <span class="k">return</span> <span class="kc">False</span>\n    <span class="k">return</span> <span class="kc">True</span>\n</pre>\n   </div>\n  </div>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.10.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      name\n     </strong>\n     (\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n      <em>\n       Optional\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      <em>\n       str\n      </em>\n     </a>\n     <em>\n      ]\n     </em>\n     ) \u00e2\u0080\u0093 the optional name of the test, otherwise the\nfunction name will be used.\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Callable" title="(in Python v3.11)">\n      <em>\n       Callable\n      </em>\n     </a>\n     [[flask.app.T_template_test], flask.app.T_template_test]\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "test_cli_runner",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.test_cli_runner">\n  <span class="sig-name descname">\n   <span class="pre">\n    test_cli_runner\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="o">\n    <span class="pre">\n     **\n    </span>\n   </span>\n   <span class="n">\n    <span class="pre">\n     kwargs\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.test_cli_runner" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Create a CLI runner for testing CLI commands.\nSee\n   <a class="reference internal" href="../testing/#testing-cli">\n    <span class="std std-ref">\n     Running Commands with the CLI Runner\n    </span>\n   </a>\n   .\n  </p>\n  <p>\n   Returns an instance of\n   <a class="reference internal" href="#flask.Flask.test_cli_runner_class" title="flask.Flask.test_cli_runner_class">\n    <code class="xref py py-attr docutils literal notranslate">\n     <span class="pre">\n      test_cli_runner_class\n     </span>\n    </code>\n   </a>\n   , by default\n   <a class="reference internal" href="#flask.testing.FlaskCliRunner" title="flask.testing.FlaskCliRunner">\n    <code class="xref py py-class docutils literal notranslate">\n     <span class="pre">\n      FlaskCliRunner\n     </span>\n    </code>\n   </a>\n   . The Flask app object is\npassed as the first argument.\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 1.0.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      kwargs\n     </strong>\n     (\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference internal" href="#flask.testing.FlaskCliRunner" title="flask.testing.FlaskCliRunner">\n      FlaskCliRunner\n     </a>\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "test_client",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.test_client">\n  <span class="sig-name descname">\n   <span class="pre">\n    test_client\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     use_cookies\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     True\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="o">\n    <span class="pre">\n     **\n    </span>\n   </span>\n   <span class="n">\n    <span class="pre">\n     kwargs\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.test_client" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Creates a test client for this application.  For information\nabout unit testing head over to\n   <a class="reference internal" href="../testing/">\n    <span class="doc">\n     Testing Flask Applications\n    </span>\n   </a>\n   .\n  </p>\n  <p>\n   Note that if you are testing for assertions or exceptions in your\napplication code, you must set\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     app.testing\n    </span>\n    <span class="pre">\n     =\n    </span>\n    <span class="pre">\n     True\n    </span>\n   </code>\n   in order for the\nexceptions to propagate to the test client.  Otherwise, the exception\nwill be handled by the application (not visible to the test client) and\nthe only indication of an AssertionError or other exception will be a\n500 status code response to the test client.  See the\n   <a class="reference internal" href="#flask.Flask.testing" title="flask.Flask.testing">\n    <code class="xref py py-attr docutils literal notranslate">\n     <span class="pre">\n      testing\n     </span>\n    </code>\n   </a>\n   attribute.  For example:\n  </p>\n  <div class="highlight-default notranslate">\n   <div class="highlight">\n    <pre><span></span><span class="n">app</span><span class="o">.</span><span class="n">testing</span> <span class="o">=</span> <span class="kc">True</span>\n<span class="n">client</span> <span class="o">=</span> <span class="n">app</span><span class="o">.</span><span class="n">test_client</span><span class="p">()</span>\n</pre>\n   </div>\n  </div>\n  <p>\n   The test client can be used in a\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     with\n    </span>\n   </code>\n   block to defer the closing down\nof the context until the end of the\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     with\n    </span>\n   </code>\n   block.  This is useful if\nyou want to access the context locals for testing:\n  </p>\n  <div class="highlight-default notranslate">\n   <div class="highlight">\n    <pre><span></span><span class="k">with</span> <span class="n">app</span><span class="o">.</span><span class="n">test_client</span><span class="p">()</span> <span class="k">as</span> <span class="n">c</span><span class="p">:</span>\n    <span class="n">rv</span> <span class="o">=</span> <span class="n">c</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">\'/?vodka=42\'</span><span class="p">)</span>\n    <span class="k">assert</span> <span class="n">request</span><span class="o">.</span><span class="n">args</span><span class="p">[</span><span class="s1">\'vodka\'</span><span class="p">]</span> <span class="o">==</span> <span class="s1">\'42\'</span>\n</pre>\n   </div>\n  </div>\n  <p>\n   Additionally, you may pass optional keyword arguments that will then\nbe passed to the application\u00e2\u0080\u0099s\n   <a class="reference internal" href="#flask.Flask.test_client_class" title="flask.Flask.test_client_class">\n    <code class="xref py py-attr docutils literal notranslate">\n     <span class="pre">\n      test_client_class\n     </span>\n    </code>\n   </a>\n   constructor.\nFor example:\n  </p>\n  <div class="highlight-default notranslate">\n   <div class="highlight">\n    <pre><span></span><span class="kn">from</span> <span class="nn">flask.testing</span> <span class="kn">import</span> <span class="n">FlaskClient</span>\n\n<span class="k">class</span> <span class="nc">CustomClient</span><span class="p">(</span><span class="n">FlaskClient</span><span class="p">):</span>\n    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>\n        <span class="bp">self</span><span class="o">.</span><span class="n">_authentication</span> <span class="o">=</span> <span class="n">kwargs</span><span class="o">.</span><span class="n">pop</span><span class="p">(</span><span class="s2">"authentication"</span><span class="p">)</span>\n        <span class="nb">super</span><span class="p">(</span><span class="n">CustomClient</span><span class="p">,</span><span class="bp">self</span><span class="p">)</span><span class="o">.</span><span class="fm">__init__</span><span class="p">(</span> <span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">)</span>\n\n<span class="n">app</span><span class="o">.</span><span class="n">test_client_class</span> <span class="o">=</span> <span class="n">CustomClient</span>\n<span class="n">client</span> <span class="o">=</span> <span class="n">app</span><span class="o">.</span><span class="n">test_client</span><span class="p">(</span><span class="n">authentication</span><span class="o">=</span><span class="s1">\'Basic ....\'</span><span class="p">)</span>\n</pre>\n   </div>\n  </div>\n  <p>\n   See\n   <a class="reference internal" href="#flask.testing.FlaskClient" title="flask.testing.FlaskClient">\n    <code class="xref py py-class docutils literal notranslate">\n     <span class="pre">\n      FlaskClient\n     </span>\n    </code>\n   </a>\n   for more information.\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionchanged">\n    <p>\n     <span class="versionmodified changed">\n      Changed in version 0.11:\n     </span>\n     Added\n     <cite>\n      **kwargs\n     </cite>\n     to support passing additional keyword arguments to\nthe constructor of\n     <a class="reference internal" href="#flask.Flask.test_client_class" title="flask.Flask.test_client_class">\n      <code class="xref py py-attr docutils literal notranslate">\n       <span class="pre">\n        test_client_class\n       </span>\n      </code>\n     </a>\n     .\n    </p>\n   </div>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.7:\n     </span>\n     The\n     <cite>\n      use_cookies\n     </cite>\n     parameter was added as well as the ability\nto override the client to be used by setting the\n     <a class="reference internal" href="#flask.Flask.test_client_class" title="flask.Flask.test_client_class">\n      <code class="xref py py-attr docutils literal notranslate">\n       <span class="pre">\n        test_client_class\n       </span>\n      </code>\n     </a>\n     attribute.\n    </p>\n   </div>\n   <div class="versionchanged">\n    <p>\n     <span class="versionmodified changed">\n      Changed in version 0.4:\n     </span>\n     added support for\n     <code class="docutils literal notranslate">\n      <span class="pre">\n       with\n      </span>\n     </code>\n     block usage for the client.\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        use_cookies\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/functions.html#bool" title="(in Python v3.11)">\n        <em>\n         bool\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        kwargs\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference internal" href="#flask.testing.FlaskClient" title="flask.testing.FlaskClient">\n      FlaskClient\n     </a>\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "test_request_context",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.test_request_context">\n  <span class="sig-name descname">\n   <span class="pre">\n    test_request_context\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="o">\n    <span class="pre">\n     *\n    </span>\n   </span>\n   <span class="n">\n    <span class="pre">\n     args\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="o">\n    <span class="pre">\n     **\n    </span>\n   </span>\n   <span class="n">\n    <span class="pre">\n     kwargs\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.test_request_context" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Create a\n   <a class="reference internal" href="#flask.ctx.RequestContext" title="flask.ctx.RequestContext">\n    <code class="xref py py-class docutils literal notranslate">\n     <span class="pre">\n      RequestContext\n     </span>\n    </code>\n   </a>\n   for a WSGI\nenvironment created from the given values. This is mostly useful\nduring testing, where you may want to run a function that uses\nrequest data without dispatching a full request.\n  </p>\n  <p>\n   See\n   <a class="reference internal" href="../reqcontext/">\n    <span class="doc">\n     The Request Context\n    </span>\n   </a>\n   .\n  </p>\n  <p>\n   Use a\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     with\n    </span>\n   </code>\n   block to push the context, which will make\n   <a class="reference internal" href="#flask.request" title="flask.request">\n    <code class="xref py py-data docutils literal notranslate">\n     <span class="pre">\n      request\n     </span>\n    </code>\n   </a>\n   point at the request for the created\nenvironment.\n  </p>\n  <div class="highlight-default notranslate">\n   <div class="highlight">\n    <pre><span></span><span class="k">with</span> <span class="n">test_request_context</span><span class="p">(</span><span class="o">...</span><span class="p">):</span>\n    <span class="n">generate_report</span><span class="p">()</span>\n</pre>\n   </div>\n  </div>\n  <p>\n   When using the shell, it may be easier to push and pop the\ncontext manually to avoid indentation.\n  </p>\n  <div class="highlight-default notranslate">\n   <div class="highlight">\n    <pre><span></span><span class="n">ctx</span> <span class="o">=</span> <span class="n">app</span><span class="o">.</span><span class="n">test_request_context</span><span class="p">(</span><span class="o">...</span><span class="p">)</span>\n<span class="n">ctx</span><span class="o">.</span><span class="n">push</span><span class="p">()</span>\n<span class="o">...</span>\n<span class="n">ctx</span><span class="o">.</span><span class="n">pop</span><span class="p">()</span>\n</pre>\n   </div>\n  </div>\n  <p>\n   Takes the same arguments as Werkzeug\u00e2\u0080\u0099s\n   <a class="reference external" href="https://werkzeug.palletsprojects.com/en/2.2.x/test/#werkzeug.test.EnvironBuilder" title="(in Werkzeug v2.2.x)">\n    <code class="xref py py-class docutils literal notranslate">\n     <span class="pre">\n      EnvironBuilder\n     </span>\n    </code>\n   </a>\n   , with some defaults from\nthe application. See the linked Werkzeug docs for most of the\navailable arguments. Flask-specific behavior is listed here.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        path\n       </strong>\n       \u00e2\u0080\u0093 URL path being requested.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        base_url\n       </strong>\n       \u00e2\u0080\u0093 Base URL where the app is being served, which\n       <code class="docutils literal notranslate">\n        <span class="pre">\n         path\n        </span>\n       </code>\n       is relative to. If not given, built from\n       <a class="reference internal" href="../config/#PREFERRED_URL_SCHEME" title="PREFERRED_URL_SCHEME">\n        <code class="xref py py-data docutils literal notranslate">\n         <span class="pre">\n          PREFERRED_URL_SCHEME\n         </span>\n        </code>\n       </a>\n       ,\n       <code class="docutils literal notranslate">\n        <span class="pre">\n         subdomain\n        </span>\n       </code>\n       ,\n       <a class="reference internal" href="../config/#SERVER_NAME" title="SERVER_NAME">\n        <code class="xref py py-data docutils literal notranslate">\n         <span class="pre">\n          SERVER_NAME\n         </span>\n        </code>\n       </a>\n       , and\n       <a class="reference internal" href="../config/#APPLICATION_ROOT" title="APPLICATION_ROOT">\n        <code class="xref py py-data docutils literal notranslate">\n         <span class="pre">\n          APPLICATION_ROOT\n         </span>\n        </code>\n       </a>\n       .\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        subdomain\n       </strong>\n       \u00e2\u0080\u0093 Subdomain name to append to\n       <a class="reference internal" href="../config/#SERVER_NAME" title="SERVER_NAME">\n        <code class="xref py py-data docutils literal notranslate">\n         <span class="pre">\n          SERVER_NAME\n         </span>\n        </code>\n       </a>\n       .\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        url_scheme\n       </strong>\n       \u00e2\u0080\u0093 Scheme to use instead of\n       <a class="reference internal" href="../config/#PREFERRED_URL_SCHEME" title="PREFERRED_URL_SCHEME">\n        <code class="xref py py-data docutils literal notranslate">\n         <span class="pre">\n          PREFERRED_URL_SCHEME\n         </span>\n        </code>\n       </a>\n       .\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        data\n       </strong>\n       \u00e2\u0080\u0093 The request body, either as a string or a dict of\nform keys and values.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        json\n       </strong>\n       \u00e2\u0080\u0093 If given, this is serialized as JSON and passed as\n       <code class="docutils literal notranslate">\n        <span class="pre">\n         data\n        </span>\n       </code>\n       . Also defaults\n       <code class="docutils literal notranslate">\n        <span class="pre">\n         content_type\n        </span>\n       </code>\n       to\n       <code class="docutils literal notranslate">\n        <span class="pre">\n         application/json\n        </span>\n       </code>\n       .\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        args\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 other positional arguments passed to\n       <a class="reference external" href="https://werkzeug.palletsprojects.com/en/2.2.x/test/#werkzeug.test.EnvironBuilder" title="(in Werkzeug v2.2.x)">\n        <code class="xref py py-class docutils literal notranslate">\n         <span class="pre">\n          EnvironBuilder\n         </span>\n        </code>\n       </a>\n       .\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        kwargs\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 other keyword arguments passed to\n       <a class="reference external" href="https://werkzeug.palletsprojects.com/en/2.2.x/test/#werkzeug.test.EnvironBuilder" title="(in Werkzeug v2.2.x)">\n        <code class="xref py py-class docutils literal notranslate">\n         <span class="pre">\n          EnvironBuilder\n         </span>\n        </code>\n       </a>\n       .\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference internal" href="#flask.ctx.RequestContext" title="flask.ctx.RequestContext">\n      flask.ctx.RequestContext\n     </a>\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "trap_http_exception",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.trap_http_exception">\n  <span class="sig-name descname">\n   <span class="pre">\n    trap_http_exception\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     e\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.trap_http_exception" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Checks if an HTTP exception should be trapped or not.  By default\nthis will return\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     False\n    </span>\n   </code>\n   for all exceptions except for a bad request\nkey error if\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     TRAP_BAD_REQUEST_ERRORS\n    </span>\n   </code>\n   is set to\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     True\n    </span>\n   </code>\n   .  It\nalso returns\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     True\n    </span>\n   </code>\n   if\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     TRAP_HTTP_EXCEPTIONS\n    </span>\n   </code>\n   is set to\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     True\n    </span>\n   </code>\n   .\n  </p>\n  <p>\n   This is called for all HTTP exceptions raised by a view function.\nIf it returns\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     True\n    </span>\n   </code>\n   for any exception the error handler for this\nexception is not called and it shows up as regular exception in the\ntraceback.  This is helpful for debugging implicitly raised HTTP\nexceptions.\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionchanged">\n    <p>\n     <span class="versionmodified changed">\n      Changed in version 1.0:\n     </span>\n     Bad request errors are not trapped by default in debug mode.\n    </p>\n   </div>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.8.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      e\n     </strong>\n     (\n     <a class="reference external" href="https://docs.python.org/3/library/exceptions.html#Exception" title="(in Python v3.11)">\n      <em>\n       Exception\n      </em>\n     </a>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/functions.html#bool" title="(in Python v3.11)">\n      bool\n     </a>\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "update_template_context",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.update_template_context">\n  <span class="sig-name descname">\n   <span class="pre">\n    update_template_context\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     context\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.update_template_context" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Update the template context with some commonly used variables.\nThis injects request, session, config and g into the template\ncontext as well as everything template context processors want\nto inject.  Note that the as of Flask 0.6, the original values\nin the context will not be overridden if a context processor\ndecides to return a value with the same key.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      context\n     </strong>\n     (\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#dict" title="(in Python v3.11)">\n      <em>\n       dict\n      </em>\n     </a>\n     ) \u00e2\u0080\u0093 the context as a dictionary that is updated in place\nto add extra variables.\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     None\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "url_defaults",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.url_defaults">\n  <span class="sig-name descname">\n   <span class="pre">\n    url_defaults\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     f\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.url_defaults" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Callback function for URL defaults for all view functions of the\napplication.  It\u00e2\u0080\u0099s called with the endpoint and values and should\nupdate the values passed in place.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      f\n     </strong>\n     (\n     <em>\n      flask.scaffold.T_url_defaults\n     </em>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     flask.scaffold.T_url_defaults\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "url_for",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.url_for">\n  <span class="sig-name descname">\n   <span class="pre">\n    url_for\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     endpoint\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="o">\n    <span class="pre">\n     *\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     _anchor\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     None\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     _method\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     None\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     _scheme\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     None\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     _external\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     None\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="o">\n    <span class="pre">\n     **\n    </span>\n   </span>\n   <span class="n">\n    <span class="pre">\n     values\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.url_for" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Generate a URL to the given endpoint with the given values.\n  </p>\n  <p>\n   This is called by\n   <a class="reference internal" href="#flask.url_for" title="flask.url_for">\n    <code class="xref py py-func docutils literal notranslate">\n     <span class="pre">\n      flask.url_for()\n     </span>\n    </code>\n   </a>\n   , and can be called\ndirectly as well.\n  </p>\n  <p>\n   An\n   <em>\n    endpoint\n   </em>\n   is the name of a URL rule, usually added with\n   <a class="reference internal" href="#flask.Flask.route" title="flask.Flask.route">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      @app.route()\n     </span>\n    </code>\n   </a>\n   , and usually the same name as the\nview function. A route defined in a\n   <a class="reference internal" href="#flask.Blueprint" title="flask.Blueprint">\n    <code class="xref py py-class docutils literal notranslate">\n     <span class="pre">\n      Blueprint\n     </span>\n    </code>\n   </a>\n   will prepend the blueprint\u00e2\u0080\u0099s name separated by a\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     .\n    </span>\n   </code>\n   to the\nendpoint.\n  </p>\n  <p>\n   In some cases, such as email messages, you want URLs to include\nthe scheme and domain, like\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     https://example.com/hello\n    </span>\n   </code>\n   . When\nnot in an active request, URLs will be external by default, but\nthis requires setting\n   <a class="reference internal" href="../config/#SERVER_NAME" title="SERVER_NAME">\n    <code class="xref py py-data docutils literal notranslate">\n     <span class="pre">\n      SERVER_NAME\n     </span>\n    </code>\n   </a>\n   so Flask knows what\ndomain to use.\n   <a class="reference internal" href="../config/#APPLICATION_ROOT" title="APPLICATION_ROOT">\n    <code class="xref py py-data docutils literal notranslate">\n     <span class="pre">\n      APPLICATION_ROOT\n     </span>\n    </code>\n   </a>\n   and\n   <a class="reference internal" href="../config/#PREFERRED_URL_SCHEME" title="PREFERRED_URL_SCHEME">\n    <code class="xref py py-data docutils literal notranslate">\n     <span class="pre">\n      PREFERRED_URL_SCHEME\n     </span>\n    </code>\n   </a>\n   should also be configured as\nneeded. This config is only used when not in an active request.\n  </p>\n  <p>\n   Functions can be decorated with\n   <a class="reference internal" href="#flask.Flask.url_defaults" title="flask.Flask.url_defaults">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      url_defaults()\n     </span>\n    </code>\n   </a>\n   to modify\nkeyword arguments before the URL is built.\n  </p>\n  <p>\n   If building fails for some reason, such as an unknown endpoint\nor incorrect values, the app\u00e2\u0080\u0099s\n   <a class="reference internal" href="#flask.Flask.handle_url_build_error" title="flask.Flask.handle_url_build_error">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      handle_url_build_error()\n     </span>\n    </code>\n   </a>\n   method is called. If that returns a string, that is returned,\notherwise a\n   <code class="xref py py-exc docutils literal notranslate">\n    <span class="pre">\n     BuildError\n    </span>\n   </code>\n   is raised.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        endpoint\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 The endpoint name associated with the URL to\ngenerate. If this starts with a\n       <code class="docutils literal notranslate">\n        <span class="pre">\n         .\n        </span>\n       </code>\n       , the current blueprint\nname (if any) will be used.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        _anchor\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n        <em>\n         Optional\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       ) \u00e2\u0080\u0093 If given, append this as\n       <code class="docutils literal notranslate">\n        <span class="pre">\n         #anchor\n        </span>\n       </code>\n       to the URL.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        _method\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n        <em>\n         Optional\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       ) \u00e2\u0080\u0093 If given, generate the URL associated with this\nmethod for the endpoint.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        _scheme\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n        <em>\n         Optional\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       ) \u00e2\u0080\u0093 If given, the URL will have this scheme if it\nis external.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        _external\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n        <em>\n         Optional\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/functions.html#bool" title="(in Python v3.11)">\n        <em>\n         bool\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       ) \u00e2\u0080\u0093 If given, prefer the URL to be internal\n(False) or require it to be external (True). External URLs\ninclude the scheme and domain. When not in an active\nrequest, URLs are external by default.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        values\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 Values to use for the variable parts of the URL\nrule. Unknown keys are appended as query string arguments,\nlike\n       <code class="docutils literal notranslate">\n        <span class="pre">\n         ?a=b&amp;c=d\n        </span>\n       </code>\n       .\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n    </p>\n   </dd>\n  </dl>\n  <div class="versionadded">\n   <p>\n    <span class="versionmodified added">\n     New in version 2.2:\n    </span>\n    Moved from\n    <code class="docutils literal notranslate">\n     <span class="pre">\n      flask.url_for\n     </span>\n    </code>\n    , which calls this method.\n   </p>\n  </div>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "url_value_preprocessor",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.url_value_preprocessor">\n  <span class="sig-name descname">\n   <span class="pre">\n    url_value_preprocessor\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     f\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.url_value_preprocessor" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Register a URL value preprocessor function for all view\nfunctions in the application. These functions will be called before the\n   <a class="reference internal" href="#flask.Flask.before_request" title="flask.Flask.before_request">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      before_request()\n     </span>\n    </code>\n   </a>\n   functions.\n  </p>\n  <p>\n   The function can modify the values captured from the matched url before\nthey are passed to the view. For example, this can be used to pop a\ncommon language code value and place it in\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     g\n    </span>\n   </code>\n   rather than pass it to\nevery view.\n  </p>\n  <p>\n   The function is passed the endpoint name and values dict. The return\nvalue is ignored.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      f\n     </strong>\n     (\n     <em>\n      flask.scaffold.T_url_value_preprocessor\n     </em>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     flask.scaffold.T_url_value_preprocessor\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Object",
    type: ["py", "method"],
    name: "wsgi_app",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Flask.wsgi_app">\n  <span class="sig-name descname">\n   <span class="pre">\n    wsgi_app\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     environ\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     start_response\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Flask.wsgi_app" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   The actual WSGI application. This is not implemented in\n   <code class="xref py py-meth docutils literal notranslate">\n    <span class="pre">\n     __call__()\n    </span>\n   </code>\n   so that middlewares can be applied without\nlosing a reference to the app object. Instead of doing this:\n  </p>\n  <div class="highlight-default notranslate">\n   <div class="highlight">\n    <pre><span></span><span class="n">app</span> <span class="o">=</span> <span class="n">MyMiddleware</span><span class="p">(</span><span class="n">app</span><span class="p">)</span>\n</pre>\n   </div>\n  </div>\n  <p>\n   It\u00e2\u0080\u0099s a better idea to do this instead:\n  </p>\n  <div class="highlight-default notranslate">\n   <div class="highlight">\n    <pre><span></span><span class="n">app</span><span class="o">.</span><span class="n">wsgi_app</span> <span class="o">=</span> <span class="n">MyMiddleware</span><span class="p">(</span><span class="n">app</span><span class="o">.</span><span class="n">wsgi_app</span><span class="p">)</span>\n</pre>\n   </div>\n  </div>\n  <p>\n   Then you still have the original application object around and\ncan continue to call methods on it.\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionchanged">\n    <p>\n     <span class="versionmodified changed">\n      Changed in version 0.7:\n     </span>\n     Teardown events for the request and app contexts are called\neven if an unhandled error occurs. Other events may not be\ncalled depending on when an error occurs during dispatch.\nSee\n     <a class="reference internal" href="../reqcontext/#callbacks-and-errors">\n      <span class="std std-ref">\n       Callbacks and Errors\n      </span>\n     </a>\n     .\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        environ\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#dict" title="(in Python v3.11)">\n        <em>\n         dict\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 A WSGI environment.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        start_response\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Callable" title="(in Python v3.11)">\n        <em>\n         Callable\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 A callable accepting a status code,\na list of headers, and an optional exception context to\nstart the response.\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Blueprint Objects",
    type: ["py", "method"],
    name: "add_app_template_filter",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Blueprint.add_app_template_filter">\n  <span class="sig-name descname">\n   <span class="pre">\n    add_app_template_filter\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     f\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     name\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     None\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Blueprint.add_app_template_filter" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Register a custom template filter, available application wide.  Like\n   <a class="reference internal" href="#flask.Flask.add_template_filter" title="flask.Flask.add_template_filter">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      Flask.add_template_filter()\n     </span>\n    </code>\n   </a>\n   but for a blueprint.  Works exactly\nlike the\n   <a class="reference internal" href="#flask.Blueprint.app_template_filter" title="flask.Blueprint.app_template_filter">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      app_template_filter()\n     </span>\n    </code>\n   </a>\n   decorator.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        name\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n        <em>\n         Optional\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       ) \u00e2\u0080\u0093 the optional name of the filter, otherwise the\nfunction name will be used.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        f\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Callable" title="(in Python v3.11)">\n        <em>\n         Callable\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <em>\n        [\n       </em>\n       <em>\n        ...\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     None\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Blueprint Objects",
    type: ["py", "method"],
    name: "add_app_template_global",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Blueprint.add_app_template_global">\n  <span class="sig-name descname">\n   <span class="pre">\n    add_app_template_global\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     f\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     name\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     None\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Blueprint.add_app_template_global" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Register a custom template global, available application wide.  Like\n   <a class="reference internal" href="#flask.Flask.add_template_global" title="flask.Flask.add_template_global">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      Flask.add_template_global()\n     </span>\n    </code>\n   </a>\n   but for a blueprint.  Works exactly\nlike the\n   <a class="reference internal" href="#flask.Blueprint.app_template_global" title="flask.Blueprint.app_template_global">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      app_template_global()\n     </span>\n    </code>\n   </a>\n   decorator.\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.10.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        name\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n        <em>\n         Optional\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       ) \u00e2\u0080\u0093 the optional name of the global, otherwise the\nfunction name will be used.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        f\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Callable" title="(in Python v3.11)">\n        <em>\n         Callable\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <em>\n        [\n       </em>\n       <em>\n        ...\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     None\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Blueprint Objects",
    type: ["py", "method"],
    name: "add_app_template_test",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Blueprint.add_app_template_test">\n  <span class="sig-name descname">\n   <span class="pre">\n    add_app_template_test\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     f\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     name\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     None\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Blueprint.add_app_template_test" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Register a custom template test, available application wide.  Like\n   <a class="reference internal" href="#flask.Flask.add_template_test" title="flask.Flask.add_template_test">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      Flask.add_template_test()\n     </span>\n    </code>\n   </a>\n   but for a blueprint.  Works exactly\nlike the\n   <a class="reference internal" href="#flask.Blueprint.app_template_test" title="flask.Blueprint.app_template_test">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      app_template_test()\n     </span>\n    </code>\n   </a>\n   decorator.\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.10.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        name\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n        <em>\n         Optional\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       ) \u00e2\u0080\u0093 the optional name of the test, otherwise the\nfunction name will be used.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        f\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Callable" title="(in Python v3.11)">\n        <em>\n         Callable\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <em>\n        [\n       </em>\n       <em>\n        ...\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/functions.html#bool" title="(in Python v3.11)">\n        <em>\n         bool\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     None\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Blueprint Objects",
    type: ["py", "method"],
    name: "add_url_rule",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Blueprint.add_url_rule">\n  <span class="sig-name descname">\n   <span class="pre">\n    add_url_rule\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     rule\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     endpoint\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     None\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     view_func\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     None\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     provide_automatic_options\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     None\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="o">\n    <span class="pre">\n     **\n    </span>\n   </span>\n   <span class="n">\n    <span class="pre">\n     options\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Blueprint.add_url_rule" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Like\n   <a class="reference internal" href="#flask.Flask.add_url_rule" title="flask.Flask.add_url_rule">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      Flask.add_url_rule()\n     </span>\n    </code>\n   </a>\n   but for a blueprint.  The endpoint for\nthe\n   <a class="reference internal" href="#flask.url_for" title="flask.url_for">\n    <code class="xref py py-func docutils literal notranslate">\n     <span class="pre">\n      url_for()\n     </span>\n    </code>\n   </a>\n   function is prefixed with the name of the blueprint.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        rule\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        endpoint\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n        <em>\n         Optional\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        view_func\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n        <em>\n         Optional\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Callable" title="(in Python v3.11)">\n        <em>\n         Callable\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <em>\n        [\n       </em>\n       <em>\n        ...\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference internal" href="#flask.Response" title="flask.Response">\n        <em>\n         Response\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n        <em>\n         bytes\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n        <em>\n         List\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n        <em>\n         Mapping\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n        <em>\n         Iterator\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n        <em>\n         Iterator\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n        <em>\n         bytes\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n        <em>\n         Tuple\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference internal" href="#flask.Response" title="flask.Response">\n        <em>\n         Response\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n        <em>\n         bytes\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n        <em>\n         List\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n        <em>\n         Mapping\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n        <em>\n         Iterator\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n        <em>\n         Iterator\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n        <em>\n         bytes\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <em>\n        Headers\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n        <em>\n         Mapping\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n        <em>\n         List\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n        <em>\n         Tuple\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <em>\n        ...\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Sequence" title="(in Python v3.11)">\n        <em>\n         Sequence\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n        <em>\n         Tuple\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n        <em>\n         List\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n        <em>\n         Tuple\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <em>\n        ...\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n        <em>\n         Tuple\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference internal" href="#flask.Response" title="flask.Response">\n        <em>\n         Response\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n        <em>\n         bytes\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n        <em>\n         List\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n        <em>\n         Mapping\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n        <em>\n         Iterator\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n        <em>\n         Iterator\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n        <em>\n         bytes\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/functions.html#int" title="(in Python v3.11)">\n        <em>\n         int\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n        <em>\n         Tuple\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference internal" href="#flask.Response" title="flask.Response">\n        <em>\n         Response\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n        <em>\n         bytes\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n        <em>\n         List\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n        <em>\n         Mapping\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n        <em>\n         Iterator\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n        <em>\n         Iterator\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n        <em>\n         bytes\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/functions.html#int" title="(in Python v3.11)">\n        <em>\n         int\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <em>\n        Headers\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n        <em>\n         Mapping\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n        <em>\n         List\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n        <em>\n         Tuple\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <em>\n        ...\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Sequence" title="(in Python v3.11)">\n        <em>\n         Sequence\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n        <em>\n         Tuple\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n        <em>\n         List\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n        <em>\n         Tuple\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <em>\n        ...\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <em>\n        WSGIApplication\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Callable" title="(in Python v3.11)">\n        <em>\n         Callable\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <em>\n        [\n       </em>\n       <em>\n        ...\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Awaitable" title="(in Python v3.11)">\n        <em>\n         Awaitable\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference internal" href="#flask.Response" title="flask.Response">\n        <em>\n         Response\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n        <em>\n         bytes\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n        <em>\n         List\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n        <em>\n         Mapping\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n        <em>\n         Iterator\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n        <em>\n         Iterator\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n        <em>\n         bytes\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n        <em>\n         Tuple\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference internal" href="#flask.Response" title="flask.Response">\n        <em>\n         Response\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n        <em>\n         bytes\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n        <em>\n         List\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n        <em>\n         Mapping\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n        <em>\n         Iterator\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n        <em>\n         Iterator\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n        <em>\n         bytes\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <em>\n        Headers\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n        <em>\n         Mapping\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n        <em>\n         List\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n        <em>\n         Tuple\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <em>\n        ...\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Sequence" title="(in Python v3.11)">\n        <em>\n         Sequence\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n        <em>\n         Tuple\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n        <em>\n         List\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n        <em>\n         Tuple\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <em>\n        ...\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n        <em>\n         Tuple\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference internal" href="#flask.Response" title="flask.Response">\n        <em>\n         Response\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n        <em>\n         bytes\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n        <em>\n         List\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n        <em>\n         Mapping\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n        <em>\n         Iterator\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n        <em>\n         Iterator\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n        <em>\n         bytes\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/functions.html#int" title="(in Python v3.11)">\n        <em>\n         int\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n        <em>\n         Tuple\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference internal" href="#flask.Response" title="flask.Response">\n        <em>\n         Response\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n        <em>\n         bytes\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n        <em>\n         List\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n        <em>\n         Mapping\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n        <em>\n         Iterator\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n        <em>\n         Iterator\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n        <em>\n         bytes\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/functions.html#int" title="(in Python v3.11)">\n        <em>\n         int\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <em>\n        Headers\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n        <em>\n         Mapping\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n        <em>\n         List\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n        <em>\n         Tuple\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <em>\n        ...\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Sequence" title="(in Python v3.11)">\n        <em>\n         Sequence\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n        <em>\n         Tuple\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n        <em>\n         List\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n        <em>\n         Tuple\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <em>\n        ...\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <em>\n        WSGIApplication\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        provide_automatic_options\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n        <em>\n         Optional\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/functions.html#bool" title="(in Python v3.11)">\n        <em>\n         bool\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        options\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     None\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Blueprint Objects",
    type: ["py", "method"],
    name: "after_app_request",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Blueprint.after_app_request">\n  <span class="sig-name descname">\n   <span class="pre">\n    after_app_request\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     f\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Blueprint.after_app_request" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Like\n   <a class="reference internal" href="#flask.Flask.after_request" title="flask.Flask.after_request">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      Flask.after_request()\n     </span>\n    </code>\n   </a>\n   but for a blueprint.  Such a function\nis executed after each request, even if outside of the blueprint.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      f\n     </strong>\n     (\n     <em>\n      flask.blueprints.T_after_request\n     </em>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     flask.blueprints.T_after_request\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Blueprint Objects",
    type: ["py", "method"],
    name: "after_request",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Blueprint.after_request">\n  <span class="sig-name descname">\n   <span class="pre">\n    after_request\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     f\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Blueprint.after_request" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Register a function to run after each request to this object.\n  </p>\n  <p>\n   The function is called with the response object, and must return\na response object. This allows the functions to modify or\nreplace the response before it is sent.\n  </p>\n  <p>\n   If a function raises an exception, any remaining\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     after_request\n    </span>\n   </code>\n   functions will not be called. Therefore, this\nshould not be used for actions that must execute, such as to\nclose resources. Use\n   <a class="reference internal" href="#flask.Blueprint.teardown_request" title="flask.Blueprint.teardown_request">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      teardown_request()\n     </span>\n    </code>\n   </a>\n   for that.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      f\n     </strong>\n     (\n     <em>\n      flask.scaffold.T_after_request\n     </em>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     flask.scaffold.T_after_request\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Blueprint Objects",
    type: ["py", "method"],
    name: "app_context_processor",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Blueprint.app_context_processor">\n  <span class="sig-name descname">\n   <span class="pre">\n    app_context_processor\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     f\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Blueprint.app_context_processor" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Like\n   <a class="reference internal" href="#flask.Flask.context_processor" title="flask.Flask.context_processor">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      Flask.context_processor()\n     </span>\n    </code>\n   </a>\n   but for a blueprint.  Such a\nfunction is executed each request, even if outside of the blueprint.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      f\n     </strong>\n     (\n     <em>\n      flask.blueprints.T_template_context_processor\n     </em>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     flask.blueprints.T_template_context_processor\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Blueprint Objects",
    type: ["py", "method"],
    name: "app_errorhandler",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Blueprint.app_errorhandler">\n  <span class="sig-name descname">\n   <span class="pre">\n    app_errorhandler\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     code\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Blueprint.app_errorhandler" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Like\n   <a class="reference internal" href="#flask.Flask.errorhandler" title="flask.Flask.errorhandler">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      Flask.errorhandler()\n     </span>\n    </code>\n   </a>\n   but for a blueprint.  This\nhandler is used for all requests, even if outside of the blueprint.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      code\n     </strong>\n     (\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Type" title="(in Python v3.11)">\n      <em>\n       Type\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/exceptions.html#Exception" title="(in Python v3.11)">\n      <em>\n       Exception\n      </em>\n     </a>\n     <em>\n      ]\n     </em>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/functions.html#int" title="(in Python v3.11)">\n      <em>\n       int\n      </em>\n     </a>\n     <em>\n      ]\n     </em>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Callable" title="(in Python v3.11)">\n      <em>\n       Callable\n      </em>\n     </a>\n     [[flask.blueprints.T_error_handler], flask.blueprints.T_error_handler]\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Blueprint Objects",
    type: ["py", "method"],
    name: "app_template_filter",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Blueprint.app_template_filter">\n  <span class="sig-name descname">\n   <span class="pre">\n    app_template_filter\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     name\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     None\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Blueprint.app_template_filter" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Register a custom template filter, available application wide.  Like\n   <a class="reference internal" href="#flask.Flask.template_filter" title="flask.Flask.template_filter">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      Flask.template_filter()\n     </span>\n    </code>\n   </a>\n   but for a blueprint.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      name\n     </strong>\n     (\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n      <em>\n       Optional\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      <em>\n       str\n      </em>\n     </a>\n     <em>\n      ]\n     </em>\n     ) \u00e2\u0080\u0093 the optional name of the filter, otherwise the\nfunction name will be used.\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Callable" title="(in Python v3.11)">\n      <em>\n       Callable\n      </em>\n     </a>\n     [[flask.blueprints.T_template_filter], flask.blueprints.T_template_filter]\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Blueprint Objects",
    type: ["py", "method"],
    name: "app_template_global",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Blueprint.app_template_global">\n  <span class="sig-name descname">\n   <span class="pre">\n    app_template_global\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     name\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     None\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Blueprint.app_template_global" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Register a custom template global, available application wide.  Like\n   <a class="reference internal" href="#flask.Flask.template_global" title="flask.Flask.template_global">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      Flask.template_global()\n     </span>\n    </code>\n   </a>\n   but for a blueprint.\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.10.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      name\n     </strong>\n     (\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n      <em>\n       Optional\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      <em>\n       str\n      </em>\n     </a>\n     <em>\n      ]\n     </em>\n     ) \u00e2\u0080\u0093 the optional name of the global, otherwise the\nfunction name will be used.\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Callable" title="(in Python v3.11)">\n      <em>\n       Callable\n      </em>\n     </a>\n     [[flask.blueprints.T_template_global], flask.blueprints.T_template_global]\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Blueprint Objects",
    type: ["py", "method"],
    name: "app_template_test",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Blueprint.app_template_test">\n  <span class="sig-name descname">\n   <span class="pre">\n    app_template_test\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     name\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     None\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Blueprint.app_template_test" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Register a custom template test, available application wide.  Like\n   <a class="reference internal" href="#flask.Flask.template_test" title="flask.Flask.template_test">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      Flask.template_test()\n     </span>\n    </code>\n   </a>\n   but for a blueprint.\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.10.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      name\n     </strong>\n     (\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n      <em>\n       Optional\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      <em>\n       str\n      </em>\n     </a>\n     <em>\n      ]\n     </em>\n     ) \u00e2\u0080\u0093 the optional name of the test, otherwise the\nfunction name will be used.\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Callable" title="(in Python v3.11)">\n      <em>\n       Callable\n      </em>\n     </a>\n     [[flask.blueprints.T_template_test], flask.blueprints.T_template_test]\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Blueprint Objects",
    type: ["py", "method"],
    name: "app_url_defaults",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Blueprint.app_url_defaults">\n  <span class="sig-name descname">\n   <span class="pre">\n    app_url_defaults\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     f\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Blueprint.app_url_defaults" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Same as\n   <a class="reference internal" href="#flask.Blueprint.url_defaults" title="flask.Blueprint.url_defaults">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      url_defaults()\n     </span>\n    </code>\n   </a>\n   but application wide.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      f\n     </strong>\n     (\n     <em>\n      flask.blueprints.T_url_defaults\n     </em>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     flask.blueprints.T_url_defaults\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Blueprint Objects",
    type: ["py", "method"],
    name: "app_url_value_preprocessor",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Blueprint.app_url_value_preprocessor">\n  <span class="sig-name descname">\n   <span class="pre">\n    app_url_value_preprocessor\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     f\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Blueprint.app_url_value_preprocessor" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Same as\n   <a class="reference internal" href="#flask.Blueprint.url_value_preprocessor" title="flask.Blueprint.url_value_preprocessor">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      url_value_preprocessor()\n     </span>\n    </code>\n   </a>\n   but application wide.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      f\n     </strong>\n     (\n     <em>\n      flask.blueprints.T_url_value_preprocessor\n     </em>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     flask.blueprints.T_url_value_preprocessor\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Blueprint Objects",
    type: ["py", "method"],
    name: "before_app_first_request",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Blueprint.before_app_first_request">\n  <span class="sig-name descname">\n   <span class="pre">\n    before_app_first_request\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     f\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Blueprint.before_app_first_request" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Like\n   <a class="reference internal" href="#flask.Flask.before_first_request" title="flask.Flask.before_first_request">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      Flask.before_first_request()\n     </span>\n    </code>\n   </a>\n   .  Such a function is\nexecuted before the first request to the application.\n  </p>\n  <div class="deprecated">\n   <p>\n    <span class="versionmodified deprecated">\n     Deprecated since version 2.2:\n    </span>\n    Will be removed in Flask 2.3. Run setup code when creating\nthe application instead.\n   </p>\n  </div>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      f\n     </strong>\n     (\n     <em>\n      flask.blueprints.T_before_first_request\n     </em>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     flask.blueprints.T_before_first_request\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Blueprint Objects",
    type: ["py", "method"],
    name: "before_app_request",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Blueprint.before_app_request">\n  <span class="sig-name descname">\n   <span class="pre">\n    before_app_request\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     f\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Blueprint.before_app_request" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Like\n   <a class="reference internal" href="#flask.Flask.before_request" title="flask.Flask.before_request">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      Flask.before_request()\n     </span>\n    </code>\n   </a>\n   .  Such a function is executed\nbefore each request, even if outside of a blueprint.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      f\n     </strong>\n     (\n     <em>\n      flask.blueprints.T_before_request\n     </em>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     flask.blueprints.T_before_request\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Blueprint Objects",
    type: ["py", "method"],
    name: "before_request",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Blueprint.before_request">\n  <span class="sig-name descname">\n   <span class="pre">\n    before_request\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     f\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Blueprint.before_request" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Register a function to run before each request.\n  </p>\n  <p>\n   For example, this can be used to open a database connection, or\nto load the logged in user from the session.\n  </p>\n  <div class="highlight-python notranslate">\n   <div class="highlight">\n    <pre><span></span><span class="nd">@app</span><span class="o">.</span><span class="n">before_request</span>\n<span class="k">def</span> <span class="nf">load_user</span><span class="p">():</span>\n    <span class="k">if</span> <span class="s2">"user_id"</span> <span class="ow">in</span> <span class="n">session</span><span class="p">:</span>\n        <span class="n">g</span><span class="o">.</span><span class="n">user</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">session</span><span class="p">[</span><span class="s2">"user_id"</span><span class="p">])</span>\n</pre>\n   </div>\n  </div>\n  <p>\n   The function will be called without any arguments. If it returns\na non-\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     None\n    </span>\n   </code>\n   value, the value is handled as if it was the\nreturn value from the view, and further request handling is\nstopped.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      f\n     </strong>\n     (\n     <em>\n      flask.scaffold.T_before_request\n     </em>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     flask.scaffold.T_before_request\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Blueprint Objects",
    type: ["py", "method"],
    name: "context_processor",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Blueprint.context_processor">\n  <span class="sig-name descname">\n   <span class="pre">\n    context_processor\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     f\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Blueprint.context_processor" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Registers a template context processor function.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      f\n     </strong>\n     (\n     <em>\n      flask.scaffold.T_template_context_processor\n     </em>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     flask.scaffold.T_template_context_processor\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Blueprint Objects",
    type: ["py", "method"],
    name: "delete",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Blueprint.delete">\n  <span class="sig-name descname">\n   <span class="pre">\n    delete\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     rule\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="o">\n    <span class="pre">\n     **\n    </span>\n   </span>\n   <span class="n">\n    <span class="pre">\n     options\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Blueprint.delete" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Shortcut for\n   <a class="reference internal" href="#flask.Blueprint.route" title="flask.Blueprint.route">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      route()\n     </span>\n    </code>\n   </a>\n   with\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     methods=["DELETE"]\n    </span>\n   </code>\n   .\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 2.0.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        rule\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        options\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Callable" title="(in Python v3.11)">\n      <em>\n       Callable\n      </em>\n     </a>\n     [[flask.scaffold.T_route], flask.scaffold.T_route]\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Blueprint Objects",
    type: ["py", "method"],
    name: "endpoint",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Blueprint.endpoint">\n  <span class="sig-name descname">\n   <span class="pre">\n    endpoint\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     endpoint\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Blueprint.endpoint" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Decorate a view function to register it for the given\nendpoint. Used if a rule is added without a\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     view_func\n    </span>\n   </code>\n   with\n   <a class="reference internal" href="#flask.Blueprint.add_url_rule" title="flask.Blueprint.add_url_rule">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      add_url_rule()\n     </span>\n    </code>\n   </a>\n   .\n  </p>\n  <div class="highlight-python notranslate">\n   <div class="highlight">\n    <pre><span></span><span class="n">app</span><span class="o">.</span><span class="n">add_url_rule</span><span class="p">(</span><span class="s2">"/ex"</span><span class="p">,</span> <span class="n">endpoint</span><span class="o">=</span><span class="s2">"example"</span><span class="p">)</span>\n\n<span class="nd">@app</span><span class="o">.</span><span class="n">endpoint</span><span class="p">(</span><span class="s2">"example"</span><span class="p">)</span>\n<span class="k">def</span> <span class="nf">example</span><span class="p">():</span>\n    <span class="o">...</span>\n</pre>\n   </div>\n  </div>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      endpoint\n     </strong>\n     (\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      <em>\n       str\n      </em>\n     </a>\n     ) \u00e2\u0080\u0093 The endpoint name to associate with the view\nfunction.\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Callable" title="(in Python v3.11)">\n      <em>\n       Callable\n      </em>\n     </a>\n     [[flask.scaffold.F], flask.scaffold.F]\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Blueprint Objects",
    type: ["py", "method"],
    name: "errorhandler",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Blueprint.errorhandler">\n  <span class="sig-name descname">\n   <span class="pre">\n    errorhandler\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     code_or_exception\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Blueprint.errorhandler" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Register a function to handle errors by code or exception class.\n  </p>\n  <p>\n   A decorator that is used to register a function given an\nerror code.  Example:\n  </p>\n  <div class="highlight-default notranslate">\n   <div class="highlight">\n    <pre><span></span><span class="nd">@app</span><span class="o">.</span><span class="n">errorhandler</span><span class="p">(</span><span class="mi">404</span><span class="p">)</span>\n<span class="k">def</span> <span class="nf">page_not_found</span><span class="p">(</span><span class="n">error</span><span class="p">):</span>\n    <span class="k">return</span> <span class="s1">\'This page does not exist\'</span><span class="p">,</span> <span class="mi">404</span>\n</pre>\n   </div>\n  </div>\n  <p>\n   You can also register handlers for arbitrary exceptions:\n  </p>\n  <div class="highlight-default notranslate">\n   <div class="highlight">\n    <pre><span></span><span class="nd">@app</span><span class="o">.</span><span class="n">errorhandler</span><span class="p">(</span><span class="n">DatabaseError</span><span class="p">)</span>\n<span class="k">def</span> <span class="nf">special_exception_handler</span><span class="p">(</span><span class="n">error</span><span class="p">):</span>\n    <span class="k">return</span> <span class="s1">\'Database connection failed\'</span><span class="p">,</span> <span class="mi">500</span>\n</pre>\n   </div>\n  </div>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.7:\n     </span>\n     Use\n     <a class="reference internal" href="#flask.Blueprint.register_error_handler" title="flask.Blueprint.register_error_handler">\n      <code class="xref py py-meth docutils literal notranslate">\n       <span class="pre">\n        register_error_handler()\n       </span>\n      </code>\n     </a>\n     instead of modifying\n     <a class="reference internal" href="#flask.Blueprint.error_handler_spec" title="flask.Blueprint.error_handler_spec">\n      <code class="xref py py-attr docutils literal notranslate">\n       <span class="pre">\n        error_handler_spec\n       </span>\n      </code>\n     </a>\n     directly, for application wide error\nhandlers.\n    </p>\n   </div>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.7:\n     </span>\n     One can now additionally also register custom exception types\nthat do not necessarily have to be a subclass of the\n     <a class="reference external" href="https://werkzeug.palletsprojects.com/en/2.2.x/exceptions/#werkzeug.exceptions.HTTPException" title="(in Werkzeug v2.2.x)">\n      <code class="xref py py-class docutils literal notranslate">\n       <span class="pre">\n        HTTPException\n       </span>\n      </code>\n     </a>\n     class.\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      code_or_exception\n     </strong>\n     (\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Type" title="(in Python v3.11)">\n      <em>\n       Type\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/exceptions.html#Exception" title="(in Python v3.11)">\n      <em>\n       Exception\n      </em>\n     </a>\n     <em>\n      ]\n     </em>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/functions.html#int" title="(in Python v3.11)">\n      <em>\n       int\n      </em>\n     </a>\n     <em>\n      ]\n     </em>\n     ) \u00e2\u0080\u0093 the code as integer for the handler, or\nan arbitrary exception\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Callable" title="(in Python v3.11)">\n      <em>\n       Callable\n      </em>\n     </a>\n     [[flask.scaffold.T_error_handler], flask.scaffold.T_error_handler]\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Blueprint Objects",
    type: ["py", "method"],
    name: "get",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Blueprint.get">\n  <span class="sig-name descname">\n   <span class="pre">\n    get\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     rule\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="o">\n    <span class="pre">\n     **\n    </span>\n   </span>\n   <span class="n">\n    <span class="pre">\n     options\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Blueprint.get" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Shortcut for\n   <a class="reference internal" href="#flask.Blueprint.route" title="flask.Blueprint.route">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      route()\n     </span>\n    </code>\n   </a>\n   with\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     methods=["GET"]\n    </span>\n   </code>\n   .\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 2.0.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        rule\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        options\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Callable" title="(in Python v3.11)">\n      <em>\n       Callable\n      </em>\n     </a>\n     [[flask.scaffold.T_route], flask.scaffold.T_route]\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Blueprint Objects",
    type: ["py", "method"],
    name: "get_send_file_max_age",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Blueprint.get_send_file_max_age">\n  <span class="sig-name descname">\n   <span class="pre">\n    get_send_file_max_age\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     filename\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Blueprint.get_send_file_max_age" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Used by\n   <a class="reference internal" href="#flask.send_file" title="flask.send_file">\n    <code class="xref py py-func docutils literal notranslate">\n     <span class="pre">\n      send_file()\n     </span>\n    </code>\n   </a>\n   to determine the\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     max_age\n    </span>\n   </code>\n   cache\nvalue for a given file path if it wasn\u00e2\u0080\u0099t passed.\n  </p>\n  <p>\n   By default, this returns\n   <a class="reference internal" href="../config/#SEND_FILE_MAX_AGE_DEFAULT" title="SEND_FILE_MAX_AGE_DEFAULT">\n    <code class="xref py py-data docutils literal notranslate">\n     <span class="pre">\n      SEND_FILE_MAX_AGE_DEFAULT\n     </span>\n    </code>\n   </a>\n   from\nthe configuration of\n   <a class="reference internal" href="#flask.current_app" title="flask.current_app">\n    <code class="xref py py-data docutils literal notranslate">\n     <span class="pre">\n      current_app\n     </span>\n    </code>\n   </a>\n   . This defaults\nto\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     None\n    </span>\n   </code>\n   , which tells the browser to use conditional requests\ninstead of a timed cache, which is usually preferable.\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionchanged">\n    <p>\n     <span class="versionmodified changed">\n      Changed in version 2.0:\n     </span>\n     The default configuration is\n     <code class="docutils literal notranslate">\n      <span class="pre">\n       None\n      </span>\n     </code>\n     instead of 12 hours.\n    </p>\n   </div>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.9.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      filename\n     </strong>\n     (\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n      <em>\n       Optional\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      <em>\n       str\n      </em>\n     </a>\n     <em>\n      ]\n     </em>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n      <em>\n       Optional\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/functions.html#int" title="(in Python v3.11)">\n      int\n     </a>\n     ]\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Blueprint Objects",
    type: ["py", "method"],
    name: "make_setup_state",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Blueprint.make_setup_state">\n  <span class="sig-name descname">\n   <span class="pre">\n    make_setup_state\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     app\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     options\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     first_registration\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     False\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Blueprint.make_setup_state" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Creates an instance of\n   <a class="reference internal" href="#flask.blueprints.BlueprintSetupState" title="flask.blueprints.BlueprintSetupState">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      BlueprintSetupState()\n     </span>\n    </code>\n   </a>\n   object that is later passed to the register callback functions.\nSubclasses can override this to return a subclass of the setup state.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        app\n       </strong>\n       (\n       <a class="reference internal" href="#flask.Flask" title="flask.Flask">\n        <em>\n         Flask\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        options\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#dict" title="(in Python v3.11)">\n        <em>\n         dict\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        first_registration\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/functions.html#bool" title="(in Python v3.11)">\n        <em>\n         bool\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference internal" href="#flask.blueprints.BlueprintSetupState" title="flask.blueprints.BlueprintSetupState">\n      flask.blueprints.BlueprintSetupState\n     </a>\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Blueprint Objects",
    type: ["py", "method"],
    name: "open_resource",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Blueprint.open_resource">\n  <span class="sig-name descname">\n   <span class="pre">\n    open_resource\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     resource\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     mode\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     \'rb\'\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Blueprint.open_resource" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Open a resource file relative to\n   <a class="reference internal" href="#flask.Blueprint.root_path" title="flask.Blueprint.root_path">\n    <code class="xref py py-attr docutils literal notranslate">\n     <span class="pre">\n      root_path\n     </span>\n    </code>\n   </a>\n   for\nreading.\n  </p>\n  <p>\n   For example, if the file\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     schema.sql\n    </span>\n   </code>\n   is next to the file\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     app.py\n    </span>\n   </code>\n   where the\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     Flask\n    </span>\n   </code>\n   app is defined, it can be opened\nwith:\n  </p>\n  <div class="highlight-python notranslate">\n   <div class="highlight">\n    <pre><span></span><span class="k">with</span> <span class="n">app</span><span class="o">.</span><span class="n">open_resource</span><span class="p">(</span><span class="s2">"schema.sql"</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>\n    <span class="n">conn</span><span class="o">.</span><span class="n">executescript</span><span class="p">(</span><span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">())</span>\n</pre>\n   </div>\n  </div>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        resource\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 Path to the resource relative to\n       <a class="reference internal" href="#flask.Blueprint.root_path" title="flask.Blueprint.root_path">\n        <code class="xref py py-attr docutils literal notranslate">\n         <span class="pre">\n          root_path\n         </span>\n        </code>\n       </a>\n       .\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        mode\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 Open the file in this mode. Only reading is\nsupported, valid values are \u00e2\u0080\u009cr\u00e2\u0080\u009d (or \u00e2\u0080\u009crt\u00e2\u0080\u009d) and \u00e2\u0080\u009crb\u00e2\u0080\u009d.\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.IO" title="(in Python v3.11)">\n      <em>\n       IO\n      </em>\n     </a>\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Blueprint Objects",
    type: ["py", "method"],
    name: "patch",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Blueprint.patch">\n  <span class="sig-name descname">\n   <span class="pre">\n    patch\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     rule\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="o">\n    <span class="pre">\n     **\n    </span>\n   </span>\n   <span class="n">\n    <span class="pre">\n     options\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Blueprint.patch" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Shortcut for\n   <a class="reference internal" href="#flask.Blueprint.route" title="flask.Blueprint.route">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      route()\n     </span>\n    </code>\n   </a>\n   with\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     methods=["PATCH"]\n    </span>\n   </code>\n   .\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 2.0.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        rule\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        options\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Callable" title="(in Python v3.11)">\n      <em>\n       Callable\n      </em>\n     </a>\n     [[flask.scaffold.T_route], flask.scaffold.T_route]\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Blueprint Objects",
    type: ["py", "method"],
    name: "post",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Blueprint.post">\n  <span class="sig-name descname">\n   <span class="pre">\n    post\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     rule\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="o">\n    <span class="pre">\n     **\n    </span>\n   </span>\n   <span class="n">\n    <span class="pre">\n     options\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Blueprint.post" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Shortcut for\n   <a class="reference internal" href="#flask.Blueprint.route" title="flask.Blueprint.route">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      route()\n     </span>\n    </code>\n   </a>\n   with\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     methods=["POST"]\n    </span>\n   </code>\n   .\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 2.0.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        rule\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        options\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Callable" title="(in Python v3.11)">\n      <em>\n       Callable\n      </em>\n     </a>\n     [[flask.scaffold.T_route], flask.scaffold.T_route]\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Blueprint Objects",
    type: ["py", "method"],
    name: "put",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Blueprint.put">\n  <span class="sig-name descname">\n   <span class="pre">\n    put\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     rule\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="o">\n    <span class="pre">\n     **\n    </span>\n   </span>\n   <span class="n">\n    <span class="pre">\n     options\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Blueprint.put" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Shortcut for\n   <a class="reference internal" href="#flask.Blueprint.route" title="flask.Blueprint.route">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      route()\n     </span>\n    </code>\n   </a>\n   with\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     methods=["PUT"]\n    </span>\n   </code>\n   .\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 2.0.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        rule\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        options\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Callable" title="(in Python v3.11)">\n      <em>\n       Callable\n      </em>\n     </a>\n     [[flask.scaffold.T_route], flask.scaffold.T_route]\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Blueprint Objects",
    type: ["py", "method"],
    name: "record",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Blueprint.record">\n  <span class="sig-name descname">\n   <span class="pre">\n    record\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     func\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Blueprint.record" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Registers a function that is called when the blueprint is\nregistered on the application.  This function is called with the\nstate as argument as returned by the\n   <a class="reference internal" href="#flask.Blueprint.make_setup_state" title="flask.Blueprint.make_setup_state">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      make_setup_state()\n     </span>\n    </code>\n   </a>\n   method.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      func\n     </strong>\n     (\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Callable" title="(in Python v3.11)">\n      <em>\n       Callable\n      </em>\n     </a>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     None\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Blueprint Objects",
    type: ["py", "method"],
    name: "record_once",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Blueprint.record_once">\n  <span class="sig-name descname">\n   <span class="pre">\n    record_once\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     func\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Blueprint.record_once" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Works like\n   <a class="reference internal" href="#flask.Blueprint.record" title="flask.Blueprint.record">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      record()\n     </span>\n    </code>\n   </a>\n   but wraps the function in another\nfunction that will ensure the function is only called once.  If the\nblueprint is registered a second time on the application, the\nfunction passed is not called.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      func\n     </strong>\n     (\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Callable" title="(in Python v3.11)">\n      <em>\n       Callable\n      </em>\n     </a>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     None\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Blueprint Objects",
    type: ["py", "method"],
    name: "register",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Blueprint.register">\n  <span class="sig-name descname">\n   <span class="pre">\n    register\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     app\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     options\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Blueprint.register" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Called by\n   <a class="reference internal" href="#flask.Flask.register_blueprint" title="flask.Flask.register_blueprint">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      Flask.register_blueprint()\n     </span>\n    </code>\n   </a>\n   to register all\nviews and callbacks registered on the blueprint with the\napplication. Creates a\n   <a class="reference internal" href="#flask.blueprints.BlueprintSetupState" title="flask.blueprints.BlueprintSetupState">\n    <code class="xref py py-class docutils literal notranslate">\n     <span class="pre">\n      BlueprintSetupState\n     </span>\n    </code>\n   </a>\n   and calls\neach\n   <a class="reference internal" href="#flask.Blueprint.record" title="flask.Blueprint.record">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      record()\n     </span>\n    </code>\n   </a>\n   callback with it.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        app\n       </strong>\n       (\n       <a class="reference internal" href="#flask.Flask" title="flask.Flask">\n        <em>\n         Flask\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 The application this blueprint is being registered\nwith.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        options\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#dict" title="(in Python v3.11)">\n        <em>\n         dict\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 Keyword arguments forwarded from\n       <a class="reference internal" href="#flask.Flask.register_blueprint" title="flask.Flask.register_blueprint">\n        <code class="xref py py-meth docutils literal notranslate">\n         <span class="pre">\n          register_blueprint()\n         </span>\n        </code>\n       </a>\n       .\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     None\n    </p>\n   </dd>\n  </dl>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionchanged">\n    <p>\n     <span class="versionmodified changed">\n      Changed in version 2.0.1:\n     </span>\n     Nested blueprints are registered with their dotted name.\nThis allows different blueprints with the same name to be\nnested at different locations.\n    </p>\n   </div>\n   <div class="versionchanged">\n    <p>\n     <span class="versionmodified changed">\n      Changed in version 2.0.1:\n     </span>\n     The\n     <code class="docutils literal notranslate">\n      <span class="pre">\n       name\n      </span>\n     </code>\n     option can be used to change the (pre-dotted)\nname the blueprint is registered with. This allows the same\nblueprint to be registered multiple times with unique names\nfor\n     <code class="docutils literal notranslate">\n      <span class="pre">\n       url_for\n      </span>\n     </code>\n     .\n    </p>\n   </div>\n   <div class="versionchanged">\n    <p>\n     <span class="versionmodified changed">\n      Changed in version 2.0.1:\n     </span>\n     Registering the same blueprint with the same name multiple\ntimes is deprecated and will become an error in Flask 2.1.\n    </p>\n   </div>\n  </details>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Blueprint Objects",
    type: ["py", "method"],
    name: "register_blueprint",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Blueprint.register_blueprint">\n  <span class="sig-name descname">\n   <span class="pre">\n    register_blueprint\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     blueprint\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="o">\n    <span class="pre">\n     **\n    </span>\n   </span>\n   <span class="n">\n    <span class="pre">\n     options\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Blueprint.register_blueprint" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Register a\n   <a class="reference internal" href="#flask.Blueprint" title="flask.Blueprint">\n    <code class="xref py py-class docutils literal notranslate">\n     <span class="pre">\n      Blueprint\n     </span>\n    </code>\n   </a>\n   on this blueprint. Keyword\narguments passed to this method will override the defaults set\non the blueprint.\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionchanged">\n    <p>\n     <span class="versionmodified changed">\n      Changed in version 2.0.1:\n     </span>\n     The\n     <code class="docutils literal notranslate">\n      <span class="pre">\n       name\n      </span>\n     </code>\n     option can be used to change the (pre-dotted)\nname the blueprint is registered with. This allows the same\nblueprint to be registered multiple times with unique names\nfor\n     <code class="docutils literal notranslate">\n      <span class="pre">\n       url_for\n      </span>\n     </code>\n     .\n    </p>\n   </div>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 2.0.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        blueprint\n       </strong>\n       (\n       <a class="reference internal" href="#flask.Blueprint" title="flask.blueprints.Blueprint">\n        <em>\n         flask.blueprints.Blueprint\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        options\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     None\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Blueprint Objects",
    type: ["py", "method"],
    name: "register_error_handler",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Blueprint.register_error_handler">\n  <span class="sig-name descname">\n   <span class="pre">\n    register_error_handler\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     code_or_exception\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     f\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Blueprint.register_error_handler" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Alternative error attach function to the\n   <a class="reference internal" href="#flask.Blueprint.errorhandler" title="flask.Blueprint.errorhandler">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      errorhandler()\n     </span>\n    </code>\n   </a>\n   decorator that is more straightforward to use for non decorator\nusage.\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.7.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        code_or_exception\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Type" title="(in Python v3.11)">\n        <em>\n         Type\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/exceptions.html#Exception" title="(in Python v3.11)">\n        <em>\n         Exception\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/functions.html#int" title="(in Python v3.11)">\n        <em>\n         int\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        f\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Callable" title="(in Python v3.11)">\n        <em>\n         Callable\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference internal" href="#flask.Response" title="flask.Response">\n        <em>\n         Response\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n        <em>\n         bytes\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n        <em>\n         List\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n        <em>\n         Mapping\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n        <em>\n         Iterator\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n        <em>\n         Iterator\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n        <em>\n         bytes\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n        <em>\n         Tuple\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference internal" href="#flask.Response" title="flask.Response">\n        <em>\n         Response\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n        <em>\n         bytes\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n        <em>\n         List\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n        <em>\n         Mapping\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n        <em>\n         Iterator\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n        <em>\n         Iterator\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n        <em>\n         bytes\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <em>\n        Headers\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n        <em>\n         Mapping\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n        <em>\n         List\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n        <em>\n         Tuple\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <em>\n        ...\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Sequence" title="(in Python v3.11)">\n        <em>\n         Sequence\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n        <em>\n         Tuple\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n        <em>\n         List\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n        <em>\n         Tuple\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <em>\n        ...\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n        <em>\n         Tuple\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference internal" href="#flask.Response" title="flask.Response">\n        <em>\n         Response\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n        <em>\n         bytes\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n        <em>\n         List\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n        <em>\n         Mapping\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n        <em>\n         Iterator\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n        <em>\n         Iterator\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n        <em>\n         bytes\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/functions.html#int" title="(in Python v3.11)">\n        <em>\n         int\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n        <em>\n         Tuple\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference internal" href="#flask.Response" title="flask.Response">\n        <em>\n         Response\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n        <em>\n         bytes\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n        <em>\n         List\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n        <em>\n         Mapping\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n        <em>\n         Iterator\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n        <em>\n         Iterator\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n        <em>\n         bytes\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/functions.html#int" title="(in Python v3.11)">\n        <em>\n         int\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <em>\n        Headers\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n        <em>\n         Mapping\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n        <em>\n         List\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n        <em>\n         Tuple\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <em>\n        ...\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Sequence" title="(in Python v3.11)">\n        <em>\n         Sequence\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n        <em>\n         Tuple\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n        <em>\n         List\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n        <em>\n         Tuple\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <em>\n        ...\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <em>\n        WSGIApplication\n       </em>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     None\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Blueprint Objects",
    type: ["py", "method"],
    name: "route",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Blueprint.route">\n  <span class="sig-name descname">\n   <span class="pre">\n    route\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     rule\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="o">\n    <span class="pre">\n     **\n    </span>\n   </span>\n   <span class="n">\n    <span class="pre">\n     options\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Blueprint.route" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Decorate a view function to register it with the given URL\nrule and options. Calls\n   <a class="reference internal" href="#flask.Blueprint.add_url_rule" title="flask.Blueprint.add_url_rule">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      add_url_rule()\n     </span>\n    </code>\n   </a>\n   , which has more\ndetails about the implementation.\n  </p>\n  <div class="highlight-python notranslate">\n   <div class="highlight">\n    <pre><span></span><span class="nd">@app</span><span class="o">.</span><span class="n">route</span><span class="p">(</span><span class="s2">"/"</span><span class="p">)</span>\n<span class="k">def</span> <span class="nf">index</span><span class="p">():</span>\n    <span class="k">return</span> <span class="s2">"Hello, World!"</span>\n</pre>\n   </div>\n  </div>\n  <p>\n   See\n   <a class="reference internal" href="#url-route-registrations">\n    <span class="std std-ref">\n     URL Route Registrations\n    </span>\n   </a>\n   .\n  </p>\n  <p>\n   The endpoint name for the route defaults to the name of the view\nfunction if the\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     endpoint\n    </span>\n   </code>\n   parameter isn\u00e2\u0080\u0099t passed.\n  </p>\n  <p>\n   The\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     methods\n    </span>\n   </code>\n   parameter defaults to\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     ["GET"]\n    </span>\n   </code>\n   .\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     HEAD\n    </span>\n   </code>\n   and\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     OPTIONS\n    </span>\n   </code>\n   are added automatically.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        rule\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 The URL rule string.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        options\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 Extra options passed to the\n       <a class="reference external" href="https://werkzeug.palletsprojects.com/en/2.2.x/routing/#werkzeug.routing.Rule" title="(in Werkzeug v2.2.x)">\n        <code class="xref py py-class docutils literal notranslate">\n         <span class="pre">\n          Rule\n         </span>\n        </code>\n       </a>\n       object.\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Callable" title="(in Python v3.11)">\n      <em>\n       Callable\n      </em>\n     </a>\n     [[flask.scaffold.T_route], flask.scaffold.T_route]\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Blueprint Objects",
    type: ["py", "method"],
    name: "send_static_file",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Blueprint.send_static_file">\n  <span class="sig-name descname">\n   <span class="pre">\n    send_static_file\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     filename\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Blueprint.send_static_file" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   The view function used to serve files from\n   <a class="reference internal" href="#flask.Blueprint.static_folder" title="flask.Blueprint.static_folder">\n    <code class="xref py py-attr docutils literal notranslate">\n     <span class="pre">\n      static_folder\n     </span>\n    </code>\n   </a>\n   . A route is automatically registered for\nthis view at\n   <a class="reference internal" href="#flask.Blueprint.static_url_path" title="flask.Blueprint.static_url_path">\n    <code class="xref py py-attr docutils literal notranslate">\n     <span class="pre">\n      static_url_path\n     </span>\n    </code>\n   </a>\n   if\n   <a class="reference internal" href="#flask.Blueprint.static_folder" title="flask.Blueprint.static_folder">\n    <code class="xref py py-attr docutils literal notranslate">\n     <span class="pre">\n      static_folder\n     </span>\n    </code>\n   </a>\n   is\nset.\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.5.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      filename\n     </strong>\n     (\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      <em>\n       str\n      </em>\n     </a>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference internal" href="#flask.Response" title="flask.Response">\n      Response\n     </a>\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Blueprint Objects",
    type: ["py", "method"],
    name: "teardown_app_request",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Blueprint.teardown_app_request">\n  <span class="sig-name descname">\n   <span class="pre">\n    teardown_app_request\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     f\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Blueprint.teardown_app_request" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Like\n   <a class="reference internal" href="#flask.Flask.teardown_request" title="flask.Flask.teardown_request">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      Flask.teardown_request()\n     </span>\n    </code>\n   </a>\n   but for a blueprint.  Such a\nfunction is executed when tearing down each request, even if outside of\nthe blueprint.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      f\n     </strong>\n     (\n     <em>\n      flask.blueprints.T_teardown\n     </em>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     flask.blueprints.T_teardown\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Blueprint Objects",
    type: ["py", "method"],
    name: "teardown_request",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Blueprint.teardown_request">\n  <span class="sig-name descname">\n   <span class="pre">\n    teardown_request\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     f\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Blueprint.teardown_request" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Register a function to be called when the request context is\npopped. Typically this happens at the end of each request, but\ncontexts may be pushed manually as well during testing.\n  </p>\n  <div class="highlight-python notranslate">\n   <div class="highlight">\n    <pre><span></span><span class="k">with</span> <span class="n">app</span><span class="o">.</span><span class="n">test_request_context</span><span class="p">():</span>\n    <span class="o">...</span>\n</pre>\n   </div>\n  </div>\n  <p>\n   When the\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     with\n    </span>\n   </code>\n   block exits (or\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     ctx.pop()\n    </span>\n   </code>\n   is called), the\nteardown functions are called just before the request context is\nmade inactive.\n  </p>\n  <p>\n   When a teardown function was called because of an unhandled\nexception it will be passed an error object. If an\n   <a class="reference internal" href="#flask.Blueprint.errorhandler" title="flask.Blueprint.errorhandler">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      errorhandler()\n     </span>\n    </code>\n   </a>\n   is registered, it will handle the exception\nand the teardown will not receive it.\n  </p>\n  <p>\n   Teardown functions must avoid raising exceptions. If they\nexecute code that might fail they must surround that code with a\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     try\n    </span>\n   </code>\n   /\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     except\n    </span>\n   </code>\n   block and log any errors.\n  </p>\n  <p>\n   The return values of teardown functions are ignored.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      f\n     </strong>\n     (\n     <em>\n      flask.scaffold.T_teardown\n     </em>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     flask.scaffold.T_teardown\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Blueprint Objects",
    type: ["py", "method"],
    name: "url_defaults",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Blueprint.url_defaults">\n  <span class="sig-name descname">\n   <span class="pre">\n    url_defaults\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     f\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Blueprint.url_defaults" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Callback function for URL defaults for all view functions of the\napplication.  It\u00e2\u0080\u0099s called with the endpoint and values and should\nupdate the values passed in place.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      f\n     </strong>\n     (\n     <em>\n      flask.scaffold.T_url_defaults\n     </em>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     flask.scaffold.T_url_defaults\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Blueprint Objects",
    type: ["py", "method"],
    name: "url_value_preprocessor",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Blueprint.url_value_preprocessor">\n  <span class="sig-name descname">\n   <span class="pre">\n    url_value_preprocessor\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     f\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Blueprint.url_value_preprocessor" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Register a URL value preprocessor function for all view\nfunctions in the application. These functions will be called before the\n   <a class="reference internal" href="#flask.Blueprint.before_request" title="flask.Blueprint.before_request">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      before_request()\n     </span>\n    </code>\n   </a>\n   functions.\n  </p>\n  <p>\n   The function can modify the values captured from the matched url before\nthey are passed to the view. For example, this can be used to pop a\ncommon language code value and place it in\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     g\n    </span>\n   </code>\n   rather than pass it to\nevery view.\n  </p>\n  <p>\n   The function is passed the endpoint name and values dict. The return\nvalue is ignored.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      f\n     </strong>\n     (\n     <em>\n      flask.scaffold.T_url_value_preprocessor\n     </em>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     flask.scaffold.T_url_value_preprocessor\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Incoming Request Data",
    type: ["py", "method"],
    name: "application",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Request.application">\n  <em class="property">\n   <span class="pre">\n    classmethod\n   </span>\n   <span class="w">\n   </span>\n  </em>\n  <span class="sig-name descname">\n   <span class="pre">\n    application\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     f\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Request.application" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Decorate a function as responder that accepts the request as\nthe last argument.  This works like the\n   <code class="xref py py-func docutils literal notranslate">\n    <span class="pre">\n     responder()\n    </span>\n   </code>\n   decorator but the function is passed the request object as the\nlast argument and the request object will be closed\nautomatically:\n  </p>\n  <div class="highlight-default notranslate">\n   <div class="highlight">\n    <pre><span></span><span class="nd">@Request</span><span class="o">.</span><span class="n">application</span>\n<span class="k">def</span> <span class="nf">my_wsgi_app</span><span class="p">(</span><span class="n">request</span><span class="p">):</span>\n    <span class="k">return</span> <span class="n">Response</span><span class="p">(</span><span class="s1">\'Hello World!\'</span><span class="p">)</span>\n</pre>\n   </div>\n  </div>\n  <p>\n   As of Werkzeug 0.14 HTTP exceptions are automatically caught and\nconverted to responses instead of failing.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      f\n     </strong>\n     (\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Callable" title="(in Python v3.11)">\n      <em>\n       Callable\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <em>\n      [\n     </em>\n     <a class="reference internal" href="#flask.Request" title="flask.Request">\n      <em>\n       Request\n      </em>\n     </a>\n     <em>\n      ]\n     </em>\n     <em>\n      ,\n     </em>\n     <em>\n      WSGIApplication\n     </em>\n     <em>\n      ]\n     </em>\n     ) \u00e2\u0080\u0093 the WSGI callable to decorate\n    </p>\n   </dd>\n   <dt class="field-even">\n    Returns\n   </dt>\n   <dd class="field-even">\n    <p>\n     a new WSGI callable\n    </p>\n   </dd>\n   <dt class="field-odd">\n    Return type\n   </dt>\n   <dd class="field-odd">\n    <p>\n     WSGIApplication\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Incoming Request Data",
    type: ["py", "method"],
    name: "close",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Request.close">\n  <span class="sig-name descname">\n   <span class="pre">\n    close\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Request.close" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Closes associated resources of this request object.  This\ncloses all file handles explicitly.  You can also use the request\nobject in a with statement which will automatically close it.\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.9.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Return type\n   </dt>\n   <dd class="field-odd">\n    <p>\n     None\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Incoming Request Data",
    type: ["py", "method"],
    name: "from_values",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Request.from_values">\n  <em class="property">\n   <span class="pre">\n    classmethod\n   </span>\n   <span class="w">\n   </span>\n  </em>\n  <span class="sig-name descname">\n   <span class="pre">\n    from_values\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="o">\n    <span class="pre">\n     *\n    </span>\n   </span>\n   <span class="n">\n    <span class="pre">\n     args\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="o">\n    <span class="pre">\n     **\n    </span>\n   </span>\n   <span class="n">\n    <span class="pre">\n     kwargs\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Request.from_values" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Create a new request object based on the values provided.  If\nenviron is given missing values are filled from there.  This method is\nuseful for small scripts when you need to simulate a request from an URL.\nDo not use this method for unittesting, there is a full featured client\nobject (\n   <code class="xref py py-class docutils literal notranslate">\n    <span class="pre">\n     Client\n    </span>\n   </code>\n   ) that allows to create multipart requests,\nsupport for cookies etc.\n  </p>\n  <p>\n   This accepts the same options as the\n   <a class="reference external" href="https://werkzeug.palletsprojects.com/en/2.2.x/test/#werkzeug.test.EnvironBuilder" title="(in Werkzeug v2.2.x)">\n    <code class="xref py py-class docutils literal notranslate">\n     <span class="pre">\n      EnvironBuilder\n     </span>\n    </code>\n   </a>\n   .\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionchanged">\n    <p>\n     <span class="versionmodified changed">\n      Changed in version 0.5:\n     </span>\n     This method now accepts the same arguments as\n     <a class="reference external" href="https://werkzeug.palletsprojects.com/en/2.2.x/test/#werkzeug.test.EnvironBuilder" title="(in Werkzeug v2.2.x)">\n      <code class="xref py py-class docutils literal notranslate">\n       <span class="pre">\n        EnvironBuilder\n       </span>\n      </code>\n     </a>\n     .  Because of this the\n     <cite>\n      environ\n     </cite>\n     parameter is now called\n     <cite>\n      environ_overrides\n     </cite>\n     .\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Returns\n   </dt>\n   <dd class="field-odd">\n    <p>\n     request object\n    </p>\n   </dd>\n   <dt class="field-even">\n    Parameters\n   </dt>\n   <dd class="field-even">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        args\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        kwargs\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-odd">\n    Return type\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <a class="reference external" href="https://werkzeug.palletsprojects.com/en/2.2.x/wrappers/#werkzeug.wrappers.Request" title="(in Werkzeug v2.2.x)">\n      werkzeug.wrappers.request.Request\n     </a>\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Incoming Request Data",
    type: ["py", "method"],
    name: "get_data",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Request.get_data">\n  <span class="sig-name descname">\n   <span class="pre">\n    get_data\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     cache\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     True\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     as_text\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     False\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     parse_form_data\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     False\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Request.get_data" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   This reads the buffered incoming data from the client into one\nbytes object.  By default this is cached but that behavior can be\nchanged by setting\n   <cite>\n    cache\n   </cite>\n   to\n   <cite>\n    False\n   </cite>\n   .\n  </p>\n  <p>\n   Usually it\u00e2\u0080\u0099s a bad idea to call this method without checking the\ncontent length first as a client could send dozens of megabytes or more\nto cause memory problems on the server.\n  </p>\n  <p>\n   Note that if the form data was already parsed this method will not\nreturn anything as form data parsing does not cache the data like\nthis method does.  To implicitly invoke form data parsing function\nset\n   <cite>\n    parse_form_data\n   </cite>\n   to\n   <cite>\n    True\n   </cite>\n   .  When this is done the return value\nof this method will be an empty string if the form parser handles\nthe data.  This generally is not necessary as if the whole data is\ncached (which is the default) the form parser will used the cached\ndata to parse the form data.  Please be generally aware of checking\nthe content length first in any case before calling this method\nto avoid exhausting server memory.\n  </p>\n  <p>\n   If\n   <cite>\n    as_text\n   </cite>\n   is set to\n   <cite>\n    True\n   </cite>\n   the return value will be a decoded\nstring.\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.9.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        cache\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/functions.html#bool" title="(in Python v3.11)">\n        <em>\n         bool\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        as_text\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/functions.html#bool" title="(in Python v3.11)">\n        <em>\n         bool\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        parse_form_data\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/functions.html#bool" title="(in Python v3.11)">\n        <em>\n         bool\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ]\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Incoming Request Data",
    type: ["py", "method"],
    name: "get_json",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Request.get_json">\n  <span class="sig-name descname">\n   <span class="pre">\n    get_json\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     force\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     False\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     silent\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     False\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     cache\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     True\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Request.get_json" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Parse\n   <a class="reference internal" href="#flask.Request.data" title="flask.Request.data">\n    <code class="xref py py-attr docutils literal notranslate">\n     <span class="pre">\n      data\n     </span>\n    </code>\n   </a>\n   as JSON.\n  </p>\n  <p>\n   If the mimetype does not indicate JSON\n(\n   <em class="mimetype">\n    application/json\n   </em>\n   , see\n   <a class="reference internal" href="#flask.Request.is_json" title="flask.Request.is_json">\n    <code class="xref py py-attr docutils literal notranslate">\n     <span class="pre">\n      is_json\n     </span>\n    </code>\n   </a>\n   ), or parsing\nfails,\n   <a class="reference internal" href="#flask.Request.on_json_loading_failed" title="flask.Request.on_json_loading_failed">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      on_json_loading_failed()\n     </span>\n    </code>\n   </a>\n   is called and\nits return value is used as the return value. By default this\nraises a 400 Bad Request error.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        force\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/functions.html#bool" title="(in Python v3.11)">\n        <em>\n         bool\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 Ignore the mimetype and always try to parse JSON.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        silent\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/functions.html#bool" title="(in Python v3.11)">\n        <em>\n         bool\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 Silence mimetype and parsing errors, and\nreturn\n       <code class="docutils literal notranslate">\n        <span class="pre">\n         None\n        </span>\n       </code>\n       instead.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        cache\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/functions.html#bool" title="(in Python v3.11)">\n        <em>\n         bool\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 Store the parsed JSON to return for subsequent\ncalls.\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n      <em>\n       Optional\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ]\n    </p>\n   </dd>\n  </dl>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionchanged">\n    <p>\n     <span class="versionmodified changed">\n      Changed in version 2.1:\n     </span>\n     Raise a 400 error if the content type is incorrect.\n    </p>\n   </div>\n  </details>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Incoming Request Data",
    type: ["py", "method"],
    name: "make_form_data_parser",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Request.make_form_data_parser">\n  <span class="sig-name descname">\n   <span class="pre">\n    make_form_data_parser\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Request.make_form_data_parser" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Creates the form data parser. Instantiates the\n   <a class="reference internal" href="#flask.Request.form_data_parser_class" title="flask.Request.form_data_parser_class">\n    <code class="xref py py-attr docutils literal notranslate">\n     <span class="pre">\n      form_data_parser_class\n     </span>\n    </code>\n   </a>\n   with some parameters.\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.8.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Return type\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <a class="reference external" href="https://werkzeug.palletsprojects.com/en/2.2.x/http/#werkzeug.formparser.FormDataParser" title="(in Werkzeug v2.2.x)">\n      werkzeug.formparser.FormDataParser\n     </a>\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Incoming Request Data",
    type: ["py", "method"],
    name: "on_json_loading_failed",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Request.on_json_loading_failed">\n  <span class="sig-name descname">\n   <span class="pre">\n    on_json_loading_failed\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     e\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Request.on_json_loading_failed" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Called if\n   <a class="reference internal" href="#flask.Request.get_json" title="flask.Request.get_json">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      get_json()\n     </span>\n    </code>\n   </a>\n   fails and isn\u00e2\u0080\u0099t silenced.\n  </p>\n  <p>\n   If this method returns a value, it is used as the return value\nfor\n   <a class="reference internal" href="#flask.Request.get_json" title="flask.Request.get_json">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      get_json()\n     </span>\n    </code>\n   </a>\n   . The default implementation raises\n   <a class="reference external" href="https://werkzeug.palletsprojects.com/en/2.2.x/exceptions/#werkzeug.exceptions.BadRequest" title="(in Werkzeug v2.2.x)">\n    <code class="xref py py-exc docutils literal notranslate">\n     <span class="pre">\n      BadRequest\n     </span>\n    </code>\n   </a>\n   .\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      e\n     </strong>\n     (\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n      <em>\n       Optional\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/exceptions.html#ValueError" title="(in Python v3.11)">\n      <em>\n       ValueError\n      </em>\n     </a>\n     <em>\n      ]\n     </em>\n     ) \u00e2\u0080\u0093 If parsing failed, this is the exception. It will be\n     <code class="docutils literal notranslate">\n      <span class="pre">\n       None\n      </span>\n     </code>\n     if the content type wasn\u00e2\u0080\u0099t\n     <code class="docutils literal notranslate">\n      <span class="pre">\n       application/json\n      </span>\n     </code>\n     .\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Response Objects",
    type: ["py", "method"],
    name: "add_etag",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Response.add_etag">\n  <span class="sig-name descname">\n   <span class="pre">\n    add_etag\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     overwrite\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     False\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     weak\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     False\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Response.add_etag" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Add an etag for the current response if there is none yet.\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionchanged">\n    <p>\n     <span class="versionmodified changed">\n      Changed in version 2.0:\n     </span>\n     SHA-1 is used to generate the value. MD5 may not be\navailable in some environments.\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        overwrite\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/functions.html#bool" title="(in Python v3.11)">\n        <em>\n         bool\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        weak\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/functions.html#bool" title="(in Python v3.11)">\n        <em>\n         bool\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     None\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Response Objects",
    type: ["py", "method"],
    name: "calculate_content_length",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Response.calculate_content_length">\n  <span class="sig-name descname">\n   <span class="pre">\n    calculate_content_length\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Response.calculate_content_length" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Returns the content length if available or\n   <cite>\n    None\n   </cite>\n   otherwise.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Return type\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n      <em>\n       Optional\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/functions.html#int" title="(in Python v3.11)">\n      int\n     </a>\n     ]\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Response Objects",
    type: ["py", "method"],
    name: "call_on_close",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Response.call_on_close">\n  <span class="sig-name descname">\n   <span class="pre">\n    call_on_close\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     func\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Response.call_on_close" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Adds a function to the internal list of functions that should\nbe called as part of closing down the response.  Since 0.7 this\nfunction also returns the function that was passed so that this\ncan be used as a decorator.\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.6.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      func\n     </strong>\n     (\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Callable" title="(in Python v3.11)">\n      <em>\n       Callable\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <em>\n      [\n     </em>\n     <em>\n      ]\n     </em>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     <em>\n      ]\n     </em>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Callable" title="(in Python v3.11)">\n      <em>\n       Callable\n      </em>\n     </a>\n     [[],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ]\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Response Objects",
    type: ["py", "method"],
    name: "close",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Response.close">\n  <span class="sig-name descname">\n   <span class="pre">\n    close\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Response.close" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Close the wrapped response if possible.  You can also use the object\nin a with statement which will automatically close it.\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.9:\n     </span>\n     Can now be used in a with statement.\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Return type\n   </dt>\n   <dd class="field-odd">\n    <p>\n     None\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Response Objects",
    type: ["py", "method"],
    name: "delete_cookie",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Response.delete_cookie">\n  <span class="sig-name descname">\n   <span class="pre">\n    delete_cookie\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     key\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     path\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     \'/\'\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     domain\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     None\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     secure\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     False\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     httponly\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     False\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     samesite\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     None\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Response.delete_cookie" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Delete a cookie.  Fails silently if key doesn\u00e2\u0080\u0099t exist.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        key\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 the key (name) of the cookie to be deleted.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        path\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 if the cookie that should be deleted was limited to a\npath, the path has to be defined here.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        domain\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n        <em>\n         Optional\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       ) \u00e2\u0080\u0093 if the cookie that should be deleted was limited to a\ndomain, that domain has to be defined here.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        secure\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/functions.html#bool" title="(in Python v3.11)">\n        <em>\n         bool\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 If\n       <code class="docutils literal notranslate">\n        <span class="pre">\n         True\n        </span>\n       </code>\n       , the cookie will only be available\nvia HTTPS.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        httponly\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/functions.html#bool" title="(in Python v3.11)">\n        <em>\n         bool\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 Disallow JavaScript access to the cookie.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        samesite\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n        <em>\n         Optional\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       ) \u00e2\u0080\u0093 Limit the scope of the cookie to only be\nattached to requests that are \u00e2\u0080\u009csame-site\u00e2\u0080\u009d.\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     None\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Response Objects",
    type: ["py", "method"],
    name: "force_type",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Response.force_type">\n  <em class="property">\n   <span class="pre">\n    classmethod\n   </span>\n   <span class="w">\n   </span>\n  </em>\n  <span class="sig-name descname">\n   <span class="pre">\n    force_type\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     response\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     environ\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     None\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Response.force_type" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Enforce that the WSGI response is a response object of the current\ntype.  Werkzeug will use the\n   <a class="reference internal" href="#flask.Response" title="flask.Response">\n    <code class="xref py py-class docutils literal notranslate">\n     <span class="pre">\n      Response\n     </span>\n    </code>\n   </a>\n   internally in many\nsituations like the exceptions.  If you call\n   <code class="xref py py-meth docutils literal notranslate">\n    <span class="pre">\n     get_response()\n    </span>\n   </code>\n   on an\nexception you will get back a regular\n   <a class="reference internal" href="#flask.Response" title="flask.Response">\n    <code class="xref py py-class docutils literal notranslate">\n     <span class="pre">\n      Response\n     </span>\n    </code>\n   </a>\n   object, even\nif you are using a custom subclass.\n  </p>\n  <p>\n   This method can enforce a given response type, and it will also\nconvert arbitrary WSGI callables into response objects if an environ\nis provided:\n  </p>\n  <div class="highlight-default notranslate">\n   <div class="highlight">\n    <pre><span></span><span class="c1"># convert a Werkzeug response object into an instance of the</span>\n<span class="c1"># MyResponseClass subclass.</span>\n<span class="n">response</span> <span class="o">=</span> <span class="n">MyResponseClass</span><span class="o">.</span><span class="n">force_type</span><span class="p">(</span><span class="n">response</span><span class="p">)</span>\n\n<span class="c1"># convert any WSGI application into a response object</span>\n<span class="n">response</span> <span class="o">=</span> <span class="n">MyResponseClass</span><span class="o">.</span><span class="n">force_type</span><span class="p">(</span><span class="n">response</span><span class="p">,</span> <span class="n">environ</span><span class="p">)</span>\n</pre>\n   </div>\n  </div>\n  <p>\n   This is especially useful if you want to post-process responses in\nthe main dispatcher and use functionality provided by your subclass.\n  </p>\n  <p>\n   Keep in mind that this will modify response objects in place if\npossible!\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        response\n       </strong>\n       (\n       <a class="reference internal" href="#flask.Response" title="flask.Response">\n        <em>\n         Response\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 a response object or wsgi application.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        environ\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n        <em>\n         Optional\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <em>\n        WSGIEnvironment\n       </em>\n       <em>\n        ]\n       </em>\n       ) \u00e2\u0080\u0093 a WSGI environment object.\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Returns\n   </dt>\n   <dd class="field-even">\n    <p>\n     a response object.\n    </p>\n   </dd>\n   <dt class="field-odd">\n    Return type\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <a class="reference internal" href="#flask.Response" title="flask.Response">\n      Response\n     </a>\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Response Objects",
    type: ["py", "method"],
    name: "freeze",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Response.freeze">\n  <span class="sig-name descname">\n   <span class="pre">\n    freeze\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Response.freeze" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Make the response object ready to be pickled. Does the\nfollowing:\n  </p>\n  <ul class="simple">\n   <li>\n    <p>\n     Buffer the response into a list, ignoring\n     <code class="xref py py-attr docutils literal notranslate">\n      <span class="pre">\n       implicity_sequence_conversion\n      </span>\n     </code>\n     and\n     <a class="reference internal" href="#flask.Response.direct_passthrough" title="flask.Response.direct_passthrough">\n      <code class="xref py py-attr docutils literal notranslate">\n       <span class="pre">\n        direct_passthrough\n       </span>\n      </code>\n     </a>\n     .\n    </p>\n   </li>\n   <li>\n    <p>\n     Set the\n     <code class="docutils literal notranslate">\n      <span class="pre">\n       Content-Length\n      </span>\n     </code>\n     header.\n    </p>\n   </li>\n   <li>\n    <p>\n     Generate an\n     <code class="docutils literal notranslate">\n      <span class="pre">\n       ETag\n      </span>\n     </code>\n     header if one is not already set.\n    </p>\n   </li>\n  </ul>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionchanged">\n    <p>\n     <span class="versionmodified changed">\n      Changed in version 2.1:\n     </span>\n     Removed the\n     <code class="docutils literal notranslate">\n      <span class="pre">\n       no_etag\n      </span>\n     </code>\n     parameter.\n    </p>\n   </div>\n   <div class="versionchanged">\n    <p>\n     <span class="versionmodified changed">\n      Changed in version 2.0:\n     </span>\n     An\n     <code class="docutils literal notranslate">\n      <span class="pre">\n       ETag\n      </span>\n     </code>\n     header is added, the\n     <code class="docutils literal notranslate">\n      <span class="pre">\n       no_etag\n      </span>\n     </code>\n     parameter is\ndeprecated and will be removed in Werkzeug 2.1.\n    </p>\n   </div>\n   <div class="versionchanged">\n    <p>\n     <span class="versionmodified changed">\n      Changed in version 0.6:\n     </span>\n     The\n     <code class="docutils literal notranslate">\n      <span class="pre">\n       Content-Length\n      </span>\n     </code>\n     header is set.\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Return type\n   </dt>\n   <dd class="field-odd">\n    <p>\n     None\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Response Objects",
    type: ["py", "method"],
    name: "from_app",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Response.from_app">\n  <em class="property">\n   <span class="pre">\n    classmethod\n   </span>\n   <span class="w">\n   </span>\n  </em>\n  <span class="sig-name descname">\n   <span class="pre">\n    from_app\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     app\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     environ\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     buffered\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     False\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Response.from_app" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Create a new response object from an application output.  This\nworks best if you pass it an application that returns a generator all\nthe time.  Sometimes applications may use the\n   <cite>\n    write()\n   </cite>\n   callable\nreturned by the\n   <cite>\n    start_response\n   </cite>\n   function.  This tries to resolve such\nedge cases automatically.  But if you don\u00e2\u0080\u0099t get the expected output\nyou should set\n   <cite>\n    buffered\n   </cite>\n   to\n   <cite>\n    True\n   </cite>\n   which enforces buffering.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        app\n       </strong>\n       (\n       <em>\n        WSGIApplication\n       </em>\n       ) \u00e2\u0080\u0093 the WSGI application to execute.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        environ\n       </strong>\n       (\n       <em>\n        WSGIEnvironment\n       </em>\n       ) \u00e2\u0080\u0093 the WSGI environment to execute against.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        buffered\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/functions.html#bool" title="(in Python v3.11)">\n        <em>\n         bool\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 set to\n       <cite>\n        True\n       </cite>\n       to enforce buffering.\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Returns\n   </dt>\n   <dd class="field-even">\n    <p>\n     a response object.\n    </p>\n   </dd>\n   <dt class="field-odd">\n    Return type\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <a class="reference internal" href="#flask.Response" title="flask.Response">\n      Response\n     </a>\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Response Objects",
    type: ["py", "method"],
    name: "get_app_iter",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Response.get_app_iter">\n  <span class="sig-name descname">\n   <span class="pre">\n    get_app_iter\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     environ\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Response.get_app_iter" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Returns the application iterator for the given environ.  Depending\non the request method and the current status code the return value\nmight be an empty response rather than the one from the response.\n  </p>\n  <p>\n   If the request method is\n   <cite>\n    HEAD\n   </cite>\n   or the status code is in a range\nwhere the HTTP specification requires an empty response, an empty\niterable is returned.\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.6.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      environ\n     </strong>\n     (\n     <em>\n      WSGIEnvironment\n     </em>\n     ) \u00e2\u0080\u0093 the WSGI environment of the request.\n    </p>\n   </dd>\n   <dt class="field-even">\n    Returns\n   </dt>\n   <dd class="field-even">\n    <p>\n     a response iterable.\n    </p>\n   </dd>\n   <dt class="field-odd">\n    Return type\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterable" title="(in Python v3.11)">\n      <em>\n       Iterable\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ]\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Response Objects",
    type: ["py", "method"],
    name: "get_data",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Response.get_data">\n  <span class="sig-name descname">\n   <span class="pre">\n    get_data\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     as_text\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     False\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Response.get_data" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   The string representation of the response body.  Whenever you call\nthis property the response iterable is encoded and flattened.  This\ncan lead to unwanted behavior if you stream big data.\n  </p>\n  <p>\n   This behavior can be disabled by setting\n   <code class="xref py py-attr docutils literal notranslate">\n    <span class="pre">\n     implicit_sequence_conversion\n    </span>\n   </code>\n   to\n   <cite>\n    False\n   </cite>\n   .\n  </p>\n  <p>\n   If\n   <cite>\n    as_text\n   </cite>\n   is set to\n   <cite>\n    True\n   </cite>\n   the return value will be a decoded\nstring.\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.9.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      as_text\n     </strong>\n     (\n     <a class="reference external" href="https://docs.python.org/3/library/functions.html#bool" title="(in Python v3.11)">\n      <em>\n       bool\n      </em>\n     </a>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ]\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Response Objects",
    type: ["py", "method"],
    name: "get_etag",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Response.get_etag">\n  <span class="sig-name descname">\n   <span class="pre">\n    get_etag\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Response.get_etag" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Return a tuple in the form\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     (etag,\n    </span>\n    <span class="pre">\n     is_weak)\n    </span>\n   </code>\n   .  If there is no\nETag the return value is\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     (None,\n    </span>\n    <span class="pre">\n     None)\n    </span>\n   </code>\n   .\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Return type\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/functions.html#bool" title="(in Python v3.11)">\n      bool\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [None, None]]\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Response Objects",
    type: ["py", "method"],
    name: "get_json",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Response.get_json">\n  <span class="sig-name descname">\n   <span class="pre">\n    get_json\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     force\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     False\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     silent\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     False\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Response.get_json" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Parse\n   <a class="reference internal" href="#flask.Response.data" title="flask.Response.data">\n    <code class="xref py py-attr docutils literal notranslate">\n     <span class="pre">\n      data\n     </span>\n    </code>\n   </a>\n   as JSON. Useful during testing.\n  </p>\n  <p>\n   If the mimetype does not indicate JSON\n(\n   <em class="mimetype">\n    application/json\n   </em>\n   , see\n   <a class="reference internal" href="#flask.Response.is_json" title="flask.Response.is_json">\n    <code class="xref py py-attr docutils literal notranslate">\n     <span class="pre">\n      is_json\n     </span>\n    </code>\n   </a>\n   ), this\nreturns\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     None\n    </span>\n   </code>\n   .\n  </p>\n  <p>\n   Unlike\n   <a class="reference internal" href="#flask.Request.get_json" title="flask.Request.get_json">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      Request.get_json()\n     </span>\n    </code>\n   </a>\n   , the result is not cached.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        force\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/functions.html#bool" title="(in Python v3.11)">\n        <em>\n         bool\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 Ignore the mimetype and always try to parse JSON.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        silent\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/functions.html#bool" title="(in Python v3.11)">\n        <em>\n         bool\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 Silence parsing errors and return\n       <code class="docutils literal notranslate">\n        <span class="pre">\n         None\n        </span>\n       </code>\n       instead.\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n      <em>\n       Optional\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ]\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Response Objects",
    type: ["py", "method"],
    name: "get_wsgi_headers",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Response.get_wsgi_headers">\n  <span class="sig-name descname">\n   <span class="pre">\n    get_wsgi_headers\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     environ\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Response.get_wsgi_headers" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   This is automatically called right before the response is started\nand returns headers modified for the given environment.  It returns a\ncopy of the headers from the response with some modifications applied\nif necessary.\n  </p>\n  <p>\n   For example the location header (if present) is joined with the root\nURL of the environment.  Also the content length is automatically set\nto zero here for certain status codes.\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionchanged">\n    <p>\n     <span class="versionmodified changed">\n      Changed in version 0.6:\n     </span>\n     Previously that function was called\n     <cite>\n      fix_headers\n     </cite>\n     and modified\nthe response object in place.  Also since 0.6, IRIs in location\nand content-location headers are handled properly.\n    </p>\n    <p>\n     Also starting with 0.6, Werkzeug will attempt to set the content\nlength if it is able to figure it out on its own.  This is the\ncase if all the strings in the response iterable are already\nencoded and the iterable is buffered.\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      environ\n     </strong>\n     (\n     <em>\n      WSGIEnvironment\n     </em>\n     ) \u00e2\u0080\u0093 the WSGI environment of the request.\n    </p>\n   </dd>\n   <dt class="field-even">\n    Returns\n   </dt>\n   <dd class="field-even">\n    <p>\n     returns a new\n     <a class="reference external" href="https://werkzeug.palletsprojects.com/en/2.2.x/datastructures/#werkzeug.datastructures.Headers" title="(in Werkzeug v2.2.x)">\n      <code class="xref py py-class docutils literal notranslate">\n       <span class="pre">\n        Headers\n       </span>\n      </code>\n     </a>\n     object.\n    </p>\n   </dd>\n   <dt class="field-odd">\n    Return type\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <a class="reference external" href="https://werkzeug.palletsprojects.com/en/2.2.x/datastructures/#werkzeug.datastructures.Headers" title="(in Werkzeug v2.2.x)">\n      werkzeug.datastructures.Headers\n     </a>\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Response Objects",
    type: ["py", "method"],
    name: "get_wsgi_response",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Response.get_wsgi_response">\n  <span class="sig-name descname">\n   <span class="pre">\n    get_wsgi_response\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     environ\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Response.get_wsgi_response" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Returns the final WSGI response as tuple.  The first item in\nthe tuple is the application iterator, the second the status and\nthe third the list of headers.  The response returned is created\nspecially for the given environment.  For example if the request\nmethod in the WSGI environment is\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     \'HEAD\'\n    </span>\n   </code>\n   the response will\nbe empty and only the headers and status code will be present.\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.6.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      environ\n     </strong>\n     (\n     <em>\n      WSGIEnvironment\n     </em>\n     ) \u00e2\u0080\u0093 the WSGI environment of the request.\n    </p>\n   </dd>\n   <dt class="field-even">\n    Returns\n   </dt>\n   <dd class="field-even">\n    <p>\n     an\n     <code class="docutils literal notranslate">\n      <span class="pre">\n       (app_iter,\n      </span>\n      <span class="pre">\n       status,\n      </span>\n      <span class="pre">\n       headers)\n      </span>\n     </code>\n     tuple.\n    </p>\n   </dd>\n   <dt class="field-odd">\n    Return type\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterable" title="(in Python v3.11)">\n      <em>\n       Iterable\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ]]]\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Response Objects",
    type: ["py", "method"],
    name: "iter_encoded",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Response.iter_encoded">\n  <span class="sig-name descname">\n   <span class="pre">\n    iter_encoded\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Response.iter_encoded" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Iter the response encoded with the encoding of the response.\nIf the response object is invoked as WSGI application the return\nvalue of this method is used as application iterator unless\n   <a class="reference internal" href="#flask.Response.direct_passthrough" title="flask.Response.direct_passthrough">\n    <code class="xref py py-attr docutils literal notranslate">\n     <span class="pre">\n      direct_passthrough\n     </span>\n    </code>\n   </a>\n   was activated.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Return type\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ]\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Response Objects",
    type: ["py", "method"],
    name: "make_conditional",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Response.make_conditional">\n  <span class="sig-name descname">\n   <span class="pre">\n    make_conditional\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     request_or_environ\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     accept_ranges\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     False\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     complete_length\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     None\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Response.make_conditional" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Make the response conditional to the request.  This method works\nbest if an etag was defined for the response already.  The\n   <cite>\n    add_etag\n   </cite>\n   method can be used to do that.  If called without etag just the date\nheader is set.\n  </p>\n  <p>\n   This does nothing if the request method in the request or environ is\nanything but GET or HEAD.\n  </p>\n  <p>\n   For optimal performance when handling range requests, it\u00e2\u0080\u0099s recommended\nthat your response data object implements\n   <cite>\n    seekable\n   </cite>\n   ,\n   <cite>\n    seek\n   </cite>\n   and\n   <cite>\n    tell\n   </cite>\n   methods as described by\n   <a class="reference external" href="https://docs.python.org/3/library/io.html#io.IOBase" title="(in Python v3.11)">\n    <code class="xref py py-class docutils literal notranslate">\n     <span class="pre">\n      io.IOBase\n     </span>\n    </code>\n   </a>\n   .  Objects returned by\n   <code class="xref py py-meth docutils literal notranslate">\n    <span class="pre">\n     wrap_file()\n    </span>\n   </code>\n   automatically implement those methods.\n  </p>\n  <p>\n   It does not remove the body of the response because that\u00e2\u0080\u0099s something\nthe\n   <code class="xref py py-meth docutils literal notranslate">\n    <span class="pre">\n     __call__()\n    </span>\n   </code>\n   function does for us automatically.\n  </p>\n  <p>\n   Returns self so that you can do\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     return\n    </span>\n    <span class="pre">\n     resp.make_conditional(req)\n    </span>\n   </code>\n   but modifies the object in-place.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        request_or_environ\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <em>\n        WSGIEnvironment\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference internal" href="#flask.Request" title="flask.Request">\n        <em>\n         Request\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       ) \u00e2\u0080\u0093 a request object or WSGI environment to be\nused to make the response conditional\nagainst.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        accept_ranges\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/functions.html#bool" title="(in Python v3.11)">\n        <em>\n         bool\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       ) \u00e2\u0080\u0093 This parameter dictates the value of\n       <cite>\n        Accept-Ranges\n       </cite>\n       header. If\n       <code class="docutils literal notranslate">\n        <span class="pre">\n         False\n        </span>\n       </code>\n       (default),\nthe header is not set. If\n       <code class="docutils literal notranslate">\n        <span class="pre">\n         True\n        </span>\n       </code>\n       , it will be set\nto\n       <code class="docutils literal notranslate">\n        <span class="pre">\n         "bytes"\n        </span>\n       </code>\n       . If\n       <code class="docutils literal notranslate">\n        <span class="pre">\n         None\n        </span>\n       </code>\n       , it will be set to\n       <code class="docutils literal notranslate">\n        <span class="pre">\n         "none"\n        </span>\n       </code>\n       . If it\u00e2\u0080\u0099s a string, it will use this\nvalue.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        complete_length\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n        <em>\n         Optional\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/functions.html#int" title="(in Python v3.11)">\n        <em>\n         int\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       ) \u00e2\u0080\u0093 Will be used only in valid Range Requests.\nIt will set\n       <cite>\n        Content-Range\n       </cite>\n       complete length\nvalue and compute\n       <cite>\n        Content-Length\n       </cite>\n       real value.\nThis parameter is mandatory for successful\nRange Requests completion.\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Raises\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://werkzeug.palletsprojects.com/en/2.2.x/exceptions/#werkzeug.exceptions.RequestedRangeNotSatisfiable" title="(in Werkzeug v2.2.x)">\n      <code class="xref py py-class docutils literal notranslate">\n       <span class="pre">\n        RequestedRangeNotSatisfiable\n       </span>\n      </code>\n     </a>\n     if\n     <cite>\n      Range\n     </cite>\n     header could not be parsed or satisfied.\n    </p>\n   </dd>\n   <dt class="field-odd">\n    Return type\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <a class="reference internal" href="#flask.Response" title="flask.Response">\n      Response\n     </a>\n    </p>\n   </dd>\n  </dl>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionchanged">\n    <p>\n     <span class="versionmodified changed">\n      Changed in version 2.0:\n     </span>\n     Range processing is skipped if length is 0 instead of\nraising a 416 Range Not Satisfiable error.\n    </p>\n   </div>\n  </details>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Response Objects",
    type: ["py", "method"],
    name: "make_sequence",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Response.make_sequence">\n  <span class="sig-name descname">\n   <span class="pre">\n    make_sequence\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Response.make_sequence" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Converts the response iterator in a list.  By default this happens\nautomatically if required.  If\n   <cite>\n    implicit_sequence_conversion\n   </cite>\n   is\ndisabled, this method is not automatically called and some properties\nmight raise exceptions.  This also encodes all the items.\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.6.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Return type\n   </dt>\n   <dd class="field-odd">\n    <p>\n     None\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Response Objects",
    type: ["py", "method"],
    name: "set_cookie",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Response.set_cookie">\n  <span class="sig-name descname">\n   <span class="pre">\n    set_cookie\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     key\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     value\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     \'\'\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     max_age\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     None\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     expires\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     None\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     path\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     \'/\'\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     domain\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     None\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     secure\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     False\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     httponly\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     False\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     samesite\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     None\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Response.set_cookie" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Sets a cookie.\n  </p>\n  <p>\n   A warning is raised if the size of the cookie header exceeds\n   <a class="reference internal" href="#flask.Response.max_cookie_size" title="flask.Response.max_cookie_size">\n    <code class="xref py py-attr docutils literal notranslate">\n     <span class="pre">\n      max_cookie_size\n     </span>\n    </code>\n   </a>\n   , but the header will still be set.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        key\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 the key (name) of the cookie to be set.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        value\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 the value of the cookie.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        max_age\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n        <em>\n         Optional\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/datetime.html#datetime.timedelta" title="(in Python v3.11)">\n        <em>\n         datetime.timedelta\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/functions.html#int" title="(in Python v3.11)">\n        <em>\n         int\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       ) \u00e2\u0080\u0093 should be a number of seconds, or\n       <cite>\n        None\n       </cite>\n       (default) if\nthe cookie should last only as long as the client\u00e2\u0080\u0099s\nbrowser session.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        expires\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n        <em>\n         Optional\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n        <em>\n         Union\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/datetime.html#datetime.datetime" title="(in Python v3.11)">\n        <em>\n         datetime.datetime\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/functions.html#int" title="(in Python v3.11)">\n        <em>\n         int\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/functions.html#float" title="(in Python v3.11)">\n        <em>\n         float\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       ) \u00e2\u0080\u0093 should be a\n       <cite>\n        datetime\n       </cite>\n       object or UNIX timestamp.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        path\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n        <em>\n         Optional\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       ) \u00e2\u0080\u0093 limits the cookie to a given path, per default it will\nspan the whole domain.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        domain\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n        <em>\n         Optional\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       ) \u00e2\u0080\u0093 if you want to set a cross-domain cookie.  For example,\n       <code class="docutils literal notranslate">\n        <span class="pre">\n         domain=".example.com"\n        </span>\n       </code>\n       will set a cookie that is\nreadable by the domain\n       <code class="docutils literal notranslate">\n        <span class="pre">\n         www.example.com\n        </span>\n       </code>\n       ,\n       <code class="docutils literal notranslate">\n        <span class="pre">\n         foo.example.com\n        </span>\n       </code>\n       etc.  Otherwise, a cookie will only\nbe readable by the domain that set it.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        secure\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/functions.html#bool" title="(in Python v3.11)">\n        <em>\n         bool\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 If\n       <code class="docutils literal notranslate">\n        <span class="pre">\n         True\n        </span>\n       </code>\n       , the cookie will only be available\nvia HTTPS.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        httponly\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/functions.html#bool" title="(in Python v3.11)">\n        <em>\n         bool\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 Disallow JavaScript access to the cookie.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        samesite\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n        <em>\n         Optional\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       ) \u00e2\u0080\u0093 Limit the scope of the cookie to only be\nattached to requests that are \u00e2\u0080\u009csame-site\u00e2\u0080\u009d.\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     None\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Response Objects",
    type: ["py", "method"],
    name: "set_data",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Response.set_data">\n  <span class="sig-name descname">\n   <span class="pre">\n    set_data\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     value\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Response.set_data" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Sets a new string as response.  The value must be a string or\nbytes. If a string is set it\u00e2\u0080\u0099s encoded to the charset of the\nresponse (utf-8 by default).\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.9.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      value\n     </strong>\n     (\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      <em>\n       bytes\n      </em>\n     </a>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      <em>\n       str\n      </em>\n     </a>\n     <em>\n      ]\n     </em>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     None\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Response Objects",
    type: ["py", "method"],
    name: "set_etag",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Response.set_etag">\n  <span class="sig-name descname">\n   <span class="pre">\n    set_etag\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     etag\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     weak\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     False\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Response.set_etag" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Set the etag, and override the old one if there was one.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        etag\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        weak\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/functions.html#bool" title="(in Python v3.11)">\n        <em>\n         bool\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     None\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Session Interface",
    type: ["py", "method"],
    name: "get_cookie_domain",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.sessions.SessionInterface.get_cookie_domain">\n  <span class="sig-name descname">\n   <span class="pre">\n    get_cookie_domain\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     app\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.sessions.SessionInterface.get_cookie_domain" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Returns the domain that should be set for the session cookie.\n  </p>\n  <p>\n   Uses\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     SESSION_COOKIE_DOMAIN\n    </span>\n   </code>\n   if it is configured, otherwise\nfalls back to detecting the domain based on\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     SERVER_NAME\n    </span>\n   </code>\n   .\n  </p>\n  <p>\n   Once detected (or if not set at all),\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     SESSION_COOKIE_DOMAIN\n    </span>\n   </code>\n   is\nupdated to avoid re-running the logic.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      app\n     </strong>\n     (\n     <a class="reference internal" href="#flask.Flask" title="flask.Flask">\n      <em>\n       Flask\n      </em>\n     </a>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n      <em>\n       Optional\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ]\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Session Interface",
    type: ["py", "method"],
    name: "get_cookie_httponly",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.sessions.SessionInterface.get_cookie_httponly">\n  <span class="sig-name descname">\n   <span class="pre">\n    get_cookie_httponly\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     app\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.sessions.SessionInterface.get_cookie_httponly" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Returns True if the session cookie should be httponly.  This\ncurrently just returns the value of the\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     SESSION_COOKIE_HTTPONLY\n    </span>\n   </code>\n   config var.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      app\n     </strong>\n     (\n     <a class="reference internal" href="#flask.Flask" title="flask.Flask">\n      <em>\n       Flask\n      </em>\n     </a>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/functions.html#bool" title="(in Python v3.11)">\n      bool\n     </a>\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Session Interface",
    type: ["py", "method"],
    name: "get_cookie_name",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.sessions.SessionInterface.get_cookie_name">\n  <span class="sig-name descname">\n   <span class="pre">\n    get_cookie_name\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     app\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.sessions.SessionInterface.get_cookie_name" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   The name of the session cookie. Uses``app.config[\u00e2\u0080\u009cSESSION_COOKIE_NAME\u00e2\u0080\u009d]``.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      app\n     </strong>\n     (\n     <a class="reference internal" href="#flask.Flask" title="flask.Flask">\n      <em>\n       Flask\n      </em>\n     </a>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Session Interface",
    type: ["py", "method"],
    name: "get_cookie_path",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.sessions.SessionInterface.get_cookie_path">\n  <span class="sig-name descname">\n   <span class="pre">\n    get_cookie_path\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     app\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.sessions.SessionInterface.get_cookie_path" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Returns the path for which the cookie should be valid.  The\ndefault implementation uses the value from the\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     SESSION_COOKIE_PATH\n    </span>\n   </code>\n   config var if it\u00e2\u0080\u0099s set, and falls back to\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     APPLICATION_ROOT\n    </span>\n   </code>\n   or\nuses\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     /\n    </span>\n   </code>\n   if it\u00e2\u0080\u0099s\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     None\n    </span>\n   </code>\n   .\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      app\n     </strong>\n     (\n     <a class="reference internal" href="#flask.Flask" title="flask.Flask">\n      <em>\n       Flask\n      </em>\n     </a>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Session Interface",
    type: ["py", "method"],
    name: "get_cookie_samesite",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.sessions.SessionInterface.get_cookie_samesite">\n  <span class="sig-name descname">\n   <span class="pre">\n    get_cookie_samesite\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     app\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.sessions.SessionInterface.get_cookie_samesite" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Return\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     \'Strict\'\n    </span>\n   </code>\n   or\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     \'Lax\'\n    </span>\n   </code>\n   if the cookie should use the\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     SameSite\n    </span>\n   </code>\n   attribute. This currently just returns the value of\nthe\n   <a class="reference internal" href="../config/#SESSION_COOKIE_SAMESITE" title="SESSION_COOKIE_SAMESITE">\n    <code class="xref py py-data docutils literal notranslate">\n     <span class="pre">\n      SESSION_COOKIE_SAMESITE\n     </span>\n    </code>\n   </a>\n   setting.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      app\n     </strong>\n     (\n     <a class="reference internal" href="#flask.Flask" title="flask.Flask">\n      <em>\n       Flask\n      </em>\n     </a>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Session Interface",
    type: ["py", "method"],
    name: "get_cookie_secure",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.sessions.SessionInterface.get_cookie_secure">\n  <span class="sig-name descname">\n   <span class="pre">\n    get_cookie_secure\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     app\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.sessions.SessionInterface.get_cookie_secure" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Returns True if the cookie should be secure.  This currently\njust returns the value of the\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     SESSION_COOKIE_SECURE\n    </span>\n   </code>\n   setting.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      app\n     </strong>\n     (\n     <a class="reference internal" href="#flask.Flask" title="flask.Flask">\n      <em>\n       Flask\n      </em>\n     </a>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/functions.html#bool" title="(in Python v3.11)">\n      bool\n     </a>\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Session Interface",
    type: ["py", "method"],
    name: "get_expiration_time",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.sessions.SessionInterface.get_expiration_time">\n  <span class="sig-name descname">\n   <span class="pre">\n    get_expiration_time\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     app\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     session\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.sessions.SessionInterface.get_expiration_time" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   A helper method that returns an expiration date for the session\nor\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     None\n    </span>\n   </code>\n   if the session is linked to the browser session.  The\ndefault implementation returns now + the permanent session\nlifetime configured on the application.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        app\n       </strong>\n       (\n       <a class="reference internal" href="#flask.Flask" title="flask.Flask">\n        <em>\n         Flask\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        session\n       </strong>\n       (\n       <a class="reference internal" href="#flask.sessions.SessionMixin" title="flask.sessions.SessionMixin">\n        <em>\n         flask.sessions.SessionMixin\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n      <em>\n       Optional\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/datetime.html#datetime.datetime" title="(in Python v3.11)">\n      datetime.datetime\n     </a>\n     ]\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Session Interface",
    type: ["py", "method"],
    name: "is_null_session",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.sessions.SessionInterface.is_null_session">\n  <span class="sig-name descname">\n   <span class="pre">\n    is_null_session\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     obj\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.sessions.SessionInterface.is_null_session" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Checks if a given object is a null session.  Null sessions are\nnot asked to be saved.\n  </p>\n  <p>\n   This checks if the object is an instance of\n   <a class="reference internal" href="#flask.sessions.SessionInterface.null_session_class" title="flask.sessions.SessionInterface.null_session_class">\n    <code class="xref py py-attr docutils literal notranslate">\n     <span class="pre">\n      null_session_class\n     </span>\n    </code>\n   </a>\n   by default.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      obj\n     </strong>\n     (\n     <a class="reference external" href="https://docs.python.org/3/library/functions.html#object" title="(in Python v3.11)">\n      <em>\n       object\n      </em>\n     </a>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/functions.html#bool" title="(in Python v3.11)">\n      bool\n     </a>\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Session Interface",
    type: ["py", "method"],
    name: "make_null_session",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.sessions.SessionInterface.make_null_session">\n  <span class="sig-name descname">\n   <span class="pre">\n    make_null_session\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     app\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.sessions.SessionInterface.make_null_session" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Creates a null session which acts as a replacement object if the\nreal session support could not be loaded due to a configuration\nerror.  This mainly aids the user experience because the job of the\nnull session is to still support lookup without complaining but\nmodifications are answered with a helpful error message of what\nfailed.\n  </p>\n  <p>\n   This creates an instance of\n   <a class="reference internal" href="#flask.sessions.SessionInterface.null_session_class" title="flask.sessions.SessionInterface.null_session_class">\n    <code class="xref py py-attr docutils literal notranslate">\n     <span class="pre">\n      null_session_class\n     </span>\n    </code>\n   </a>\n   by default.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      app\n     </strong>\n     (\n     <a class="reference internal" href="#flask.Flask" title="flask.Flask">\n      <em>\n       Flask\n      </em>\n     </a>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference internal" href="#flask.sessions.NullSession" title="flask.sessions.NullSession">\n      flask.sessions.NullSession\n     </a>\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Session Interface",
    type: ["py", "method"],
    name: "open_session",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.sessions.SessionInterface.open_session">\n  <span class="sig-name descname">\n   <span class="pre">\n    open_session\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     app\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     request\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.sessions.SessionInterface.open_session" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   This is called at the beginning of each request, after\npushing the request context, before matching the URL.\n  </p>\n  <p>\n   This must return an object which implements a dictionary-like\ninterface as well as the\n   <a class="reference internal" href="#flask.sessions.SessionMixin" title="flask.sessions.SessionMixin">\n    <code class="xref py py-class docutils literal notranslate">\n     <span class="pre">\n      SessionMixin\n     </span>\n    </code>\n   </a>\n   interface.\n  </p>\n  <p>\n   This will return\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     None\n    </span>\n   </code>\n   to indicate that loading failed in\nsome way that is not immediately an error. The request\ncontext will fall back to using\n   <a class="reference internal" href="#flask.sessions.SessionInterface.make_null_session" title="flask.sessions.SessionInterface.make_null_session">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      make_null_session()\n     </span>\n    </code>\n   </a>\n   in this case.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        app\n       </strong>\n       (\n       <a class="reference internal" href="#flask.Flask" title="flask.Flask">\n        <em>\n         Flask\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        request\n       </strong>\n       (\n       <a class="reference internal" href="#flask.Request" title="flask.Request">\n        <em>\n         Request\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n      <em>\n       Optional\n      </em>\n     </a>\n     [\n     <a class="reference internal" href="#flask.sessions.SessionMixin" title="flask.sessions.SessionMixin">\n      flask.sessions.SessionMixin\n     </a>\n     ]\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Session Interface",
    type: ["py", "method"],
    name: "save_session",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.sessions.SessionInterface.save_session">\n  <span class="sig-name descname">\n   <span class="pre">\n    save_session\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     app\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     session\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     response\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.sessions.SessionInterface.save_session" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   This is called at the end of each request, after generating\na response, before removing the request context. It is skipped\nif\n   <a class="reference internal" href="#flask.sessions.SessionInterface.is_null_session" title="flask.sessions.SessionInterface.is_null_session">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      is_null_session()\n     </span>\n    </code>\n   </a>\n   returns\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     True\n    </span>\n   </code>\n   .\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        app\n       </strong>\n       (\n       <a class="reference internal" href="#flask.Flask" title="flask.Flask">\n        <em>\n         Flask\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        session\n       </strong>\n       (\n       <a class="reference internal" href="#flask.sessions.SessionMixin" title="flask.sessions.SessionMixin">\n        <em>\n         flask.sessions.SessionMixin\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        response\n       </strong>\n       (\n       <a class="reference internal" href="#flask.Response" title="flask.Response">\n        <em>\n         Response\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     None\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Session Interface",
    type: ["py", "method"],
    name: "should_set_cookie",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.sessions.SessionInterface.should_set_cookie">\n  <span class="sig-name descname">\n   <span class="pre">\n    should_set_cookie\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     app\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     session\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.sessions.SessionInterface.should_set_cookie" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Used by session backends to determine if a\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     Set-Cookie\n    </span>\n   </code>\n   header\nshould be set for this session cookie for this response. If the session\nhas been modified, the cookie is set. If the session is permanent and\nthe\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     SESSION_REFRESH_EACH_REQUEST\n    </span>\n   </code>\n   config is true, the cookie is\nalways set.\n  </p>\n  <p>\n   This check is usually skipped if the session was deleted.\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.11.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        app\n       </strong>\n       (\n       <a class="reference internal" href="#flask.Flask" title="flask.Flask">\n        <em>\n         Flask\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        session\n       </strong>\n       (\n       <a class="reference internal" href="#flask.sessions.SessionMixin" title="flask.sessions.SessionMixin">\n        <em>\n         flask.sessions.SessionMixin\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/functions.html#bool" title="(in Python v3.11)">\n      bool\n     </a>\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Session Interface",
    type: ["py", "method"],
    name: "digest_method",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.sessions.SecureCookieSessionInterface.digest_method">\n  <em class="property">\n   <span class="pre">\n    static\n   </span>\n   <span class="w">\n   </span>\n  </em>\n  <span class="sig-name descname">\n   <span class="pre">\n    digest_method\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     string\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     b\'\'\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="o">\n    <span class="pre">\n     *\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     usedforsecurity\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     True\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.sessions.SecureCookieSessionInterface.digest_method" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   the hash function to use for the signature.  The default is sha1\n  </p>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Session Interface",
    type: ["py", "method"],
    name: "open_session",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.sessions.SecureCookieSessionInterface.open_session">\n  <span class="sig-name descname">\n   <span class="pre">\n    open_session\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     app\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     request\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.sessions.SecureCookieSessionInterface.open_session" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   This is called at the beginning of each request, after\npushing the request context, before matching the URL.\n  </p>\n  <p>\n   This must return an object which implements a dictionary-like\ninterface as well as the\n   <a class="reference internal" href="#flask.sessions.SessionMixin" title="flask.sessions.SessionMixin">\n    <code class="xref py py-class docutils literal notranslate">\n     <span class="pre">\n      SessionMixin\n     </span>\n    </code>\n   </a>\n   interface.\n  </p>\n  <p>\n   This will return\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     None\n    </span>\n   </code>\n   to indicate that loading failed in\nsome way that is not immediately an error. The request\ncontext will fall back to using\n   <code class="xref py py-meth docutils literal notranslate">\n    <span class="pre">\n     make_null_session()\n    </span>\n   </code>\n   in this case.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        app\n       </strong>\n       (\n       <a class="reference internal" href="#flask.Flask" title="flask.Flask">\n        <em>\n         Flask\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        request\n       </strong>\n       (\n       <a class="reference internal" href="#flask.Request" title="flask.Request">\n        <em>\n         Request\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n      <em>\n       Optional\n      </em>\n     </a>\n     [\n     <a class="reference internal" href="#flask.sessions.SecureCookieSession" title="flask.sessions.SecureCookieSession">\n      flask.sessions.SecureCookieSession\n     </a>\n     ]\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Session Interface",
    type: ["py", "method"],
    name: "save_session",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.sessions.SecureCookieSessionInterface.save_session">\n  <span class="sig-name descname">\n   <span class="pre">\n    save_session\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     app\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     session\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     response\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.sessions.SecureCookieSessionInterface.save_session" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   This is called at the end of each request, after generating\na response, before removing the request context. It is skipped\nif\n   <code class="xref py py-meth docutils literal notranslate">\n    <span class="pre">\n     is_null_session()\n    </span>\n   </code>\n   returns\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     True\n    </span>\n   </code>\n   .\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        app\n       </strong>\n       (\n       <a class="reference internal" href="#flask.Flask" title="flask.Flask">\n        <em>\n         Flask\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        session\n       </strong>\n       (\n       <a class="reference internal" href="#flask.sessions.SessionMixin" title="flask.sessions.SessionMixin">\n        <em>\n         flask.sessions.SessionMixin\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        response\n       </strong>\n       (\n       <a class="reference internal" href="#flask.Response" title="flask.Response">\n        <em>\n         Response\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     None\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Session Interface",
    type: ["py", "method"],
    name: "get",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.sessions.SecureCookieSession.get">\n  <span class="sig-name descname">\n   <span class="pre">\n    get\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     key\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     default\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     None\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.sessions.SecureCookieSession.get" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Return the value for key if key is in the dictionary, else default.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        key\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        default\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n        <em>\n         Optional\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Session Interface",
    type: ["py", "method"],
    name: "setdefault",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.sessions.SecureCookieSession.setdefault">\n  <span class="sig-name descname">\n   <span class="pre">\n    setdefault\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     key\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     default\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     None\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.sessions.SecureCookieSession.setdefault" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Insert key with a value of default if key is not in the dictionary.\n  </p>\n  <p>\n   Return the value for key if key is in the dictionary, else default.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        key\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        default\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n        <em>\n         Optional\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Session Interface",
    type: ["py", "method"],
    name: "clear",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.sessions.NullSession.clear">\n  <span class="sig-name descname">\n   <span class="pre">\n    clear\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <span class="sig-paren">\n   )\n  </span>\n  <span class="sig-return">\n   <span class="sig-return-icon">\n    \u2192\n   </span>\n   <span class="sig-return-typehint">\n    <span class="pre">\n     None.\n    </span>\n    <span class="pre">\n     Remove\n    </span>\n    <span class="pre">\n     all\n    </span>\n    <span class="pre">\n     items\n    </span>\n    <span class="pre">\n     from\n    </span>\n    <span class="pre">\n     D.\n    </span>\n   </span>\n  </span>\n  <a class="headerlink" href="#flask.sessions.NullSession.clear" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        args\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        kwargs\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     te.NoReturn\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Session Interface",
    type: ["py", "method"],
    name: "pop",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.sessions.NullSession.pop">\n  <span class="sig-name descname">\n   <span class="pre">\n    pop\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     k\n    </span>\n   </span>\n  </em>\n  <span class="optional">\n   [\n  </span>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     d\n    </span>\n   </span>\n  </em>\n  <span class="optional">\n   ]\n  </span>\n  <span class="sig-paren">\n   )\n  </span>\n  <span class="sig-return">\n   <span class="sig-return-icon">\n    \u2192\n   </span>\n   <span class="sig-return-typehint">\n    <span class="pre">\n     v,\n    </span>\n    <span class="pre">\n     remove\n    </span>\n    <span class="pre">\n     specified\n    </span>\n    <span class="pre">\n     key\n    </span>\n    <span class="pre">\n     and\n    </span>\n    <span class="pre">\n     return\n    </span>\n    <span class="pre">\n     the\n    </span>\n    <span class="pre">\n     corresponding\n    </span>\n    <span class="pre">\n     value.\n    </span>\n   </span>\n  </span>\n  <a class="headerlink" href="#flask.sessions.NullSession.pop" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   If the key is not found, return the default if given; otherwise,\nraise a KeyError.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        args\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        kwargs\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     te.NoReturn\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Session Interface",
    type: ["py", "method"],
    name: "popitem",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.sessions.NullSession.popitem">\n  <span class="sig-name descname">\n   <span class="pre">\n    popitem\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="o">\n    <span class="pre">\n     *\n    </span>\n   </span>\n   <span class="n">\n    <span class="pre">\n     args\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="o">\n    <span class="pre">\n     **\n    </span>\n   </span>\n   <span class="n">\n    <span class="pre">\n     kwargs\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.sessions.NullSession.popitem" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Remove and return a (key, value) pair as a 2-tuple.\n  </p>\n  <p>\n   Pairs are returned in LIFO (last-in, first-out) order.\nRaises KeyError if the dict is empty.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        args\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        kwargs\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     te.NoReturn\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Session Interface",
    type: ["py", "method"],
    name: "setdefault",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.sessions.NullSession.setdefault">\n  <span class="sig-name descname">\n   <span class="pre">\n    setdefault\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="o">\n    <span class="pre">\n     *\n    </span>\n   </span>\n   <span class="n">\n    <span class="pre">\n     args\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="o">\n    <span class="pre">\n     **\n    </span>\n   </span>\n   <span class="n">\n    <span class="pre">\n     kwargs\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.sessions.NullSession.setdefault" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Insert key with a value of default if key is not in the dictionary.\n  </p>\n  <p>\n   Return the value for key if key is in the dictionary, else default.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        args\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        kwargs\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     te.NoReturn\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Session Interface",
    type: ["py", "method"],
    name: "update",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.sessions.NullSession.update">\n  <span class="sig-name descname">\n   <span class="pre">\n    update\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <span class="optional">\n   [\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     E\n    </span>\n   </span>\n  </em>\n  ,\n  <span class="optional">\n   ]\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     **F\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <span class="sig-return">\n   <span class="sig-return-icon">\n    \u2192\n   </span>\n   <span class="sig-return-typehint">\n    <span class="pre">\n     None.\n    </span>\n    <span class="pre">\n     Update\n    </span>\n    <span class="pre">\n     D\n    </span>\n    <span class="pre">\n     from\n    </span>\n    <span class="pre">\n     dict/iterable\n    </span>\n    <span class="pre">\n     E\n    </span>\n    <span class="pre">\n     and\n    </span>\n    <span class="pre">\n     F.\n    </span>\n   </span>\n  </span>\n  <a class="headerlink" href="#flask.sessions.NullSession.update" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   If E is present and has a .keys() method, then does:  for k in E: D[k] = E[k]\nIf E is present and lacks a .keys() method, then does:  for k, v in E: D[k] = v\nIn either case, this is followed by: for k in F:  D[k] = F[k]\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        args\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        kwargs\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     te.NoReturn\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Test Client",
    type: ["py", "method"],
    name: "open",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.testing.FlaskClient.open">\n  <span class="sig-name descname">\n   <span class="pre">\n    open\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="o">\n    <span class="pre">\n     *\n    </span>\n   </span>\n   <span class="n">\n    <span class="pre">\n     args\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     buffered\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     False\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     follow_redirects\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     False\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="o">\n    <span class="pre">\n     **\n    </span>\n   </span>\n   <span class="n">\n    <span class="pre">\n     kwargs\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.testing.FlaskClient.open" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Generate an environ dict from the given arguments, make a\nrequest to the application using it, and return the response.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        args\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 Passed to\n       <code class="xref py py-class docutils literal notranslate">\n        <span class="pre">\n         EnvironBuilder\n        </span>\n       </code>\n       to create the\nenviron for the request. If a single arg is passed, it can\nbe an existing\n       <code class="xref py py-class docutils literal notranslate">\n        <span class="pre">\n         EnvironBuilder\n        </span>\n       </code>\n       or an environ dict.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        buffered\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/functions.html#bool" title="(in Python v3.11)">\n        <em>\n         bool\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 Convert the iterator returned by the app into\na list. If the iterator has a\n       <code class="docutils literal notranslate">\n        <span class="pre">\n         close()\n        </span>\n       </code>\n       method, it is\ncalled automatically.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        follow_redirects\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/functions.html#bool" title="(in Python v3.11)">\n        <em>\n         bool\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 Make additional requests to follow HTTP\nredirects until a non-redirect status is returned.\n       <code class="xref py py-attr docutils literal notranslate">\n        <span class="pre">\n         TestResponse.history\n        </span>\n       </code>\n       lists the intermediate\nresponses.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        kwargs\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     TestResponse\n    </p>\n   </dd>\n  </dl>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionchanged">\n    <p>\n     <span class="versionmodified changed">\n      Changed in version 2.1:\n     </span>\n     Removed the\n     <code class="docutils literal notranslate">\n      <span class="pre">\n       as_tuple\n      </span>\n     </code>\n     parameter.\n    </p>\n   </div>\n   <div class="versionchanged">\n    <p>\n     <span class="versionmodified changed">\n      Changed in version 2.0:\n     </span>\n     <code class="docutils literal notranslate">\n      <span class="pre">\n       as_tuple\n      </span>\n     </code>\n     is deprecated and will be removed in Werkzeug\n2.1. Use\n     <code class="xref py py-attr docutils literal notranslate">\n      <span class="pre">\n       TestResponse.request\n      </span>\n     </code>\n     and\n     <code class="docutils literal notranslate">\n      <span class="pre">\n       request.environ\n      </span>\n     </code>\n     instead.\n    </p>\n   </div>\n   <div class="versionchanged">\n    <p>\n     <span class="versionmodified changed">\n      Changed in version 2.0:\n     </span>\n     The request input stream is closed when calling\n     <code class="docutils literal notranslate">\n      <span class="pre">\n       response.close()\n      </span>\n     </code>\n     . Input streams for redirects are\nautomatically closed.\n    </p>\n   </div>\n   <div class="versionchanged">\n    <p>\n     <span class="versionmodified changed">\n      Changed in version 0.5:\n     </span>\n     If a dict is provided as file in the dict for the\n     <code class="docutils literal notranslate">\n      <span class="pre">\n       data\n      </span>\n     </code>\n     parameter the content type has to be called\n     <code class="docutils literal notranslate">\n      <span class="pre">\n       content_type\n      </span>\n     </code>\n     instead of\n     <code class="docutils literal notranslate">\n      <span class="pre">\n       mimetype\n      </span>\n     </code>\n     . This change was made for\nconsistency with\n     <code class="xref py py-class docutils literal notranslate">\n      <span class="pre">\n       werkzeug.FileWrapper\n      </span>\n     </code>\n     .\n    </p>\n   </div>\n   <div class="versionchanged">\n    <p>\n     <span class="versionmodified changed">\n      Changed in version 0.5:\n     </span>\n     Added the\n     <code class="docutils literal notranslate">\n      <span class="pre">\n       follow_redirects\n      </span>\n     </code>\n     parameter.\n    </p>\n   </div>\n  </details>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Test Client",
    type: ["py", "method"],
    name: "session_transaction",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.testing.FlaskClient.session_transaction">\n  <span class="sig-name descname">\n   <span class="pre">\n    session_transaction\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="o">\n    <span class="pre">\n     *\n    </span>\n   </span>\n   <span class="n">\n    <span class="pre">\n     args\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="o">\n    <span class="pre">\n     **\n    </span>\n   </span>\n   <span class="n">\n    <span class="pre">\n     kwargs\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.testing.FlaskClient.session_transaction" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   When used in combination with a\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     with\n    </span>\n   </code>\n   statement this opens a\nsession transaction.  This can be used to modify the session that\nthe test client uses.  Once the\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     with\n    </span>\n   </code>\n   block is left the session is\nstored back.\n  </p>\n  <div class="highlight-default notranslate">\n   <div class="highlight">\n    <pre><span></span><span class="k">with</span> <span class="n">client</span><span class="o">.</span><span class="n">session_transaction</span><span class="p">()</span> <span class="k">as</span> <span class="n">session</span><span class="p">:</span>\n    <span class="n">session</span><span class="p">[</span><span class="s1">\'value\'</span><span class="p">]</span> <span class="o">=</span> <span class="mi">42</span>\n</pre>\n   </div>\n  </div>\n  <p>\n   Internally this is implemented by going through a temporary test\nrequest context and since session handling could depend on\nrequest variables this function accepts the same arguments as\n   <a class="reference internal" href="#flask.Flask.test_request_context" title="flask.Flask.test_request_context">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      test_request_context()\n     </span>\n    </code>\n   </a>\n   which are directly\npassed through.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        args\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        kwargs\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Generator" title="(in Python v3.11)">\n      <em>\n       Generator\n      </em>\n     </a>\n     [\n     <a class="reference internal" href="#flask.sessions.SessionMixin" title="flask.sessions.SessionMixin">\n      flask.sessions.SessionMixin\n     </a>\n     , None, None]\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Test CLI Runner",
    type: ["py", "method"],
    name: "invoke",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.testing.FlaskCliRunner.invoke">\n  <span class="sig-name descname">\n   <span class="pre">\n    invoke\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     cli\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     None\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     args\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     None\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="o">\n    <span class="pre">\n     **\n    </span>\n   </span>\n   <span class="n">\n    <span class="pre">\n     kwargs\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.testing.FlaskCliRunner.invoke" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Invokes a CLI command in an isolated environment. See\n   <a class="reference external" href="https://click.palletsprojects.com/en/8.1.x/api/#click.testing.CliRunner.invoke" title="(in Click v8.1.x)">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      CliRunner.invoke\n     </span>\n    </code>\n   </a>\n   for\nfull method documentation. See\n   <a class="reference internal" href="../testing/#testing-cli">\n    <span class="std std-ref">\n     Running Commands with the CLI Runner\n    </span>\n   </a>\n   for examples.\n  </p>\n  <p>\n   If the\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     obj\n    </span>\n   </code>\n   argument is not given, passes an instance of\n   <a class="reference internal" href="#flask.cli.ScriptInfo" title="flask.cli.ScriptInfo">\n    <code class="xref py py-class docutils literal notranslate">\n     <span class="pre">\n      ScriptInfo\n     </span>\n    </code>\n   </a>\n   that knows how to load the Flask\napp being tested.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        cli\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n        <em>\n         Optional\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       ) \u00e2\u0080\u0093 Command object to invoke. Default is the app\u00e2\u0080\u0099s\n       <code class="xref py py-attr docutils literal notranslate">\n        <span class="pre">\n         cli\n        </span>\n       </code>\n       group.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        args\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n        <em>\n         Optional\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       ) \u00e2\u0080\u0093 List of strings to invoke the command with.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        kwargs\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Returns\n   </dt>\n   <dd class="field-even">\n    <p>\n     a\n     <a class="reference external" href="https://click.palletsprojects.com/en/8.1.x/api/#click.testing.Result" title="(in Click v8.1.x)">\n      <code class="xref py py-class docutils literal notranslate">\n       <span class="pre">\n        Result\n       </span>\n      </code>\n     </a>\n     object.\n    </p>\n   </dd>\n   <dt class="field-odd">\n    Return type\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Globals",
    type: ["py", "method"],
    name: "get",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.ctx._AppCtxGlobals.get">\n  <span class="sig-name descname">\n   <span class="pre">\n    get\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     name\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     default\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     None\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.ctx._AppCtxGlobals.get" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Get an attribute by name, or a default value. Like\n   <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#dict.get" title="(in Python v3.11)">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      dict.get()\n     </span>\n    </code>\n   </a>\n   .\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        name\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 Name of attribute to get.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        default\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n        <em>\n         Optional\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       ) \u00e2\u0080\u0093 Value to return if the attribute is not present.\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n    </p>\n   </dd>\n  </dl>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.10.\n     </span>\n    </p>\n   </div>\n  </details>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Globals",
    type: ["py", "method"],
    name: "pop",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.ctx._AppCtxGlobals.pop">\n  <span class="sig-name descname">\n   <span class="pre">\n    pop\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     name\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     default=&lt;object\n    </span>\n    <span class="pre">\n     object&gt;\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.ctx._AppCtxGlobals.pop" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Get and remove an attribute by name. Like\n   <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#dict.pop" title="(in Python v3.11)">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      dict.pop()\n     </span>\n    </code>\n   </a>\n   .\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        name\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 Name of attribute to pop.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        default\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 Value to return if the attribute is not present,\ninstead of raising a\n       <code class="docutils literal notranslate">\n        <span class="pre">\n         KeyError\n        </span>\n       </code>\n       .\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n    </p>\n   </dd>\n  </dl>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.11.\n     </span>\n    </p>\n   </div>\n  </details>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Application Globals",
    type: ["py", "method"],
    name: "setdefault",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.ctx._AppCtxGlobals.setdefault">\n  <span class="sig-name descname">\n   <span class="pre">\n    setdefault\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     name\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     default\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     None\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.ctx._AppCtxGlobals.setdefault" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Get the value of an attribute if it is present, otherwise\nset and return a default value. Like\n   <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#dict.setdefault" title="(in Python v3.11)">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      dict.setdefault()\n     </span>\n    </code>\n   </a>\n   .\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        name\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 Name of attribute to get.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        default\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n        <em>\n         Optional\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       ) \u00e2\u0080\u0093 Value to set and return if the attribute is not\npresent.\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n    </p>\n   </dd>\n  </dl>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.11.\n     </span>\n    </p>\n   </div>\n  </details>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Useful Functions and Classes",
    type: ["py", "method"],
    name: "escape",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Markup.escape">\n  <em class="property">\n   <span class="pre">\n    classmethod\n   </span>\n   <span class="w">\n   </span>\n  </em>\n  <span class="sig-name descname">\n   <span class="pre">\n    escape\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     s\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Markup.escape" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Escape a string. Calls\n   <a class="reference internal" href="#flask.escape" title="flask.escape">\n    <code class="xref py py-func docutils literal notranslate">\n     <span class="pre">\n      escape()\n     </span>\n    </code>\n   </a>\n   and ensures that for\nsubclasses the correct type is returned.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      s\n     </strong>\n     (\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference internal" href="#flask.Markup" title="markupsafe.Markup">\n      markupsafe.Markup\n     </a>\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Useful Functions and Classes",
    type: ["py", "method"],
    name: "striptags",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Markup.striptags">\n  <span class="sig-name descname">\n   <span class="pre">\n    striptags\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Markup.striptags" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   <a class="reference internal" href="#flask.Markup.unescape" title="flask.Markup.unescape">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      unescape()\n     </span>\n    </code>\n   </a>\n   the markup, remove tags, and normalize\nwhitespace to single spaces.\n  </p>\n  <div class="doctest highlight-default notranslate">\n   <div class="highlight">\n    <pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">Markup</span><span class="p">(</span><span class="s2">"Main &amp;raquo;        &lt;em&gt;About&lt;/em&gt;"</span><span class="p">)</span><span class="o">.</span><span class="n">striptags</span><span class="p">()</span>\n<span class="go">\'Main \u00c2\u00bb About\'</span>\n</pre>\n   </div>\n  </div>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Return type\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Useful Functions and Classes",
    type: ["py", "method"],
    name: "unescape",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Markup.unescape">\n  <span class="sig-name descname">\n   <span class="pre">\n    unescape\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Markup.unescape" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Convert escaped markup back into a text string. This replaces\nHTML entities with the characters they represent.\n  </p>\n  <div class="doctest highlight-default notranslate">\n   <div class="highlight">\n    <pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">Markup</span><span class="p">(</span><span class="s2">"Main &amp;raquo; &lt;em&gt;About&lt;/em&gt;"</span><span class="p">)</span><span class="o">.</span><span class="n">unescape</span><span class="p">()</span>\n<span class="go">\'Main \u00c2\u00bb &lt;em&gt;About&lt;/em&gt;\'</span>\n</pre>\n   </div>\n  </div>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Return type\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "JSON Support",
    type: ["py", "method"],
    name: "dumps",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.json.provider.JSONProvider.dumps">\n  <span class="sig-name descname">\n   <span class="pre">\n    dumps\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     obj\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="o">\n    <span class="pre">\n     **\n    </span>\n   </span>\n   <span class="n">\n    <span class="pre">\n     kwargs\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.json.provider.JSONProvider.dumps" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Serialize data as JSON.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        obj\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 The data to serialize.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        kwargs\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 May be passed to the underlying JSON library.\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "JSON Support",
    type: ["py", "method"],
    name: "dump",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.json.provider.JSONProvider.dump">\n  <span class="sig-name descname">\n   <span class="pre">\n    dump\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     obj\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     fp\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="o">\n    <span class="pre">\n     **\n    </span>\n   </span>\n   <span class="n">\n    <span class="pre">\n     kwargs\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.json.provider.JSONProvider.dump" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Serialize data as JSON and write to a file.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        obj\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 The data to serialize.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        fp\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.IO" title="(in Python v3.11)">\n        <em>\n         IO\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       ) \u00e2\u0080\u0093 A file opened for writing text. Should use the UTF-8\nencoding to be valid JSON.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        kwargs\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 May be passed to the underlying JSON library.\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     None\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "JSON Support",
    type: ["py", "method"],
    name: "loads",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.json.provider.JSONProvider.loads">\n  <span class="sig-name descname">\n   <span class="pre">\n    loads\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     s\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="o">\n    <span class="pre">\n     **\n    </span>\n   </span>\n   <span class="n">\n    <span class="pre">\n     kwargs\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.json.provider.JSONProvider.loads" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Deserialize data as JSON.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        s\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        |\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n        <em>\n         bytes\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 Text or UTF-8 bytes.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        kwargs\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 May be passed to the underlying JSON library.\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "JSON Support",
    type: ["py", "method"],
    name: "load",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.json.provider.JSONProvider.load">\n  <span class="sig-name descname">\n   <span class="pre">\n    load\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     fp\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="o">\n    <span class="pre">\n     **\n    </span>\n   </span>\n   <span class="n">\n    <span class="pre">\n     kwargs\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.json.provider.JSONProvider.load" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Deserialize data as JSON read from a file.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        fp\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.IO" title="(in Python v3.11)">\n        <em>\n         IO\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 A file opened for reading text or UTF-8 bytes.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        kwargs\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 May be passed to the underlying JSON library.\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "JSON Support",
    type: ["py", "method"],
    name: "response",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.json.provider.JSONProvider.response">\n  <span class="sig-name descname">\n   <span class="pre">\n    response\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="o">\n    <span class="pre">\n     *\n    </span>\n   </span>\n   <span class="n">\n    <span class="pre">\n     args\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="o">\n    <span class="pre">\n     **\n    </span>\n   </span>\n   <span class="n">\n    <span class="pre">\n     kwargs\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.json.provider.JSONProvider.response" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Serialize the given arguments as JSON, and return a\n   <a class="reference internal" href="#flask.Response" title="flask.Response">\n    <code class="xref py py-class docutils literal notranslate">\n     <span class="pre">\n      Response\n     </span>\n    </code>\n   </a>\n   object with the\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     application/json\n    </span>\n   </code>\n   mimetype.\n  </p>\n  <p>\n   The\n   <a class="reference internal" href="#flask.json.jsonify" title="flask.json.jsonify">\n    <code class="xref py py-func docutils literal notranslate">\n     <span class="pre">\n      jsonify()\n     </span>\n    </code>\n   </a>\n   function calls this method for\nthe current application.\n  </p>\n  <p>\n   Either positional or keyword arguments can be given, not both.\nIf no arguments are given,\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     None\n    </span>\n   </code>\n   is serialized.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        args\n       </strong>\n       (\n       <em>\n        t.Any\n       </em>\n       ) \u00e2\u0080\u0093 A single value to serialize, or multiple values to\ntreat as a list to serialize.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        kwargs\n       </strong>\n       (\n       <em>\n        t.Any\n       </em>\n       ) \u00e2\u0080\u0093 Treat as a dict to serialize.\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference internal" href="#flask.Response" title="flask.Response">\n      Response\n     </a>\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "JSON Support",
    type: ["py", "method"],
    name: "default",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.json.provider.DefaultJSONProvider.default">\n  <em class="property">\n   <span class="pre">\n    static\n   </span>\n   <span class="w">\n   </span>\n  </em>\n  <span class="sig-name descname">\n   <span class="pre">\n    default\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     o\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.json.provider.DefaultJSONProvider.default" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Apply this function to any object that\n   <code class="xref py py-meth docutils literal notranslate">\n    <span class="pre">\n     json.dumps()\n    </span>\n   </code>\n   does\nnot know how to serialize. It should return a valid JSON type or\nraise a\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     TypeError\n    </span>\n   </code>\n   .\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      o\n     </strong>\n     (\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "JSON Support",
    type: ["py", "method"],
    name: "dumps",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.json.provider.DefaultJSONProvider.dumps">\n  <span class="sig-name descname">\n   <span class="pre">\n    dumps\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     obj\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="o">\n    <span class="pre">\n     **\n    </span>\n   </span>\n   <span class="n">\n    <span class="pre">\n     kwargs\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.json.provider.DefaultJSONProvider.dumps" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Serialize data as JSON to a string.\n  </p>\n  <p>\n   Keyword arguments are passed to\n   <a class="reference external" href="https://docs.python.org/3/library/json.html#json.dumps" title="(in Python v3.11)">\n    <code class="xref py py-func docutils literal notranslate">\n     <span class="pre">\n      json.dumps()\n     </span>\n    </code>\n   </a>\n   . Sets some\nparameter defaults from the\n   <a class="reference internal" href="#flask.json.provider.DefaultJSONProvider.default" title="flask.json.provider.DefaultJSONProvider.default">\n    <code class="xref py py-attr docutils literal notranslate">\n     <span class="pre">\n      default\n     </span>\n    </code>\n   </a>\n   ,\n   <a class="reference internal" href="#flask.json.provider.DefaultJSONProvider.ensure_ascii" title="flask.json.provider.DefaultJSONProvider.ensure_ascii">\n    <code class="xref py py-attr docutils literal notranslate">\n     <span class="pre">\n      ensure_ascii\n     </span>\n    </code>\n   </a>\n   , and\n   <a class="reference internal" href="#flask.json.provider.DefaultJSONProvider.sort_keys" title="flask.json.provider.DefaultJSONProvider.sort_keys">\n    <code class="xref py py-attr docutils literal notranslate">\n     <span class="pre">\n      sort_keys\n     </span>\n    </code>\n   </a>\n   attributes.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        obj\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 The data to serialize.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        kwargs\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 Passed to\n       <a class="reference external" href="https://docs.python.org/3/library/json.html#json.dumps" title="(in Python v3.11)">\n        <code class="xref py py-func docutils literal notranslate">\n         <span class="pre">\n          json.dumps()\n         </span>\n        </code>\n       </a>\n       .\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "JSON Support",
    type: ["py", "method"],
    name: "loads",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.json.provider.DefaultJSONProvider.loads">\n  <span class="sig-name descname">\n   <span class="pre">\n    loads\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     s\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="o">\n    <span class="pre">\n     **\n    </span>\n   </span>\n   <span class="n">\n    <span class="pre">\n     kwargs\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.json.provider.DefaultJSONProvider.loads" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Deserialize data as JSON from a string or bytes.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        s\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        |\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n        <em>\n         bytes\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 Text or UTF-8 bytes.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        kwargs\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 Passed to\n       <a class="reference external" href="https://docs.python.org/3/library/json.html#json.loads" title="(in Python v3.11)">\n        <code class="xref py py-func docutils literal notranslate">\n         <span class="pre">\n          json.loads()\n         </span>\n        </code>\n       </a>\n       .\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "JSON Support",
    type: ["py", "method"],
    name: "response",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.json.provider.DefaultJSONProvider.response">\n  <span class="sig-name descname">\n   <span class="pre">\n    response\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="o">\n    <span class="pre">\n     *\n    </span>\n   </span>\n   <span class="n">\n    <span class="pre">\n     args\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="o">\n    <span class="pre">\n     **\n    </span>\n   </span>\n   <span class="n">\n    <span class="pre">\n     kwargs\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.json.provider.DefaultJSONProvider.response" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Serialize the given arguments as JSON, and return a\n   <a class="reference internal" href="#flask.Response" title="flask.Response">\n    <code class="xref py py-class docutils literal notranslate">\n     <span class="pre">\n      Response\n     </span>\n    </code>\n   </a>\n   object with it. The response mimetype\nwill be \u00e2\u0080\u009capplication/json\u00e2\u0080\u009d and can be changed with\n   <a class="reference internal" href="#flask.json.provider.DefaultJSONProvider.mimetype" title="flask.json.provider.DefaultJSONProvider.mimetype">\n    <code class="xref py py-attr docutils literal notranslate">\n     <span class="pre">\n      mimetype\n     </span>\n    </code>\n   </a>\n   .\n  </p>\n  <p>\n   If\n   <a class="reference internal" href="#flask.json.provider.DefaultJSONProvider.compact" title="flask.json.provider.DefaultJSONProvider.compact">\n    <code class="xref py py-attr docutils literal notranslate">\n     <span class="pre">\n      compact\n     </span>\n    </code>\n   </a>\n   is\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     False\n    </span>\n   </code>\n   or debug mode is enabled, the\noutput will be formatted to be easier to read.\n  </p>\n  <p>\n   Either positional or keyword arguments can be given, not both.\nIf no arguments are given,\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     None\n    </span>\n   </code>\n   is serialized.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        args\n       </strong>\n       (\n       <em>\n        t.Any\n       </em>\n       ) \u00e2\u0080\u0093 A single value to serialize, or multiple values to\ntreat as a list to serialize.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        kwargs\n       </strong>\n       (\n       <em>\n        t.Any\n       </em>\n       ) \u00e2\u0080\u0093 Treat as a dict to serialize.\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference internal" href="#flask.Response" title="flask.Response">\n      Response\n     </a>\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "JSON Support",
    type: ["py", "method"],
    name: "default",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.json.JSONEncoder.default">\n  <span class="sig-name descname">\n   <span class="pre">\n    default\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     o\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.json.JSONEncoder.default" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Convert\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     o\n    </span>\n   </code>\n   to a JSON serializable type. See\n   <a class="reference external" href="https://docs.python.org/3/library/json.html#json.JSONEncoder.default" title="(in Python v3.11)">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      json.JSONEncoder.default()\n     </span>\n    </code>\n   </a>\n   . Python does not support\noverriding how basic types like\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     str\n    </span>\n   </code>\n   or\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     list\n    </span>\n   </code>\n   are\nserialized, they are handled before this method.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      o\n     </strong>\n     (\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Configuration",
    type: ["py", "method"],
    name: "from_envvar",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Config.from_envvar">\n  <span class="sig-name descname">\n   <span class="pre">\n    from_envvar\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     variable_name\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     silent\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     False\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Config.from_envvar" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Loads a configuration from an environment variable pointing to\na configuration file.  This is basically just a shortcut with nicer\nerror messages for this line of code:\n  </p>\n  <div class="highlight-default notranslate">\n   <div class="highlight">\n    <pre><span></span><span class="n">app</span><span class="o">.</span><span class="n">config</span><span class="o">.</span><span class="n">from_pyfile</span><span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">environ</span><span class="p">[</span><span class="s1">\'YOURAPPLICATION_SETTINGS\'</span><span class="p">])</span>\n</pre>\n   </div>\n  </div>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        variable_name\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 name of the environment variable\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        silent\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/functions.html#bool" title="(in Python v3.11)">\n        <em>\n         bool\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 set to\n       <code class="docutils literal notranslate">\n        <span class="pre">\n         True\n        </span>\n       </code>\n       if you want silent failure for missing\nfiles.\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Returns\n   </dt>\n   <dd class="field-even">\n    <p>\n     <code class="docutils literal notranslate">\n      <span class="pre">\n       True\n      </span>\n     </code>\n     if the file was loaded successfully.\n    </p>\n   </dd>\n   <dt class="field-odd">\n    Return type\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/functions.html#bool" title="(in Python v3.11)">\n      bool\n     </a>\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Configuration",
    type: ["py", "method"],
    name: "from_file",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Config.from_file">\n  <span class="sig-name descname">\n   <span class="pre">\n    from_file\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     filename\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     load\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     silent\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     False\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Config.from_file" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Update the values in the config from a file that is loaded\nusing the\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     load\n    </span>\n   </code>\n   parameter. The loaded data is passed to the\n   <a class="reference internal" href="#flask.Config.from_mapping" title="flask.Config.from_mapping">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      from_mapping()\n     </span>\n    </code>\n   </a>\n   method.\n  </p>\n  <div class="highlight-python notranslate">\n   <div class="highlight">\n    <pre><span></span><span class="kn">import</span> <span class="nn">json</span>\n<span class="n">app</span><span class="o">.</span><span class="n">config</span><span class="o">.</span><span class="n">from_file</span><span class="p">(</span><span class="s2">"config.json"</span><span class="p">,</span> <span class="n">load</span><span class="o">=</span><span class="n">json</span><span class="o">.</span><span class="n">load</span><span class="p">)</span>\n\n<span class="kn">import</span> <span class="nn">toml</span>\n<span class="n">app</span><span class="o">.</span><span class="n">config</span><span class="o">.</span><span class="n">from_file</span><span class="p">(</span><span class="s2">"config.toml"</span><span class="p">,</span> <span class="n">load</span><span class="o">=</span><span class="n">toml</span><span class="o">.</span><span class="n">load</span><span class="p">)</span>\n</pre>\n   </div>\n  </div>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        filename\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 The path to the data file. This can be an\nabsolute path or relative to the config root path.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        load\n       </strong>\n       (\n       <code class="docutils literal notranslate">\n        <span class="pre">\n         Callable[[Reader],\n        </span>\n        <span class="pre">\n         Mapping]\n        </span>\n       </code>\n       where\n       <code class="docutils literal notranslate">\n        <span class="pre">\n         Reader\n        </span>\n       </code>\n       implements a\n       <code class="docutils literal notranslate">\n        <span class="pre">\n         read\n        </span>\n       </code>\n       method.) \u00e2\u0080\u0093 A callable that takes a file handle and returns a\nmapping of loaded data from the file.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        silent\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/functions.html#bool" title="(in Python v3.11)">\n        <em>\n         bool\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 Ignore the file if it doesn\u00e2\u0080\u0099t exist.\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Returns\n   </dt>\n   <dd class="field-even">\n    <p>\n     <code class="docutils literal notranslate">\n      <span class="pre">\n       True\n      </span>\n     </code>\n     if the file was loaded successfully.\n    </p>\n   </dd>\n   <dt class="field-odd">\n    Return type\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/functions.html#bool" title="(in Python v3.11)">\n      bool\n     </a>\n    </p>\n   </dd>\n  </dl>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 2.0.\n     </span>\n    </p>\n   </div>\n  </details>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Configuration",
    type: ["py", "method"],
    name: "from_mapping",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Config.from_mapping">\n  <span class="sig-name descname">\n   <span class="pre">\n    from_mapping\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     mapping\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     None\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="o">\n    <span class="pre">\n     **\n    </span>\n   </span>\n   <span class="n">\n    <span class="pre">\n     kwargs\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Config.from_mapping" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Updates the config like\n   <code class="xref py py-meth docutils literal notranslate">\n    <span class="pre">\n     update()\n    </span>\n   </code>\n   ignoring items with\nnon-upper keys.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Returns\n   </dt>\n   <dd class="field-odd">\n    <p>\n     Always returns\n     <code class="docutils literal notranslate">\n      <span class="pre">\n       True\n      </span>\n     </code>\n     .\n    </p>\n   </dd>\n   <dt class="field-even">\n    Parameters\n   </dt>\n   <dd class="field-even">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        mapping\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n        <em>\n         Optional\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n        <em>\n         Mapping\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ]\n       </em>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        kwargs\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-odd">\n    Return type\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/functions.html#bool" title="(in Python v3.11)">\n      bool\n     </a>\n    </p>\n   </dd>\n  </dl>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.11.\n     </span>\n    </p>\n   </div>\n  </details>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Configuration",
    type: ["py", "method"],
    name: "from_object",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Config.from_object">\n  <span class="sig-name descname">\n   <span class="pre">\n    from_object\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     obj\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Config.from_object" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Updates the values from the given object.  An object can be of one\nof the following two types:\n  </p>\n  <ul class="simple">\n   <li>\n    <p>\n     a string: in this case the object with that name will be imported\n    </p>\n   </li>\n   <li>\n    <p>\n     an actual object reference: that object is used directly\n    </p>\n   </li>\n  </ul>\n  <p>\n   Objects are usually either modules or classes.\n   <a class="reference internal" href="#flask.Config.from_object" title="flask.Config.from_object">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      from_object()\n     </span>\n    </code>\n   </a>\n   loads only the uppercase attributes of the module/class. A\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     dict\n    </span>\n   </code>\n   object will not work with\n   <a class="reference internal" href="#flask.Config.from_object" title="flask.Config.from_object">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      from_object()\n     </span>\n    </code>\n   </a>\n   because the keys of a\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     dict\n    </span>\n   </code>\n   are not attributes of the\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     dict\n    </span>\n   </code>\n   class.\n  </p>\n  <p>\n   Example of module-based configuration:\n  </p>\n  <div class="highlight-default notranslate">\n   <div class="highlight">\n    <pre><span></span><span class="n">app</span><span class="o">.</span><span class="n">config</span><span class="o">.</span><span class="n">from_object</span><span class="p">(</span><span class="s1">\'yourapplication.default_config\'</span><span class="p">)</span>\n<span class="kn">from</span> <span class="nn">yourapplication</span> <span class="kn">import</span> <span class="n">default_config</span>\n<span class="n">app</span><span class="o">.</span><span class="n">config</span><span class="o">.</span><span class="n">from_object</span><span class="p">(</span><span class="n">default_config</span><span class="p">)</span>\n</pre>\n   </div>\n  </div>\n  <p>\n   Nothing is done to the object before loading. If the object is a\nclass and has\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     @property\n    </span>\n   </code>\n   attributes, it needs to be\ninstantiated before being passed to this method.\n  </p>\n  <p>\n   You should not use this function to load the actual configuration but\nrather configuration defaults.  The actual config should be loaded\nwith\n   <a class="reference internal" href="#flask.Config.from_pyfile" title="flask.Config.from_pyfile">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      from_pyfile()\n     </span>\n    </code>\n   </a>\n   and ideally from a location not within the\npackage because the package might be installed system wide.\n  </p>\n  <p>\n   See\n   <a class="reference internal" href="../config/#config-dev-prod">\n    <span class="std std-ref">\n     Development / Production\n    </span>\n   </a>\n   for an example of class-based configuration\nusing\n   <a class="reference internal" href="#flask.Config.from_object" title="flask.Config.from_object">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      from_object()\n     </span>\n    </code>\n   </a>\n   .\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      obj\n     </strong>\n     (\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/functions.html#object" title="(in Python v3.11)">\n      <em>\n       object\n      </em>\n     </a>\n     <em>\n      ,\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      <em>\n       str\n      </em>\n     </a>\n     <em>\n      ]\n     </em>\n     ) \u00e2\u0080\u0093 an import name or object\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     None\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Configuration",
    type: ["py", "method"],
    name: "from_prefixed_env",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Config.from_prefixed_env">\n  <span class="sig-name descname">\n   <span class="pre">\n    from_prefixed_env\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     prefix=\'FLASK\'\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     *\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     loads=&lt;function\n    </span>\n    <span class="pre">\n     loads&gt;\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Config.from_prefixed_env" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Load any environment variables that start with\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     FLASK_\n    </span>\n   </code>\n   ,\ndropping the prefix from the env key for the config key. Values\nare passed through a loading function to attempt to convert them\nto more specific types than strings.\n  </p>\n  <p>\n   Keys are loaded in\n   <a class="reference external" href="https://docs.python.org/3/library/functions.html#sorted" title="(in Python v3.11)">\n    <code class="xref py py-func docutils literal notranslate">\n     <span class="pre">\n      sorted()\n     </span>\n    </code>\n   </a>\n   order.\n  </p>\n  <p>\n   The default loading function attempts to parse values as any\nvalid JSON type, including dicts and lists.\n  </p>\n  <p>\n   Specific items in nested dicts can be set by separating the\nkeys with double underscores (\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     __\n    </span>\n   </code>\n   ). If an intermediate key\ndoesn\u00e2\u0080\u0099t exist, it will be initialized to an empty dict.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        prefix\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 Load env vars that start with this prefix,\nseparated with an underscore (\n       <code class="docutils literal notranslate">\n        <span class="pre">\n         _\n        </span>\n       </code>\n       ).\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        loads\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Callable" title="(in Python v3.11)">\n        <em>\n         Callable\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       <em>\n        ,\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       ) \u00e2\u0080\u0093 Pass each string value to this function and use\nthe returned value as the config value. If any error is\nraised it is ignored and the value remains a string. The\ndefault is\n       <a class="reference internal" href="#flask.json.loads" title="flask.json.loads">\n        <code class="xref py py-func docutils literal notranslate">\n         <span class="pre">\n          json.loads()\n         </span>\n        </code>\n       </a>\n       .\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/functions.html#bool" title="(in Python v3.11)">\n      bool\n     </a>\n    </p>\n   </dd>\n  </dl>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 2.1.\n     </span>\n    </p>\n   </div>\n  </details>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Configuration",
    type: ["py", "method"],
    name: "from_pyfile",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Config.from_pyfile">\n  <span class="sig-name descname">\n   <span class="pre">\n    from_pyfile\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     filename\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     silent\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     False\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Config.from_pyfile" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Updates the values in the config from a Python file.  This function\nbehaves as if the file was imported as module with the\n   <a class="reference internal" href="#flask.Config.from_object" title="flask.Config.from_object">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      from_object()\n     </span>\n    </code>\n   </a>\n   function.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        filename\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 the filename of the config.  This can either be an\nabsolute filename or a filename relative to the\nroot path.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        silent\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/functions.html#bool" title="(in Python v3.11)">\n        <em>\n         bool\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 set to\n       <code class="docutils literal notranslate">\n        <span class="pre">\n         True\n        </span>\n       </code>\n       if you want silent failure for missing\nfiles.\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Returns\n   </dt>\n   <dd class="field-even">\n    <p>\n     <code class="docutils literal notranslate">\n      <span class="pre">\n       True\n      </span>\n     </code>\n     if the file was loaded successfully.\n    </p>\n   </dd>\n   <dt class="field-odd">\n    Return type\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/functions.html#bool" title="(in Python v3.11)">\n      bool\n     </a>\n    </p>\n   </dd>\n  </dl>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.7:\n     </span>\n     <cite>\n      silent\n     </cite>\n     parameter.\n    </p>\n   </div>\n  </details>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Configuration",
    type: ["py", "method"],
    name: "get_namespace",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.Config.get_namespace">\n  <span class="sig-name descname">\n   <span class="pre">\n    get_namespace\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     namespace\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     lowercase\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     True\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     trim_namespace\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     True\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.Config.get_namespace" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Returns a dictionary containing a subset of configuration options\nthat match the specified namespace/prefix. Example usage:\n  </p>\n  <div class="highlight-default notranslate">\n   <div class="highlight">\n    <pre><span></span><span class="n">app</span><span class="o">.</span><span class="n">config</span><span class="p">[</span><span class="s1">\'IMAGE_STORE_TYPE\'</span><span class="p">]</span> <span class="o">=</span> <span class="s1">\'fs\'</span>\n<span class="n">app</span><span class="o">.</span><span class="n">config</span><span class="p">[</span><span class="s1">\'IMAGE_STORE_PATH\'</span><span class="p">]</span> <span class="o">=</span> <span class="s1">\'/var/app/images\'</span>\n<span class="n">app</span><span class="o">.</span><span class="n">config</span><span class="p">[</span><span class="s1">\'IMAGE_STORE_BASE_URL\'</span><span class="p">]</span> <span class="o">=</span> <span class="s1">\'http://img.website.com\'</span>\n<span class="n">image_store_config</span> <span class="o">=</span> <span class="n">app</span><span class="o">.</span><span class="n">config</span><span class="o">.</span><span class="n">get_namespace</span><span class="p">(</span><span class="s1">\'IMAGE_STORE_\'</span><span class="p">)</span>\n</pre>\n   </div>\n  </div>\n  <p>\n   The resulting dictionary\n   <cite>\n    image_store_config\n   </cite>\n   would look like:\n  </p>\n  <div class="highlight-default notranslate">\n   <div class="highlight">\n    <pre><span></span><span class="p">{</span>\n    <span class="s1">\'type\'</span><span class="p">:</span> <span class="s1">\'fs\'</span><span class="p">,</span>\n    <span class="s1">\'path\'</span><span class="p">:</span> <span class="s1">\'/var/app/images\'</span><span class="p">,</span>\n    <span class="s1">\'base_url\'</span><span class="p">:</span> <span class="s1">\'http://img.website.com\'</span>\n<span class="p">}</span>\n</pre>\n   </div>\n  </div>\n  <p>\n   This is often useful when configuration options map directly to\nkeyword arguments in functions or class constructors.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        namespace\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 a configuration namespace\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        lowercase\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/functions.html#bool" title="(in Python v3.11)">\n        <em>\n         bool\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 a flag indicating if the keys of the resulting\ndictionary should be lowercase\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        trim_namespace\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/functions.html#bool" title="(in Python v3.11)">\n        <em>\n         bool\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 a flag indicating if the keys of the resulting\ndictionary should not include the namespace\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Dict" title="(in Python v3.11)">\n      <em>\n       Dict\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ]\n    </p>\n   </dd>\n  </dl>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.11.\n     </span>\n    </p>\n   </div>\n  </details>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Useful Internals",
    type: ["py", "method"],
    name: "copy",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.ctx.RequestContext.copy">\n  <span class="sig-name descname">\n   <span class="pre">\n    copy\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.ctx.RequestContext.copy" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Creates a copy of this request context with the same request object.\nThis can be used to move a request context to a different greenlet.\nBecause the actual request object is the same this cannot be used to\nmove a request context to a different thread unless access to the\nrequest object is locked.\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionchanged">\n    <p>\n     <span class="versionmodified changed">\n      Changed in version 1.1:\n     </span>\n     The current session object is used instead of reloading the original\ndata. This prevents\n     <cite>\n      flask.session\n     </cite>\n     pointing to an out-of-date object.\n    </p>\n   </div>\n   <div class="versionadded">\n    <p>\n     <span class="versionmodified added">\n      New in version 0.10.\n     </span>\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Return type\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <a class="reference internal" href="#flask.ctx.RequestContext" title="flask.ctx.RequestContext">\n      flask.ctx.RequestContext\n     </a>\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Useful Internals",
    type: ["py", "method"],
    name: "match_request",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.ctx.RequestContext.match_request">\n  <span class="sig-name descname">\n   <span class="pre">\n    match_request\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.ctx.RequestContext.match_request" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Can be overridden by a subclass to hook into the matching\nof the request.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Return type\n   </dt>\n   <dd class="field-odd">\n    <p>\n     None\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Useful Internals",
    type: ["py", "method"],
    name: "pop",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.ctx.RequestContext.pop">\n  <span class="sig-name descname">\n   <span class="pre">\n    pop\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     exc=&lt;object\n    </span>\n    <span class="pre">\n     object&gt;\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.ctx.RequestContext.pop" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Pops the request context and unbinds it by doing that.  This will\nalso trigger the execution of functions registered by the\n   <a class="reference internal" href="#flask.Flask.teardown_request" title="flask.Flask.teardown_request">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      teardown_request()\n     </span>\n    </code>\n   </a>\n   decorator.\n  </p>\n  <details class="changelog">\n   <summary>\n    Changelog\n   </summary>\n   <div class="versionchanged">\n    <p>\n     <span class="versionmodified changed">\n      Changed in version 0.9:\n     </span>\n     Added the\n     <cite>\n      exc\n     </cite>\n     argument.\n    </p>\n   </div>\n  </details>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      exc\n     </strong>\n     (\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n      <em>\n       Optional\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/exceptions.html#BaseException" title="(in Python v3.11)">\n      <em>\n       BaseException\n      </em>\n     </a>\n     <em>\n      ]\n     </em>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     None\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Useful Internals",
    type: ["py", "method"],
    name: "pop",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.ctx.AppContext.pop">\n  <span class="sig-name descname">\n   <span class="pre">\n    pop\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     exc=&lt;object\n    </span>\n    <span class="pre">\n     object&gt;\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.ctx.AppContext.pop" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Pops the app context.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      exc\n     </strong>\n     (\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n      <em>\n       Optional\n      </em>\n     </a>\n     <em>\n      [\n     </em>\n     <a class="reference external" href="https://docs.python.org/3/library/exceptions.html#BaseException" title="(in Python v3.11)">\n      <em>\n       BaseException\n      </em>\n     </a>\n     <em>\n      ]\n     </em>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     None\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Useful Internals",
    type: ["py", "method"],
    name: "push",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.ctx.AppContext.push">\n  <span class="sig-name descname">\n   <span class="pre">\n    push\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.ctx.AppContext.push" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Binds the app context to the current context.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Return type\n   </dt>\n   <dd class="field-odd">\n    <p>\n     None\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Useful Internals",
    type: ["py", "method"],
    name: "add_url_rule",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.blueprints.BlueprintSetupState.add_url_rule">\n  <span class="sig-name descname">\n   <span class="pre">\n    add_url_rule\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     rule\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     endpoint\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     None\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     view_func\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     None\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="o">\n    <span class="pre">\n     **\n    </span>\n   </span>\n   <span class="n">\n    <span class="pre">\n     options\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.blueprints.BlueprintSetupState.add_url_rule" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   A helper method to register a rule (and optionally a view function)\nto the application.  The endpoint is automatically prefixed with the\nblueprint\u00e2\u0080\u0099s name.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        rule\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        endpoint\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n        <em>\n         Optional\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        view_func\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n        <em>\n         Optional\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Callable" title="(in Python v3.11)">\n        <em>\n         Callable\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        options\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     None\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Signals",
    type: ["py", "method"],
    name: "signal",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.signals.Namespace.signal">\n  <span class="sig-name descname">\n   <span class="pre">\n    signal\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     name\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     doc\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     None\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.signals.Namespace.signal" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Creates a new signal for this namespace if blinker is available,\notherwise returns a fake signal that has a send method that will\ndo nothing but will fail with a\n   <a class="reference external" href="https://docs.python.org/3/library/exceptions.html#RuntimeError" title="(in Python v3.11)">\n    <code class="xref py py-exc docutils literal notranslate">\n     <span class="pre">\n      RuntimeError\n     </span>\n    </code>\n   </a>\n   for all other\noperations, including connecting.\n  </p>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Class-Based Views",
    type: ["py", "method"],
    name: "as_view",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.views.View.as_view">\n  <em class="property">\n   <span class="pre">\n    classmethod\n   </span>\n   <span class="w">\n   </span>\n  </em>\n  <span class="sig-name descname">\n   <span class="pre">\n    as_view\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     name\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="o">\n    <span class="pre">\n     *\n    </span>\n   </span>\n   <span class="n">\n    <span class="pre">\n     class_args\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="o">\n    <span class="pre">\n     **\n    </span>\n   </span>\n   <span class="n">\n    <span class="pre">\n     class_kwargs\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.views.View.as_view" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Convert the class into a view function that can be registered\nfor a route.\n  </p>\n  <p>\n   By default, the generated view will create a new instance of the\nview class for every request and call its\n   <a class="reference internal" href="#flask.views.View.dispatch_request" title="flask.views.View.dispatch_request">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      dispatch_request()\n     </span>\n    </code>\n   </a>\n   method. If the view class sets\n   <a class="reference internal" href="#flask.views.View.init_every_request" title="flask.views.View.init_every_request">\n    <code class="xref py py-attr docutils literal notranslate">\n     <span class="pre">\n      init_every_request\n     </span>\n    </code>\n   </a>\n   to\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     False\n    </span>\n   </code>\n   , the same instance will\nbe used for every request.\n  </p>\n  <p>\n   Except for\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     name\n    </span>\n   </code>\n   , all other arguments passed to this method\nare forwarded to the view class\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     __init__\n    </span>\n   </code>\n   method.\n  </p>\n  <div class="versionchanged">\n   <p>\n    <span class="versionmodified changed">\n     Changed in version 2.2:\n    </span>\n    Added the\n    <code class="docutils literal notranslate">\n     <span class="pre">\n      init_every_request\n     </span>\n    </code>\n    class attribute.\n   </p>\n  </div>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        name\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        class_args\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        class_kwargs\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Callable" title="(in Python v3.11)">\n      <em>\n       Callable\n      </em>\n     </a>\n     [[\u00e2\u0080\u00a6],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference internal" href="#flask.Response" title="flask.Response">\n      Response\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n      <em>\n       Mapping\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference internal" href="#flask.Response" title="flask.Response">\n      Response\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n      <em>\n       Mapping\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ]],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [Headers,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n      <em>\n       Mapping\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     , \u00e2\u0080\u00a6]]],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Sequence" title="(in Python v3.11)">\n      <em>\n       Sequence\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     , \u00e2\u0080\u00a6]]]]]],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference internal" href="#flask.Response" title="flask.Response">\n      Response\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n      <em>\n       Mapping\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ]],\n     <a class="reference external" href="https://docs.python.org/3/library/functions.html#int" title="(in Python v3.11)">\n      int\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference internal" href="#flask.Response" title="flask.Response">\n      Response\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n      <em>\n       Mapping\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ]],\n     <a class="reference external" href="https://docs.python.org/3/library/functions.html#int" title="(in Python v3.11)">\n      int\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [Headers,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n      <em>\n       Mapping\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     , \u00e2\u0080\u00a6]]],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Sequence" title="(in Python v3.11)">\n      <em>\n       Sequence\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     , \u00e2\u0080\u00a6]]]]]], WSGIApplication]],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Callable" title="(in Python v3.11)">\n      <em>\n       Callable\n      </em>\n     </a>\n     [[\u00e2\u0080\u00a6],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Awaitable" title="(in Python v3.11)">\n      <em>\n       Awaitable\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference internal" href="#flask.Response" title="flask.Response">\n      Response\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n      <em>\n       Mapping\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference internal" href="#flask.Response" title="flask.Response">\n      Response\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n      <em>\n       Mapping\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ]],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [Headers,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n      <em>\n       Mapping\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     , \u00e2\u0080\u00a6]]],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Sequence" title="(in Python v3.11)">\n      <em>\n       Sequence\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     , \u00e2\u0080\u00a6]]]]]],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference internal" href="#flask.Response" title="flask.Response">\n      Response\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n      <em>\n       Mapping\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ]],\n     <a class="reference external" href="https://docs.python.org/3/library/functions.html#int" title="(in Python v3.11)">\n      int\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference internal" href="#flask.Response" title="flask.Response">\n      Response\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n      <em>\n       Mapping\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ]],\n     <a class="reference external" href="https://docs.python.org/3/library/functions.html#int" title="(in Python v3.11)">\n      int\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [Headers,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n      <em>\n       Mapping\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     , \u00e2\u0080\u00a6]]],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Sequence" title="(in Python v3.11)">\n      <em>\n       Sequence\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     , \u00e2\u0080\u00a6]]]]]], WSGIApplication]]]]\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Class-Based Views",
    type: ["py", "method"],
    name: "dispatch_request",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.views.View.dispatch_request">\n  <span class="sig-name descname">\n   <span class="pre">\n    dispatch_request\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.views.View.dispatch_request" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   The actual view function behavior. Subclasses must override\nthis and return a valid response. Any variables from the URL\nrule are passed as keyword arguments.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Return type\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference internal" href="#flask.Response" title="flask.Response">\n      Response\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n      <em>\n       Mapping\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference internal" href="#flask.Response" title="flask.Response">\n      Response\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n      <em>\n       Mapping\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ]],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [Headers,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n      <em>\n       Mapping\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     , \u00e2\u0080\u00a6]]],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Sequence" title="(in Python v3.11)">\n      <em>\n       Sequence\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     , \u00e2\u0080\u00a6]]]]]],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference internal" href="#flask.Response" title="flask.Response">\n      Response\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n      <em>\n       Mapping\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ]],\n     <a class="reference external" href="https://docs.python.org/3/library/functions.html#int" title="(in Python v3.11)">\n      int\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference internal" href="#flask.Response" title="flask.Response">\n      Response\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n      <em>\n       Mapping\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ]],\n     <a class="reference external" href="https://docs.python.org/3/library/functions.html#int" title="(in Python v3.11)">\n      int\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [Headers,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n      <em>\n       Mapping\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     , \u00e2\u0080\u00a6]]],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Sequence" title="(in Python v3.11)">\n      <em>\n       Sequence\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     , \u00e2\u0080\u00a6]]]]]], WSGIApplication]\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Class-Based Views",
    type: ["py", "method"],
    name: "dispatch_request",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.views.MethodView.dispatch_request">\n  <span class="sig-name descname">\n   <span class="pre">\n    dispatch_request\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="o">\n    <span class="pre">\n     **\n    </span>\n   </span>\n   <span class="n">\n    <span class="pre">\n     kwargs\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.views.MethodView.dispatch_request" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   The actual view function behavior. Subclasses must override\nthis and return a valid response. Any variables from the URL\nrule are passed as keyword arguments.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <strong>\n      kwargs\n     </strong>\n     (\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ) \u00e2\u0080\u0093\n    </p>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference internal" href="#flask.Response" title="flask.Response">\n      Response\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n      <em>\n       Mapping\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference internal" href="#flask.Response" title="flask.Response">\n      Response\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n      <em>\n       Mapping\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ]],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [Headers,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n      <em>\n       Mapping\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     , \u00e2\u0080\u00a6]]],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Sequence" title="(in Python v3.11)">\n      <em>\n       Sequence\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     , \u00e2\u0080\u00a6]]]]]],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference internal" href="#flask.Response" title="flask.Response">\n      Response\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n      <em>\n       Mapping\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ]],\n     <a class="reference external" href="https://docs.python.org/3/library/functions.html#int" title="(in Python v3.11)">\n      int\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference internal" href="#flask.Response" title="flask.Response">\n      Response\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n      <em>\n       Mapping\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n      <em>\n       Any\n      </em>\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Iterator" title="(in Python v3.11)">\n      <em>\n       Iterator\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#bytes" title="(in Python v3.11)">\n      bytes\n     </a>\n     ]],\n     <a class="reference external" href="https://docs.python.org/3/library/functions.html#int" title="(in Python v3.11)">\n      int\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [Headers,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Mapping" title="(in Python v3.11)">\n      <em>\n       Mapping\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     , \u00e2\u0080\u00a6]]],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Sequence" title="(in Python v3.11)">\n      <em>\n       Sequence\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Union" title="(in Python v3.11)">\n      <em>\n       Union\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ,\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.List" title="(in Python v3.11)">\n      <em>\n       List\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ],\n     <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Tuple" title="(in Python v3.11)">\n      <em>\n       Tuple\n      </em>\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     , \u00e2\u0080\u00a6]]]]]], WSGIApplication]\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Command Line Interface",
    type: ["py", "method"],
    name: "get_command",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.cli.FlaskGroup.get_command">\n  <span class="sig-name descname">\n   <span class="pre">\n    get_command\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     ctx\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     name\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.cli.FlaskGroup.get_command" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Given a context and a command name, this returns a\n   <code class="xref py py-class docutils literal notranslate">\n    <span class="pre">\n     Command\n    </span>\n   </code>\n   object if it exists or returns\n   <cite>\n    None\n   </cite>\n   .\n  </p>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Command Line Interface",
    type: ["py", "method"],
    name: "list_commands",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.cli.FlaskGroup.list_commands">\n  <span class="sig-name descname">\n   <span class="pre">\n    list_commands\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     ctx\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.cli.FlaskGroup.list_commands" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Returns a list of subcommand names in the order they should\nappear.\n  </p>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Command Line Interface",
    type: ["py", "method"],
    name: "make_context",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.cli.FlaskGroup.make_context">\n  <span class="sig-name descname">\n   <span class="pre">\n    make_context\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     info_name\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     args\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     parent\n    </span>\n   </span>\n   <span class="o">\n    <span class="pre">\n     =\n    </span>\n   </span>\n   <span class="default_value">\n    <span class="pre">\n     None\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="o">\n    <span class="pre">\n     **\n    </span>\n   </span>\n   <span class="n">\n    <span class="pre">\n     extra\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.cli.FlaskGroup.make_context" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   This function when given an info name and arguments will kick\noff the parsing and create a new\n   <code class="xref py py-class docutils literal notranslate">\n    <span class="pre">\n     Context\n    </span>\n   </code>\n   .  It does not\ninvoke the actual command callback though.\n  </p>\n  <p>\n   To quickly customize the context class used without overriding\nthis method, set the\n   <code class="xref py py-attr docutils literal notranslate">\n    <span class="pre">\n     context_class\n    </span>\n   </code>\n   attribute.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        info_name\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        |\n       </em>\n       <em>\n        None\n       </em>\n       ) \u00e2\u0080\u0093 the info name for this invocation.  Generally this\nis the most descriptive name for the script or\ncommand.  For the toplevel script it\u00e2\u0080\u0099s usually\nthe name of the script, for commands below it it\u00e2\u0080\u0099s\nthe name of the command.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        args\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#list" title="(in Python v3.11)">\n        <em>\n         list\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       ) \u00e2\u0080\u0093 the arguments to parse as list of strings.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        parent\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Optional" title="(in Python v3.11)">\n        <em>\n         Optional\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://click.palletsprojects.com/en/8.1.x/api/#click.Context" title="(in Click v8.1.x)">\n        <em>\n         click.core.Context\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       ) \u00e2\u0080\u0093 the parent context if available.\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        extra\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Any" title="(in Python v3.11)">\n        <em>\n         Any\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093 extra keyword arguments forwarded to the context\nconstructor.\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://click.palletsprojects.com/en/8.1.x/api/#click.Context" title="(in Click v8.1.x)">\n      click.core.Context\n     </a>\n    </p>\n   </dd>\n  </dl>\n  <div class="versionchanged">\n   <p>\n    <span class="versionmodified changed">\n     Changed in version 8.0:\n    </span>\n    Added the\n    <code class="xref py py-attr docutils literal notranslate">\n     <span class="pre">\n      context_class\n     </span>\n    </code>\n    attribute.\n   </p>\n  </div>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Command Line Interface",
    type: ["py", "method"],
    name: "parse_args",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.cli.FlaskGroup.parse_args">\n  <span class="sig-name descname">\n   <span class="pre">\n    parse_args\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     ctx\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="n">\n    <span class="pre">\n     args\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.cli.FlaskGroup.parse_args" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Given a context and a list of arguments this creates the parser\nand parses the arguments, then modifies the context as necessary.\nThis is automatically invoked by\n   <a class="reference internal" href="#flask.cli.FlaskGroup.make_context" title="flask.cli.FlaskGroup.make_context">\n    <code class="xref py py-meth docutils literal notranslate">\n     <span class="pre">\n      make_context()\n     </span>\n    </code>\n   </a>\n   .\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Parameters\n   </dt>\n   <dd class="field-odd">\n    <ul class="simple">\n     <li>\n      <p>\n       <strong>\n        ctx\n       </strong>\n       (\n       <a class="reference external" href="https://click.palletsprojects.com/en/8.1.x/api/#click.Context" title="(in Click v8.1.x)">\n        <em>\n         click.core.Context\n        </em>\n       </a>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n     <li>\n      <p>\n       <strong>\n        args\n       </strong>\n       (\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#list" title="(in Python v3.11)">\n        <em>\n         list\n        </em>\n       </a>\n       <em>\n        [\n       </em>\n       <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n        <em>\n         str\n        </em>\n       </a>\n       <em>\n        ]\n       </em>\n       ) \u00e2\u0080\u0093\n      </p>\n     </li>\n    </ul>\n   </dd>\n   <dt class="field-even">\n    Return type\n   </dt>\n   <dd class="field-even">\n    <p>\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#list" title="(in Python v3.11)">\n      list\n     </a>\n     [\n     <a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str" title="(in Python v3.11)">\n      str\n     </a>\n     ]\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Command Line Interface",
    type: ["py", "method"],
    name: "command",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.cli.AppGroup.command">\n  <span class="sig-name descname">\n   <span class="pre">\n    command\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="o">\n    <span class="pre">\n     *\n    </span>\n   </span>\n   <span class="n">\n    <span class="pre">\n     args\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="o">\n    <span class="pre">\n     **\n    </span>\n   </span>\n   <span class="n">\n    <span class="pre">\n     kwargs\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.cli.AppGroup.command" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   This works exactly like the method of the same name on a regular\n   <a class="reference external" href="https://click.palletsprojects.com/en/8.1.x/api/#click.Group" title="(in Click v8.1.x)">\n    <code class="xref py py-class docutils literal notranslate">\n     <span class="pre">\n      click.Group\n     </span>\n    </code>\n   </a>\n   but it wraps callbacks in\n   <a class="reference internal" href="#flask.cli.with_appcontext" title="flask.cli.with_appcontext">\n    <code class="xref py py-func docutils literal notranslate">\n     <span class="pre">\n      with_appcontext()\n     </span>\n    </code>\n   </a>\n   unless it\u00e2\u0080\u0099s disabled by passing\n   <code class="docutils literal notranslate">\n    <span class="pre">\n     with_appcontext=False\n    </span>\n   </code>\n   .\n  </p>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Command Line Interface",
    type: ["py", "method"],
    name: "group",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.cli.AppGroup.group">\n  <span class="sig-name descname">\n   <span class="pre">\n    group\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <em class="sig-param">\n   <span class="o">\n    <span class="pre">\n     *\n    </span>\n   </span>\n   <span class="n">\n    <span class="pre">\n     args\n    </span>\n   </span>\n  </em>\n  ,\n  <em class="sig-param">\n   <span class="o">\n    <span class="pre">\n     **\n    </span>\n   </span>\n   <span class="n">\n    <span class="pre">\n     kwargs\n    </span>\n   </span>\n  </em>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.cli.AppGroup.group" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   This works exactly like the method of the same name on a regular\n   <a class="reference external" href="https://click.palletsprojects.com/en/8.1.x/api/#click.Group" title="(in Click v8.1.x)">\n    <code class="xref py py-class docutils literal notranslate">\n     <span class="pre">\n      click.Group\n     </span>\n    </code>\n   </a>\n   but it defaults the group class to\n   <a class="reference internal" href="#flask.cli.AppGroup" title="flask.cli.AppGroup">\n    <code class="xref py py-class docutils literal notranslate">\n     <span class="pre">\n      AppGroup\n     </span>\n    </code>\n   </a>\n   .\n  </p>\n </dd>\n</dl>\n',
  },
  {
    parent_class: "Command Line Interface",
    type: ["py", "method"],
    name: "load_app",
    body: '<dl class="py method">\n <dt class="sig sig-object py" id="flask.cli.ScriptInfo.load_app">\n  <span class="sig-name descname">\n   <span class="pre">\n    load_app\n   </span>\n  </span>\n  <span class="sig-paren">\n   (\n  </span>\n  <span class="sig-paren">\n   )\n  </span>\n  <a class="headerlink" href="#flask.cli.ScriptInfo.load_app" title="Permalink to this definition">\n   \u00c2\u00b6\n  </a>\n </dt>\n <dd>\n  <p>\n   Loads the Flask app (if not yet loaded) and returns it.  Calling\nthis multiple times will just result in the already loaded app to\nbe returned.\n  </p>\n  <dl class="field-list simple">\n   <dt class="field-odd">\n    Return type\n   </dt>\n   <dd class="field-odd">\n    <p>\n     <a class="reference internal" href="#flask.Flask" title="flask.Flask">\n      Flask\n     </a>\n    </p>\n   </dd>\n  </dl>\n </dd>\n</dl>\n',
  },
];

/**
 * Fuse.js v6.6.2 - Lightweight fuzzy-search (http://fusejs.io)
 *
 * Copyright (c) 2022 Kiro Risk (http://kiro.me)
 * All Rights Reserved. Apache Software License 2.0
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 */
var e, t;
(e = this),
  (t = function () {
    "use strict";
    function e(e, t) {
      var n = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var r = Object.getOwnPropertySymbols(e);
        t &&
          (r = r.filter(function (t) {
            return Object.getOwnPropertyDescriptor(e, t).enumerable;
          })),
          n.push.apply(n, r);
      }
      return n;
    }
    function t(t) {
      for (var n = 1; n < arguments.length; n++) {
        var r = null != arguments[n] ? arguments[n] : {};
        n % 2
          ? e(Object(r), !0).forEach(function (e) {
              c(t, e, r[e]);
            })
          : Object.getOwnPropertyDescriptors
          ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r))
          : e(Object(r)).forEach(function (e) {
              Object.defineProperty(
                t,
                e,
                Object.getOwnPropertyDescriptor(r, e)
              );
            });
      }
      return t;
    }
    function n(e) {
      return (
        (n =
          "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
            ? function (e) {
                return typeof e;
              }
            : function (e) {
                return e &&
                  "function" == typeof Symbol &&
                  e.constructor === Symbol &&
                  e !== Symbol.prototype
                  ? "symbol"
                  : typeof e;
              }),
        n(e)
      );
    }
    function r(e, t) {
      if (!(e instanceof t))
        throw new TypeError("Cannot call a class as a function");
    }
    function i(e, t) {
      for (var n = 0; n < t.length; n++) {
        var r = t[n];
        (r.enumerable = r.enumerable || !1),
          (r.configurable = !0),
          "value" in r && (r.writable = !0),
          Object.defineProperty(e, r.key, r);
      }
    }
    function o(e, t, n) {
      return (
        t && i(e.prototype, t),
        n && i(e, n),
        Object.defineProperty(e, "prototype", { writable: !1 }),
        e
      );
    }
    function c(e, t, n) {
      return (
        t in e
          ? Object.defineProperty(e, t, {
              value: n,
              enumerable: !0,
              configurable: !0,
              writable: !0,
            })
          : (e[t] = n),
        e
      );
    }
    function a(e, t) {
      if ("function" != typeof t && null !== t)
        throw new TypeError(
          "Super expression must either be null or a function"
        );
      Object.defineProperty(e, "prototype", {
        value: Object.create(t && t.prototype, {
          constructor: { value: e, writable: !0, configurable: !0 },
        }),
        writable: !1,
      }),
        t && u(e, t);
    }
    function s(e) {
      return (
        (s = Object.setPrototypeOf
          ? Object.getPrototypeOf
          : function (e) {
              return e.__proto__ || Object.getPrototypeOf(e);
            }),
        s(e)
      );
    }
    function u(e, t) {
      return (
        (u =
          Object.setPrototypeOf ||
          function (e, t) {
            return (e.__proto__ = t), e;
          }),
        u(e, t)
      );
    }
    function h(e, t) {
      if (t && ("object" == typeof t || "function" == typeof t)) return t;
      if (void 0 !== t)
        throw new TypeError(
          "Derived constructors may only return object or undefined"
        );
      return (function (e) {
        if (void 0 === e)
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        return e;
      })(e);
    }
    function l(e) {
      var t = (function () {
        if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
        if (Reflect.construct.sham) return !1;
        if ("function" == typeof Proxy) return !0;
        try {
          return (
            Boolean.prototype.valueOf.call(
              Reflect.construct(Boolean, [], function () {})
            ),
            !0
          );
        } catch (e) {
          return !1;
        }
      })();
      return function () {
        var n,
          r = s(e);
        if (t) {
          var i = s(this).constructor;
          n = Reflect.construct(r, arguments, i);
        } else n = r.apply(this, arguments);
        return h(this, n);
      };
    }
    function f(e) {
      return (
        (function (e) {
          if (Array.isArray(e)) return d(e);
        })(e) ||
        (function (e) {
          if (
            ("undefined" != typeof Symbol && null != e[Symbol.iterator]) ||
            null != e["@@iterator"]
          )
            return Array.from(e);
        })(e) ||
        (function (e, t) {
          if (e) {
            if ("string" == typeof e) return d(e, t);
            var n = Object.prototype.toString.call(e).slice(8, -1);
            return (
              "Object" === n && e.constructor && (n = e.constructor.name),
              "Map" === n || "Set" === n
                ? Array.from(e)
                : "Arguments" === n ||
                  /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
                ? d(e, t)
                : void 0
            );
          }
        })(e) ||
        (function () {
          throw new TypeError(
            "Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."
          );
        })()
      );
    }
    function d(e, t) {
      (null == t || t > e.length) && (t = e.length);
      for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
      return r;
    }
    function v(e) {
      return Array.isArray ? Array.isArray(e) : "[object Array]" === b(e);
    }
    function g(e) {
      return "string" == typeof e;
    }
    function y(e) {
      return "number" == typeof e;
    }
    function p(e) {
      return (
        !0 === e ||
        !1 === e ||
        ((function (e) {
          return m(e) && null !== e;
        })(e) &&
          "[object Boolean]" == b(e))
      );
    }
    function m(e) {
      return "object" === n(e);
    }
    function k(e) {
      return null != e;
    }
    function M(e) {
      return !e.trim().length;
    }
    function b(e) {
      return null == e
        ? void 0 === e
          ? "[object Undefined]"
          : "[object Null]"
        : Object.prototype.toString.call(e);
    }
    var x = function (e) {
        return "Invalid value for key ".concat(e);
      },
      w = function (e) {
        return "Pattern length exceeds max of ".concat(e, ".");
      },
      L = Object.prototype.hasOwnProperty,
      S = (function () {
        function e(t) {
          var n = this;
          r(this, e), (this._keys = []), (this._keyMap = {});
          var i = 0;
          t.forEach(function (e) {
            var t = _(e);
            (i += t.weight),
              n._keys.push(t),
              (n._keyMap[t.id] = t),
              (i += t.weight);
          }),
            this._keys.forEach(function (e) {
              e.weight /= i;
            });
        }
        return (
          o(e, [
            {
              key: "get",
              value: function (e) {
                return this._keyMap[e];
              },
            },
            {
              key: "keys",
              value: function () {
                return this._keys;
              },
            },
            {
              key: "toJSON",
              value: function () {
                return JSON.stringify(this._keys);
              },
            },
          ]),
          e
        );
      })();
    function _(e) {
      var t = null,
        n = null,
        r = null,
        i = 1,
        o = null;
      if (g(e) || v(e)) (r = e), (t = O(e)), (n = j(e));
      else {
        if (!L.call(e, "name"))
          throw new Error(
            (function (e) {
              return "Missing ".concat(e, " property in key");
            })("name")
          );
        var c = e.name;
        if (((r = c), L.call(e, "weight") && (i = e.weight) <= 0))
          throw new Error(
            (function (e) {
              return "Property 'weight' in key '".concat(
                e,
                "' must be a positive integer"
              );
            })(c)
          );
        (t = O(c)), (n = j(c)), (o = e.getFn);
      }
      return { path: t, id: n, weight: i, src: r, getFn: o };
    }
    function O(e) {
      return v(e) ? e : e.split(".");
    }
    function j(e) {
      return v(e) ? e.join(".") : e;
    }
    var A = {
        useExtendedSearch: !1,
        getFn: function (e, t) {
          var n = [],
            r = !1;
          return (
            (function e(t, i, o) {
              if (k(t))
                if (i[o]) {
                  var c = t[i[o]];
                  if (!k(c)) return;
                  if (o === i.length - 1 && (g(c) || y(c) || p(c)))
                    n.push(
                      (function (e) {
                        return null == e
                          ? ""
                          : (function (e) {
                              if ("string" == typeof e) return e;
                              var t = e + "";
                              return "0" == t && 1 / e == -1 / 0 ? "-0" : t;
                            })(e);
                      })(c)
                    );
                  else if (v(c)) {
                    r = !0;
                    for (var a = 0, s = c.length; a < s; a += 1)
                      e(c[a], i, o + 1);
                  } else i.length && e(c, i, o + 1);
                } else n.push(t);
            })(e, g(t) ? t.split(".") : t, 0),
            r ? n : n[0]
          );
        },
        ignoreLocation: !1,
        ignoreFieldNorm: !1,
        fieldNormWeight: 1,
      },
      I = t(
        t(
          t(
            t(
              {},
              {
                isCaseSensitive: !1,
                includeScore: !1,
                keys: [],
                shouldSort: !0,
                sortFn: function (e, t) {
                  return e.score === t.score
                    ? e.idx < t.idx
                      ? -1
                      : 1
                    : e.score < t.score
                    ? -1
                    : 1;
                },
              }
            ),
            { includeMatches: !1, findAllMatches: !1, minMatchCharLength: 1 }
          ),
          { location: 0, threshold: 0.6, distance: 100 }
        ),
        A
      ),
      C = /[^ ]+/g;
    function E() {
      var e =
          arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1,
        t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 3,
        n = new Map(),
        r = Math.pow(10, t);
      return {
        get: function (t) {
          var i = t.match(C).length;
          if (n.has(i)) return n.get(i);
          var o = 1 / Math.pow(i, 0.5 * e),
            c = parseFloat(Math.round(o * r) / r);
          return n.set(i, c), c;
        },
        clear: function () {
          n.clear();
        },
      };
    }
    var $ = (function () {
      function e() {
        var t =
            arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
          n = t.getFn,
          i = void 0 === n ? I.getFn : n,
          o = t.fieldNormWeight,
          c = void 0 === o ? I.fieldNormWeight : o;
        r(this, e),
          (this.norm = E(c, 3)),
          (this.getFn = i),
          (this.isCreated = !1),
          this.setIndexRecords();
      }
      return (
        o(e, [
          {
            key: "setSources",
            value: function () {
              var e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : [];
              this.docs = e;
            },
          },
          {
            key: "setIndexRecords",
            value: function () {
              var e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : [];
              this.records = e;
            },
          },
          {
            key: "setKeys",
            value: function () {
              var e = this,
                t =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : [];
              (this.keys = t),
                (this._keysMap = {}),
                t.forEach(function (t, n) {
                  e._keysMap[t.id] = n;
                });
            },
          },
          {
            key: "create",
            value: function () {
              var e = this;
              !this.isCreated &&
                this.docs.length &&
                ((this.isCreated = !0),
                g(this.docs[0])
                  ? this.docs.forEach(function (t, n) {
                      e._addString(t, n);
                    })
                  : this.docs.forEach(function (t, n) {
                      e._addObject(t, n);
                    }),
                this.norm.clear());
            },
          },
          {
            key: "add",
            value: function (e) {
              var t = this.size();
              g(e) ? this._addString(e, t) : this._addObject(e, t);
            },
          },
          {
            key: "removeAt",
            value: function (e) {
              this.records.splice(e, 1);
              for (var t = e, n = this.size(); t < n; t += 1)
                this.records[t].i -= 1;
            },
          },
          {
            key: "getValueForItemAtKeyId",
            value: function (e, t) {
              return e[this._keysMap[t]];
            },
          },
          {
            key: "size",
            value: function () {
              return this.records.length;
            },
          },
          {
            key: "_addString",
            value: function (e, t) {
              if (k(e) && !M(e)) {
                var n = { v: e, i: t, n: this.norm.get(e) };
                this.records.push(n);
              }
            },
          },
          {
            key: "_addObject",
            value: function (e, t) {
              var n = this,
                r = { i: t, $: {} };
              this.keys.forEach(function (t, i) {
                var o = t.getFn ? t.getFn(e) : n.getFn(e, t.path);
                if (k(o))
                  if (v(o))
                    !(function () {
                      for (
                        var e = [], t = [{ nestedArrIndex: -1, value: o }];
                        t.length;

                      ) {
                        var c = t.pop(),
                          a = c.nestedArrIndex,
                          s = c.value;
                        if (k(s))
                          if (g(s) && !M(s)) {
                            var u = { v: s, i: a, n: n.norm.get(s) };
                            e.push(u);
                          } else
                            v(s) &&
                              s.forEach(function (e, n) {
                                t.push({ nestedArrIndex: n, value: e });
                              });
                      }
                      r.$[i] = e;
                    })();
                  else if (g(o) && !M(o)) {
                    var c = { v: o, n: n.norm.get(o) };
                    r.$[i] = c;
                  }
              }),
                this.records.push(r);
            },
          },
          {
            key: "toJSON",
            value: function () {
              return { keys: this.keys, records: this.records };
            },
          },
        ]),
        e
      );
    })();
    function F(e, t) {
      var n =
          arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
        r = n.getFn,
        i = void 0 === r ? I.getFn : r,
        o = n.fieldNormWeight,
        c = void 0 === o ? I.fieldNormWeight : o,
        a = new $({ getFn: i, fieldNormWeight: c });
      return a.setKeys(e.map(_)), a.setSources(t), a.create(), a;
    }
    function R(e) {
      var t =
          arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
        n = t.errors,
        r = void 0 === n ? 0 : n,
        i = t.currentLocation,
        o = void 0 === i ? 0 : i,
        c = t.expectedLocation,
        a = void 0 === c ? 0 : c,
        s = t.distance,
        u = void 0 === s ? I.distance : s,
        h = t.ignoreLocation,
        l = void 0 === h ? I.ignoreLocation : h,
        f = r / e.length;
      if (l) return f;
      var d = Math.abs(a - o);
      return u ? f + d / u : d ? 1 : f;
    }
    function N() {
      for (
        var e =
            arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
          t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : I.minMatchCharLength,
          n = [],
          r = -1,
          i = -1,
          o = 0,
          c = e.length;
        o < c;
        o += 1
      ) {
        var a = e[o];
        a && -1 === r
          ? (r = o)
          : a ||
            -1 === r ||
            ((i = o - 1) - r + 1 >= t && n.push([r, i]), (r = -1));
      }
      return e[o - 1] && o - r >= t && n.push([r, o - 1]), n;
    }
    var P = 32;
    function W(e) {
      for (var t = {}, n = 0, r = e.length; n < r; n += 1) {
        var i = e.charAt(n);
        t[i] = (t[i] || 0) | (1 << (r - n - 1));
      }
      return t;
    }
    var T = (function () {
        function e(t) {
          var n = this,
            i =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : {},
            o = i.location,
            c = void 0 === o ? I.location : o,
            a = i.threshold,
            s = void 0 === a ? I.threshold : a,
            u = i.distance,
            h = void 0 === u ? I.distance : u,
            l = i.includeMatches,
            f = void 0 === l ? I.includeMatches : l,
            d = i.findAllMatches,
            v = void 0 === d ? I.findAllMatches : d,
            g = i.minMatchCharLength,
            y = void 0 === g ? I.minMatchCharLength : g,
            p = i.isCaseSensitive,
            m = void 0 === p ? I.isCaseSensitive : p,
            k = i.ignoreLocation,
            M = void 0 === k ? I.ignoreLocation : k;
          if (
            (r(this, e),
            (this.options = {
              location: c,
              threshold: s,
              distance: h,
              includeMatches: f,
              findAllMatches: v,
              minMatchCharLength: y,
              isCaseSensitive: m,
              ignoreLocation: M,
            }),
            (this.pattern = m ? t : t.toLowerCase()),
            (this.chunks = []),
            this.pattern.length)
          ) {
            var b = function (e, t) {
                n.chunks.push({ pattern: e, alphabet: W(e), startIndex: t });
              },
              x = this.pattern.length;
            if (x > P) {
              for (var w = 0, L = x % P, S = x - L; w < S; )
                b(this.pattern.substr(w, P), w), (w += P);
              if (L) {
                var _ = x - P;
                b(this.pattern.substr(_), _);
              }
            } else b(this.pattern, 0);
          }
        }
        return (
          o(e, [
            {
              key: "searchIn",
              value: function (e) {
                var t = this.options,
                  n = t.isCaseSensitive,
                  r = t.includeMatches;
                if ((n || (e = e.toLowerCase()), this.pattern === e)) {
                  var i = { isMatch: !0, score: 0 };
                  return r && (i.indices = [[0, e.length - 1]]), i;
                }
                var o = this.options,
                  c = o.location,
                  a = o.distance,
                  s = o.threshold,
                  u = o.findAllMatches,
                  h = o.minMatchCharLength,
                  l = o.ignoreLocation,
                  d = [],
                  v = 0,
                  g = !1;
                this.chunks.forEach(function (t) {
                  var n = t.pattern,
                    i = t.alphabet,
                    o = t.startIndex,
                    y = (function (e, t, n) {
                      var r =
                          arguments.length > 3 && void 0 !== arguments[3]
                            ? arguments[3]
                            : {},
                        i = r.location,
                        o = void 0 === i ? I.location : i,
                        c = r.distance,
                        a = void 0 === c ? I.distance : c,
                        s = r.threshold,
                        u = void 0 === s ? I.threshold : s,
                        h = r.findAllMatches,
                        l = void 0 === h ? I.findAllMatches : h,
                        f = r.minMatchCharLength,
                        d = void 0 === f ? I.minMatchCharLength : f,
                        v = r.includeMatches,
                        g = void 0 === v ? I.includeMatches : v,
                        y = r.ignoreLocation,
                        p = void 0 === y ? I.ignoreLocation : y;
                      if (t.length > P) throw new Error(w(P));
                      for (
                        var m,
                          k = t.length,
                          M = e.length,
                          b = Math.max(0, Math.min(o, M)),
                          x = u,
                          L = b,
                          S = d > 1 || g,
                          _ = S ? Array(M) : [];
                        (m = e.indexOf(t, L)) > -1;

                      ) {
                        var O = R(t, {
                          currentLocation: m,
                          expectedLocation: b,
                          distance: a,
                          ignoreLocation: p,
                        });
                        if (((x = Math.min(O, x)), (L = m + k), S))
                          for (var j = 0; j < k; ) (_[m + j] = 1), (j += 1);
                      }
                      L = -1;
                      for (
                        var A = [], C = 1, E = k + M, $ = 1 << (k - 1), F = 0;
                        F < k;
                        F += 1
                      ) {
                        for (var W = 0, T = E; W < T; )
                          R(t, {
                            errors: F,
                            currentLocation: b + T,
                            expectedLocation: b,
                            distance: a,
                            ignoreLocation: p,
                          }) <= x
                            ? (W = T)
                            : (E = T),
                            (T = Math.floor((E - W) / 2 + W));
                        E = T;
                        var z = Math.max(1, b - T + 1),
                          D = l ? M : Math.min(b + T, M) + k,
                          K = Array(D + 2);
                        K[D + 1] = (1 << F) - 1;
                        for (var q = D; q >= z; q -= 1) {
                          var B = q - 1,
                            J = n[e.charAt(B)];
                          if (
                            (S && (_[B] = +!!J),
                            (K[q] = ((K[q + 1] << 1) | 1) & J),
                            F &&
                              (K[q] |= ((A[q + 1] | A[q]) << 1) | 1 | A[q + 1]),
                            K[q] & $ &&
                              (C = R(t, {
                                errors: F,
                                currentLocation: B,
                                expectedLocation: b,
                                distance: a,
                                ignoreLocation: p,
                              })) <= x)
                          ) {
                            if (((x = C), (L = B) <= b)) break;
                            z = Math.max(1, 2 * b - L);
                          }
                        }
                        if (
                          R(t, {
                            errors: F + 1,
                            currentLocation: b,
                            expectedLocation: b,
                            distance: a,
                            ignoreLocation: p,
                          }) > x
                        )
                          break;
                        A = K;
                      }
                      var U = { isMatch: L >= 0, score: Math.max(0.001, C) };
                      if (S) {
                        var V = N(_, d);
                        V.length ? g && (U.indices = V) : (U.isMatch = !1);
                      }
                      return U;
                    })(e, n, i, {
                      location: c + o,
                      distance: a,
                      threshold: s,
                      findAllMatches: u,
                      minMatchCharLength: h,
                      includeMatches: r,
                      ignoreLocation: l,
                    }),
                    p = y.isMatch,
                    m = y.score,
                    k = y.indices;
                  p && (g = !0),
                    (v += m),
                    p && k && (d = [].concat(f(d), f(k)));
                });
                var y = { isMatch: g, score: g ? v / this.chunks.length : 1 };
                return g && r && (y.indices = d), y;
              },
            },
          ]),
          e
        );
      })(),
      z = (function () {
        function e(t) {
          r(this, e), (this.pattern = t);
        }
        return (
          o(
            e,
            [{ key: "search", value: function () {} }],
            [
              {
                key: "isMultiMatch",
                value: function (e) {
                  return D(e, this.multiRegex);
                },
              },
              {
                key: "isSingleMatch",
                value: function (e) {
                  return D(e, this.singleRegex);
                },
              },
            ]
          ),
          e
        );
      })();
    function D(e, t) {
      var n = e.match(t);
      return n ? n[1] : null;
    }
    var K = (function (e) {
        a(n, e);
        var t = l(n);
        function n(e) {
          return r(this, n), t.call(this, e);
        }
        return (
          o(
            n,
            [
              {
                key: "search",
                value: function (e) {
                  var t = e === this.pattern;
                  return {
                    isMatch: t,
                    score: t ? 0 : 1,
                    indices: [0, this.pattern.length - 1],
                  };
                },
              },
            ],
            [
              {
                key: "type",
                get: function () {
                  return "exact";
                },
              },
              {
                key: "multiRegex",
                get: function () {
                  return /^="(.*)"$/;
                },
              },
              {
                key: "singleRegex",
                get: function () {
                  return /^=(.*)$/;
                },
              },
            ]
          ),
          n
        );
      })(z),
      q = (function (e) {
        a(n, e);
        var t = l(n);
        function n(e) {
          return r(this, n), t.call(this, e);
        }
        return (
          o(
            n,
            [
              {
                key: "search",
                value: function (e) {
                  var t = -1 === e.indexOf(this.pattern);
                  return {
                    isMatch: t,
                    score: t ? 0 : 1,
                    indices: [0, e.length - 1],
                  };
                },
              },
            ],
            [
              {
                key: "type",
                get: function () {
                  return "inverse-exact";
                },
              },
              {
                key: "multiRegex",
                get: function () {
                  return /^!"(.*)"$/;
                },
              },
              {
                key: "singleRegex",
                get: function () {
                  return /^!(.*)$/;
                },
              },
            ]
          ),
          n
        );
      })(z),
      B = (function (e) {
        a(n, e);
        var t = l(n);
        function n(e) {
          return r(this, n), t.call(this, e);
        }
        return (
          o(
            n,
            [
              {
                key: "search",
                value: function (e) {
                  var t = e.startsWith(this.pattern);
                  return {
                    isMatch: t,
                    score: t ? 0 : 1,
                    indices: [0, this.pattern.length - 1],
                  };
                },
              },
            ],
            [
              {
                key: "type",
                get: function () {
                  return "prefix-exact";
                },
              },
              {
                key: "multiRegex",
                get: function () {
                  return /^\^"(.*)"$/;
                },
              },
              {
                key: "singleRegex",
                get: function () {
                  return /^\^(.*)$/;
                },
              },
            ]
          ),
          n
        );
      })(z),
      J = (function (e) {
        a(n, e);
        var t = l(n);
        function n(e) {
          return r(this, n), t.call(this, e);
        }
        return (
          o(
            n,
            [
              {
                key: "search",
                value: function (e) {
                  var t = !e.startsWith(this.pattern);
                  return {
                    isMatch: t,
                    score: t ? 0 : 1,
                    indices: [0, e.length - 1],
                  };
                },
              },
            ],
            [
              {
                key: "type",
                get: function () {
                  return "inverse-prefix-exact";
                },
              },
              {
                key: "multiRegex",
                get: function () {
                  return /^!\^"(.*)"$/;
                },
              },
              {
                key: "singleRegex",
                get: function () {
                  return /^!\^(.*)$/;
                },
              },
            ]
          ),
          n
        );
      })(z),
      U = (function (e) {
        a(n, e);
        var t = l(n);
        function n(e) {
          return r(this, n), t.call(this, e);
        }
        return (
          o(
            n,
            [
              {
                key: "search",
                value: function (e) {
                  var t = e.endsWith(this.pattern);
                  return {
                    isMatch: t,
                    score: t ? 0 : 1,
                    indices: [e.length - this.pattern.length, e.length - 1],
                  };
                },
              },
            ],
            [
              {
                key: "type",
                get: function () {
                  return "suffix-exact";
                },
              },
              {
                key: "multiRegex",
                get: function () {
                  return /^"(.*)"\$$/;
                },
              },
              {
                key: "singleRegex",
                get: function () {
                  return /^(.*)\$$/;
                },
              },
            ]
          ),
          n
        );
      })(z),
      V = (function (e) {
        a(n, e);
        var t = l(n);
        function n(e) {
          return r(this, n), t.call(this, e);
        }
        return (
          o(
            n,
            [
              {
                key: "search",
                value: function (e) {
                  var t = !e.endsWith(this.pattern);
                  return {
                    isMatch: t,
                    score: t ? 0 : 1,
                    indices: [0, e.length - 1],
                  };
                },
              },
            ],
            [
              {
                key: "type",
                get: function () {
                  return "inverse-suffix-exact";
                },
              },
              {
                key: "multiRegex",
                get: function () {
                  return /^!"(.*)"\$$/;
                },
              },
              {
                key: "singleRegex",
                get: function () {
                  return /^!(.*)\$$/;
                },
              },
            ]
          ),
          n
        );
      })(z),
      G = (function (e) {
        a(n, e);
        var t = l(n);
        function n(e) {
          var i,
            o =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : {},
            c = o.location,
            a = void 0 === c ? I.location : c,
            s = o.threshold,
            u = void 0 === s ? I.threshold : s,
            h = o.distance,
            l = void 0 === h ? I.distance : h,
            f = o.includeMatches,
            d = void 0 === f ? I.includeMatches : f,
            v = o.findAllMatches,
            g = void 0 === v ? I.findAllMatches : v,
            y = o.minMatchCharLength,
            p = void 0 === y ? I.minMatchCharLength : y,
            m = o.isCaseSensitive,
            k = void 0 === m ? I.isCaseSensitive : m,
            M = o.ignoreLocation,
            b = void 0 === M ? I.ignoreLocation : M;
          return (
            r(this, n),
            ((i = t.call(this, e))._bitapSearch = new T(e, {
              location: a,
              threshold: u,
              distance: l,
              includeMatches: d,
              findAllMatches: g,
              minMatchCharLength: p,
              isCaseSensitive: k,
              ignoreLocation: b,
            })),
            i
          );
        }
        return (
          o(
            n,
            [
              {
                key: "search",
                value: function (e) {
                  return this._bitapSearch.searchIn(e);
                },
              },
            ],
            [
              {
                key: "type",
                get: function () {
                  return "fuzzy";
                },
              },
              {
                key: "multiRegex",
                get: function () {
                  return /^"(.*)"$/;
                },
              },
              {
                key: "singleRegex",
                get: function () {
                  return /^(.*)$/;
                },
              },
            ]
          ),
          n
        );
      })(z),
      H = (function (e) {
        a(n, e);
        var t = l(n);
        function n(e) {
          return r(this, n), t.call(this, e);
        }
        return (
          o(
            n,
            [
              {
                key: "search",
                value: function (e) {
                  for (
                    var t, n = 0, r = [], i = this.pattern.length;
                    (t = e.indexOf(this.pattern, n)) > -1;

                  )
                    (n = t + i), r.push([t, n - 1]);
                  var o = !!r.length;
                  return { isMatch: o, score: o ? 0 : 1, indices: r };
                },
              },
            ],
            [
              {
                key: "type",
                get: function () {
                  return "include";
                },
              },
              {
                key: "multiRegex",
                get: function () {
                  return /^'"(.*)"$/;
                },
              },
              {
                key: "singleRegex",
                get: function () {
                  return /^'(.*)$/;
                },
              },
            ]
          ),
          n
        );
      })(z),
      Q = [K, H, B, J, V, U, q, G],
      X = Q.length,
      Y = / +(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)/;
    function Z(e) {
      var t =
        arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
      return e.split("|").map(function (e) {
        for (
          var n = e
              .trim()
              .split(Y)
              .filter(function (e) {
                return e && !!e.trim();
              }),
            r = [],
            i = 0,
            o = n.length;
          i < o;
          i += 1
        ) {
          for (var c = n[i], a = !1, s = -1; !a && ++s < X; ) {
            var u = Q[s],
              h = u.isMultiMatch(c);
            h && (r.push(new u(h, t)), (a = !0));
          }
          if (!a)
            for (s = -1; ++s < X; ) {
              var l = Q[s],
                f = l.isSingleMatch(c);
              if (f) {
                r.push(new l(f, t));
                break;
              }
            }
        }
        return r;
      });
    }
    var ee = new Set([G.type, H.type]),
      te = (function () {
        function e(t) {
          var n =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : {},
            i = n.isCaseSensitive,
            o = void 0 === i ? I.isCaseSensitive : i,
            c = n.includeMatches,
            a = void 0 === c ? I.includeMatches : c,
            s = n.minMatchCharLength,
            u = void 0 === s ? I.minMatchCharLength : s,
            h = n.ignoreLocation,
            l = void 0 === h ? I.ignoreLocation : h,
            f = n.findAllMatches,
            d = void 0 === f ? I.findAllMatches : f,
            v = n.location,
            g = void 0 === v ? I.location : v,
            y = n.threshold,
            p = void 0 === y ? I.threshold : y,
            m = n.distance,
            k = void 0 === m ? I.distance : m;
          r(this, e),
            (this.query = null),
            (this.options = {
              isCaseSensitive: o,
              includeMatches: a,
              minMatchCharLength: u,
              findAllMatches: d,
              ignoreLocation: l,
              location: g,
              threshold: p,
              distance: k,
            }),
            (this.pattern = o ? t : t.toLowerCase()),
            (this.query = Z(this.pattern, this.options));
        }
        return (
          o(
            e,
            [
              {
                key: "searchIn",
                value: function (e) {
                  var t = this.query;
                  if (!t) return { isMatch: !1, score: 1 };
                  var n = this.options,
                    r = n.includeMatches;
                  e = n.isCaseSensitive ? e : e.toLowerCase();
                  for (
                    var i = 0, o = [], c = 0, a = 0, s = t.length;
                    a < s;
                    a += 1
                  ) {
                    var u = t[a];
                    (o.length = 0), (i = 0);
                    for (var h = 0, l = u.length; h < l; h += 1) {
                      var d = u[h],
                        v = d.search(e),
                        g = v.isMatch,
                        y = v.indices,
                        p = v.score;
                      if (!g) {
                        (c = 0), (i = 0), (o.length = 0);
                        break;
                      }
                      if (((i += 1), (c += p), r)) {
                        var m = d.constructor.type;
                        ee.has(m) ? (o = [].concat(f(o), f(y))) : o.push(y);
                      }
                    }
                    if (i) {
                      var k = { isMatch: !0, score: c / i };
                      return r && (k.indices = o), k;
                    }
                  }
                  return { isMatch: !1, score: 1 };
                },
              },
            ],
            [
              {
                key: "condition",
                value: function (e, t) {
                  return t.useExtendedSearch;
                },
              },
            ]
          ),
          e
        );
      })(),
      ne = [];
    function re(e, t) {
      for (var n = 0, r = ne.length; n < r; n += 1) {
        var i = ne[n];
        if (i.condition(e, t)) return new i(e, t);
      }
      return new T(e, t);
    }
    var ie = "$and",
      oe = "$or",
      ce = "$path",
      ae = "$val",
      se = function (e) {
        return !(!e[ie] && !e[oe]);
      },
      ue = function (e) {
        return !!e[ce];
      },
      he = function (e) {
        return !v(e) && m(e) && !se(e);
      },
      le = function (e) {
        return c(
          {},
          ie,
          Object.keys(e).map(function (t) {
            return c({}, t, e[t]);
          })
        );
      };
    function fe(e, t) {
      var n = t.ignoreFieldNorm,
        r = void 0 === n ? I.ignoreFieldNorm : n;
      e.forEach(function (e) {
        var t = 1;
        e.matches.forEach(function (e) {
          var n = e.key,
            i = e.norm,
            o = e.score,
            c = n ? n.weight : null;
          t *= Math.pow(
            0 === o && c ? Number.EPSILON : o,
            (c || 1) * (r ? 1 : i)
          );
        }),
          (e.score = t);
      });
    }
    function de(e, t) {
      var n = e.matches;
      (t.matches = []),
        k(n) &&
          n.forEach(function (e) {
            if (k(e.indices) && e.indices.length) {
              var n = { indices: e.indices, value: e.value };
              e.key && (n.key = e.key.src),
                e.idx > -1 && (n.refIndex = e.idx),
                t.matches.push(n);
            }
          });
    }
    function ve(e, t) {
      t.score = e.score;
    }
    function ge(e, t) {
      var n =
          arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
        r = n.includeMatches,
        i = void 0 === r ? I.includeMatches : r,
        o = n.includeScore,
        c = void 0 === o ? I.includeScore : o,
        a = [];
      return (
        i && a.push(de),
        c && a.push(ve),
        e.map(function (e) {
          var n = e.idx,
            r = { item: t[n], refIndex: n };
          return (
            a.length &&
              a.forEach(function (t) {
                t(e, r);
              }),
            r
          );
        })
      );
    }
    var ye = (function () {
      function e(n) {
        var i =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
          o = arguments.length > 2 ? arguments[2] : void 0;
        r(this, e),
          (this.options = t(t({}, I), i)),
          this.options.useExtendedSearch,
          (this._keyStore = new S(this.options.keys)),
          this.setCollection(n, o);
      }
      return (
        o(e, [
          {
            key: "setCollection",
            value: function (e, t) {
              if (((this._docs = e), t && !(t instanceof $)))
                throw new Error("Incorrect 'index' type");
              this._myIndex =
                t ||
                F(this.options.keys, this._docs, {
                  getFn: this.options.getFn,
                  fieldNormWeight: this.options.fieldNormWeight,
                });
            },
          },
          {
            key: "add",
            value: function (e) {
              k(e) && (this._docs.push(e), this._myIndex.add(e));
            },
          },
          {
            key: "remove",
            value: function () {
              for (
                var e =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : function () {
                          return !1;
                        },
                  t = [],
                  n = 0,
                  r = this._docs.length;
                n < r;
                n += 1
              ) {
                var i = this._docs[n];
                e(i, n) && (this.removeAt(n), (n -= 1), (r -= 1), t.push(i));
              }
              return t;
            },
          },
          {
            key: "removeAt",
            value: function (e) {
              this._docs.splice(e, 1), this._myIndex.removeAt(e);
            },
          },
          {
            key: "getIndex",
            value: function () {
              return this._myIndex;
            },
          },
          {
            key: "search",
            value: function (e) {
              var t =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : {},
                n = t.limit,
                r = void 0 === n ? -1 : n,
                i = this.options,
                o = i.includeMatches,
                c = i.includeScore,
                a = i.shouldSort,
                s = i.sortFn,
                u = i.ignoreFieldNorm,
                h = g(e)
                  ? g(this._docs[0])
                    ? this._searchStringList(e)
                    : this._searchObjectList(e)
                  : this._searchLogical(e);
              return (
                fe(h, { ignoreFieldNorm: u }),
                a && h.sort(s),
                y(r) && r > -1 && (h = h.slice(0, r)),
                ge(h, this._docs, { includeMatches: o, includeScore: c })
              );
            },
          },
          {
            key: "_searchStringList",
            value: function (e) {
              var t = re(e, this.options),
                n = this._myIndex.records,
                r = [];
              return (
                n.forEach(function (e) {
                  var n = e.v,
                    i = e.i,
                    o = e.n;
                  if (k(n)) {
                    var c = t.searchIn(n),
                      a = c.isMatch,
                      s = c.score,
                      u = c.indices;
                    a &&
                      r.push({
                        item: n,
                        idx: i,
                        matches: [{ score: s, value: n, norm: o, indices: u }],
                      });
                  }
                }),
                r
              );
            },
          },
          {
            key: "_searchLogical",
            value: function (e) {
              var t = this,
                n = (function (e, t) {
                  var n = (
                      arguments.length > 2 && void 0 !== arguments[2]
                        ? arguments[2]
                        : {}
                    ).auto,
                    r = void 0 === n || n,
                    i = function e(n) {
                      var i = Object.keys(n),
                        o = ue(n);
                      if (!o && i.length > 1 && !se(n)) return e(le(n));
                      if (he(n)) {
                        var c = o ? n[ce] : i[0],
                          a = o ? n[ae] : n[c];
                        if (!g(a)) throw new Error(x(c));
                        var s = { keyId: j(c), pattern: a };
                        return r && (s.searcher = re(a, t)), s;
                      }
                      var u = { children: [], operator: i[0] };
                      return (
                        i.forEach(function (t) {
                          var r = n[t];
                          v(r) &&
                            r.forEach(function (t) {
                              u.children.push(e(t));
                            });
                        }),
                        u
                      );
                    };
                  return se(e) || (e = le(e)), i(e);
                })(e, this.options),
                r = function e(n, r, i) {
                  if (!n.children) {
                    var o = n.keyId,
                      c = n.searcher,
                      a = t._findMatches({
                        key: t._keyStore.get(o),
                        value: t._myIndex.getValueForItemAtKeyId(r, o),
                        searcher: c,
                      });
                    return a && a.length
                      ? [{ idx: i, item: r, matches: a }]
                      : [];
                  }
                  for (
                    var s = [], u = 0, h = n.children.length;
                    u < h;
                    u += 1
                  ) {
                    var l = e(n.children[u], r, i);
                    if (l.length) s.push.apply(s, f(l));
                    else if (n.operator === ie) return [];
                  }
                  return s;
                },
                i = this._myIndex.records,
                o = {},
                c = [];
              return (
                i.forEach(function (e) {
                  var t = e.$,
                    i = e.i;
                  if (k(t)) {
                    var a = r(n, t, i);
                    a.length &&
                      (o[i] ||
                        ((o[i] = { idx: i, item: t, matches: [] }),
                        c.push(o[i])),
                      a.forEach(function (e) {
                        var t,
                          n = e.matches;
                        (t = o[i].matches).push.apply(t, f(n));
                      }));
                  }
                }),
                c
              );
            },
          },
          {
            key: "_searchObjectList",
            value: function (e) {
              var t = this,
                n = re(e, this.options),
                r = this._myIndex,
                i = r.keys,
                o = r.records,
                c = [];
              return (
                o.forEach(function (e) {
                  var r = e.$,
                    o = e.i;
                  if (k(r)) {
                    var a = [];
                    i.forEach(function (e, i) {
                      a.push.apply(
                        a,
                        f(t._findMatches({ key: e, value: r[i], searcher: n }))
                      );
                    }),
                      a.length && c.push({ idx: o, item: r, matches: a });
                  }
                }),
                c
              );
            },
          },
          {
            key: "_findMatches",
            value: function (e) {
              var t = e.key,
                n = e.value,
                r = e.searcher;
              if (!k(n)) return [];
              var i = [];
              if (v(n))
                n.forEach(function (e) {
                  var n = e.v,
                    o = e.i,
                    c = e.n;
                  if (k(n)) {
                    var a = r.searchIn(n),
                      s = a.isMatch,
                      u = a.score,
                      h = a.indices;
                    s &&
                      i.push({
                        score: u,
                        key: t,
                        value: n,
                        idx: o,
                        norm: c,
                        indices: h,
                      });
                  }
                });
              else {
                var o = n.v,
                  c = n.n,
                  a = r.searchIn(o),
                  s = a.isMatch,
                  u = a.score,
                  h = a.indices;
                s &&
                  i.push({ score: u, key: t, value: o, norm: c, indices: h });
              }
              return i;
            },
          },
        ]),
        e
      );
    })();
    return (
      (ye.version = "6.6.2"),
      (ye.createIndex = F),
      (ye.parseIndex = function (e) {
        var t =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
          n = t.getFn,
          r = void 0 === n ? I.getFn : n,
          i = t.fieldNormWeight,
          o = void 0 === i ? I.fieldNormWeight : i,
          c = e.keys,
          a = e.records,
          s = new $({ getFn: r, fieldNormWeight: o });
        return s.setKeys(c), s.setIndexRecords(a), s;
      }),
      (ye.config = I),
      (function () {
        ne.push.apply(ne, arguments);
      })(te),
      ye
    );
  }),
  "object" == typeof exports && "undefined" != typeof module
    ? (module.exports = t())
    : "function" == typeof define && define.amd
    ? define(t)
    : ((e = "undefined" != typeof globalThis ? globalThis : e || self).Fuse =
        t());

// Hamle lekhya code
const options = {
  isCaseSensitive: false,
  includeScore: false,
  // shouldSort: true,
  // includeMatches: false,
  // findAllMatches: true,
  // minMatchCharLength: 1,
  // location: 0,
  threshold: 0.3,
  // distance: 100,
  useExtendedSearch: true,
  // ignoreLocation: false,
  // ignoreFieldNorm: false,
  // fieldNormWeight: 1,
  keys: ["name"],
};

function search(keyword, language) {
  if (language == "flask") {
    const fuse = new Fuse(flask, options);
    let toSearch = keyword;
    return fuse.search(toSearch);
  }
}

const vscode = acquireVsCodeApi();

// Handle messages sent from the extension to the webview
window.addEventListener("message", (event) => {
  const message = event.data; // The json data that the extension sent
  switch (message.type) {
    case "findDocs": {
      findDocs(message.selection, message.language);
    }
  }
});

app = document.querySelector("#app");

function findDocs(selection, language) {
  console.log("IM RUNNING");
  let searched = search(selection, "flask");
  console.log(searched);
  if (searched.length == 0) {
    console.log("NOOO");
    app.innerHTML = `No results found. Please select a valid keyword and try again.`;
  } else {
    app.innerHTML = "";
    searched.forEach((searchItm, idx) => {
      app.innerHTML += `
        <details ${idx == 0 ? "open" : ""}>
        <summary>
          ${searchItm.item.name}
        </summary>
        <div>
          <p>
          ${searchItm.item.body}
          </p>
        </div>
        </details>
        </br>
      `;
    });
  }

  // searched.forEach((searchItm) => {
  //   app.innerHTML += searchItm.item.body;
  //   app.innerHTML += "</br>";
  // });
  //   app.innerHTML = testHTML;
  document.querySelectorAll("pre").forEach((preBlock) => {
    // Inserting a code element inside pre element
    let codeBlock = document.createElement("code");
    codeBlock.innerHTML = preBlock.innerHTML;
    preBlock.innerHTML = "";
    preBlock.appendChild(codeBlock);

    const button = document.createElement("button");
    let text = document.createTextNode("Add Snippet");
    button.appendChild(text);
    preBlock.parentElement.appendChild(button);
    button.addEventListener("click", () => {
      vscode.postMessage({ type: "addSnippet", value: codeBlock.textContent });
    });
  });
}
